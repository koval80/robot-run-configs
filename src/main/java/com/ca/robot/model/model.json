{
  "generated": "20180125 19:08:52 GMT +03:00",
  "generatedMillis": 1516900132000,
  "suite": {
    "doc": "",
    "fullName": "Cdd-Plugins",
    "id": "s1",
    "keywords": [],
    "metadata": [],
    "name": "Cdd-Plugins",
    "numberOfTests": 552,
    "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins",
    "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins",
    "suites": [{
      "doc": "",
      "fullName": "Cdd-Plugins.Artifactory",
      "id": "s1-s1",
      "keywords": [],
      "metadata": [],
      "name": "Artifactory",
      "numberOfTests": 20,
      "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/artifactory",
      "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\artifactory",
      "suites": [{
        "doc": "<p>A testing suite for testing the ARTIFACTORY plugin\x3c/p>",
        "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin",
        "id": "s1-s1-s1",
        "keywords": [],
        "metadata": [["Author: Ahaz Israeli",
          ""]],
        "name": "31 Artifactory Plugin",
        "numberOfTests": 20,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/artifactory/31_artifactory_plugin.robot",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\artifactory\\31_artifactory_plugin.robot",
        "suites": [],
        "tests": [{
          "doc": "",
          "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.01 - Get Manifest From Artifactory Plugin",
          "id": "s1-s1-s1-t1",
          "keywords": [{
            "arguments": "${ARTIFACTORY_PLUGIN_URL}/manifest.json",
            "name": "${manifest} = Get Manifest",
            "type": "KEYWORD"
          },
            {
              "arguments": "${manifest}, Artifactory, 1.1, CA Technologies Artifactory, CA Technologies",
              "name": "Validate Manifest by name version uniqueId and vendor",
              "type": "KEYWORD"
            },
            {
              "arguments": "${manifest}",
              "name": "Log",
              "type": "KEYWORD"
            }],
          "name": "01 - Get Manifest From Artifactory Plugin",
          "tags": ["ARTIFACTORY"],
          "timeout": "5 minutes"
        },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
            "id": "s1-s1-s1-t2",
            "keywords": [{
              "arguments": "${ARTIFACTORY_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}",
                "name": "${response} = Validate Manifest Fields",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.03 - Good Connectivity Test",
            "id": "s1-s1-s1-t3",
            "keywords": [{
              "arguments": "${ARTIFACTORY_REGISTRY}, ${ARTIFACTORY_USER}, ${ARTIFACTORY_PASSWORD}",
              "name": "${response} = Artifactory Connection Test",
              "type": "KEYWORD"
            },
              {
                "arguments": "${response.success}",
                "name": "Should Be True",
                "type": "KEYWORD"
              }],
            "name": "03 - Good Connectivity Test",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.04 - Negative Connectivity Test Unknown User",
            "id": "s1-s1-s1-t4",
            "keywords": [{
              "arguments": "${NON_EXISTING_USER}, nonExistingUser",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "${ARTIFACTORY_REGISTRY}, ${NON_EXISTING_USER}, ${ARTIFACTORY_PASSWORD}",
                "name": "${response} = Artifactory Connection Test",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${BAD_CREDENTIALS}",
                "name": "Should Be Equal As Strings",
                "type": "KEYWORD"
              }],
            "name": "04 - Negative Connectivity Test Unknown User",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.05 - Negative Connectivity Test Unknown Password",
            "id": "s1-s1-s1-t5",
            "keywords": [{
              "arguments": "${BAD_PASSWORD}, badPassword",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "${ARTIFACTORY_REGISTRY}, ${ARTIFACTORY_USER}, ${BAD_PASSWORD}",
                "name": "${response} = Artifactory Connection Test",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${BAD_CREDENTIALS}",
                "name": "Should Be Equal As Strings",
                "type": "KEYWORD"
              }],
            "name": "05 - Negative Connectivity Test Unknown Password",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.06 - Negative Connectivity Test Wrong Artifactory URL",
            "id": "s1-s1-s1-t6",
            "keywords": [{
              "arguments": "${BAD_HOST_NAME}, qpr-dsdc.ca.com",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "${BAD_REGISTRY}, <a href=\"http://${BAD_HOST_NAME}\">http://${BAD_HOST_NAME}\x3c/a>",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${BAD_REGISTRY}, ${ARTIFACTORY_USER}, ${ARTIFACTORY_PASSWORD}",
                "name": "${response} = Artifactory Connection Test",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${BAD_HOST_NAME}",
                "name": "Should Match Regexp",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, is unknown",
                "name": "Should Match Regexp",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, Please check your registry settings",
                "name": "Should Match Regexp",
                "type": "KEYWORD"
              }],
            "name": "06 - Negative Connectivity Test Wrong Artifactory URL",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.07 - Negative Connectivity Test Empty User",
            "id": "s1-s1-s1-t7",
            "keywords": [{
              "arguments": "${ARTIFACTORY_REGISTRY}, ${EMPTY}, ${ARTIFACTORY_PASSWORD}",
              "name": "${response} = Artifactory Connection Test",
              "type": "KEYWORD"
            },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${MISSING_ENDPOINT_PARAM}",
                "name": "Should Be Equal As Strings",
                "type": "KEYWORD"
              }],
            "name": "07 - Negative Connectivity Test Empty User",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.08 - Negative Connectivity Test Empty Password",
            "id": "s1-s1-s1-t8",
            "keywords": [{
              "arguments": "${ARTIFACTORY_REGISTRY}, ${ARTIFACTORY_USER}, ${EMPTY}",
              "name": "${response} = Artifactory Connection Test",
              "type": "KEYWORD"
            },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${MISSING_ENDPOINT_PARAM}",
                "name": "Should Be Equal As Strings",
                "type": "KEYWORD"
              }],
            "name": "08 - Negative Connectivity Test Empty Password",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.09 - Negative Connectivity Test Empty Artifactory URL",
            "id": "s1-s1-s1-t9",
            "keywords": [{
              "arguments": "${EMPTY}, ${ARTIFACTORY_USER}, ${ARTIFACTORY_PASSWORD}",
              "name": "${response} = Artifactory Connection Test",
              "type": "KEYWORD"
            },
              {
                "arguments": "${response.success}",
                "name": "Should Not Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${response.errorMessage}, ${MISSING_ENDPOINT_PARAM}",
                "name": "Should Be Equal As Strings",
                "type": "KEYWORD"
              }],
            "name": "09 - Negative Connectivity Test Empty Artifactory URL",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.10 - Get All Source Repositories",
            "id": "s1-s1-s1-t10",
            "keywords": [{
              "arguments": "",
              "name": "${ep_properties} = Generate Good Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                "name": "${result} = Execute POST Operation Class",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result.values}, ${DEFAULT_ITEMS_COUNT}",
                "name": "Length Should Be",
                "type": "KEYWORD"
              }],
            "name": "10 - Get All Source Repositories",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.11 - Get Filtered Source Repositories",
            "id": "s1-s1-s1-t11",
            "keywords": [{
              "arguments": "",
              "name": "${ep_properties} = Generate Good Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}?filter=docker, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                "name": "${result} = Execute POST Operation Class",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result.values}",
                "name": "${reposCount} = Get Length",
                "type": "KEYWORD"
              },
              {
                "arguments": "${reposCount} &gt;= 4",
                "name": "Should Be True",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result.values}, docker-release-candidate-local, docker-release-local, docker-repo, docker-rc-repo",
                "name": "Dynamic Values Should Contain Values",
                "type": "KEYWORD"
              }],
            "name": "11 - Get Filtered Source Repositories",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.12 - Get Five Source Repositories",
            "id": "s1-s1-s1-t12",
            "keywords": [{
              "arguments": "${count}, 5",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                "name": "${result} = Execute POST Operation Class",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result.values}, ${count}",
                "name": "Length Should Be",
                "type": "KEYWORD"
              }],
            "name": "12 - Get Five Source Repositories",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.13 - Get Many Many Source Repositories",
            "id": "s1-s1-s1-t13",
            "keywords": [{
              "arguments": "${count}, 999999",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                "name": "${result} = Execute POST Operation Class",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result.values}",
                "name": "${reposCount} = Get Length",
                "type": "KEYWORD"
              },
              {
                "arguments": "${reposCount} &gt; ${DEFAULT_ITEMS_COUNT}",
                "name": "Should Be True",
                "type": "KEYWORD"
              }],
            "name": "13 - Get Many Many Source Repositories",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.14 - Negative Get Source Repositories with bad credenitals",
            "id": "s1-s1-s1-t14",
            "keywords": [{
              "arguments": "${ARTIFACTORY_REGISTRY}, ${ARTIFACTORY_USER}, badPassword",
              "name": "${ep_properties} = Generate Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}, ${properties}",
                "name": "${result} = Execute POST Operation",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, UNEXPECTED, Failed retrieving repositories from '${ARTIFACTORY_REGISTRY}' with user '${ARTIFACTORY_USER}'. Reason: Unauthorized",
                "name": "Verify Error Within String Response",
                "type": "KEYWORD"
              }],
            "name": "14 - Negative Get Source Repositories with bad credenitals",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.15 - Negative Get Source Repositories with empty user name",
            "id": "s1-s1-s1-t15",
            "keywords": [{
              "arguments": "${ARTIFACTORY_REGISTRY}, ${EMPTY}, ${ARTIFACTORY_PASSWORD}",
              "name": "${ep_properties} = Generate Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${properties}, { ${ep_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_GET_SRC_REPOS_URL}, ${properties}",
                "name": "${result} = Execute POST Operation",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, UNEXPECTED, Failed retrieving repositories from '${ARTIFACTORY_REGISTRY}' with user ''. Reason: Endpoint is missing mandatory parameters",
                "name": "Verify Error Within String Response",
                "type": "KEYWORD"
              }],
            "name": "15 - Negative Get Source Repositories with empty user name",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.16 - Negative Distribute Artifact With Empty Source Repository",
            "id": "s1-s1-s1-t16",
            "keywords": [{
              "arguments": "",
              "name": "${ep_properties} = Generate Good Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${EMPTY}, ${GOOD_TARGET_REPO}, ${GOOD_IMAGE}, ${GOOD_TAG}",
                "name": "${task_properties} = Generate Distribute Artifact Properties",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_DIST_ARTIFACT_URL}, ${properties}, execute",
                "name": "${result} = Execute Task",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, FAILED, Invalid Input, Endpoint is missing mandatory parameters",
                "name": "Validate Task Execution Results",
                "type": "KEYWORD"
              }],
            "name": "16 - Negative Distribute Artifact With Empty Source Repository",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.17 - Negative Distribute Artifact With Unknown Source Repository",
            "id": "s1-s1-s1-t17",
            "keywords": [{
              "arguments": "${unknown}, UnknownSourceRepository",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
              {
                "arguments": "${unknown}, ${GOOD_TARGET_REPO}, ${GOOD_IMAGE}, ${GOOD_TAG}",
                "name": "${task_properties} = Generate Distribute Artifact Properties",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_DIST_ARTIFACT_URL}, ${properties}, execute",
                "name": "${result} = Execute Task",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, FAILED, Invalid Input, Source repository: '${unknown}' does not exist.",
                "name": "Validate Task Execution Results",
                "type": "KEYWORD"
              }],
            "name": "17 - Negative Distribute Artifact With Unknown Source Repository",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.18 - Negative Distribute Artifact With Unknown Image",
            "id": "s1-s1-s1-t18",
            "keywords": [{
              "arguments": "${unknown}, UnknownImage",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
              {
                "arguments": "${GOOD_SRC_REPO}, ${GOOD_TARGET_REPO}, ${unknown}, ${GOOD_TAG}",
                "name": "${task_properties} = Generate Distribute Artifact Properties",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_DIST_ARTIFACT_URL}, ${properties}, execute",
                "name": "${result} = Execute Task",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, FAILED, Invalid Input, Image: '${unknown}' does not exist in repository '${GOOD_SRC_REPO}'",
                "name": "Validate Task Execution Results",
                "type": "KEYWORD"
              }],
            "name": "18 - Negative Distribute Artifact With Unknown Image",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.19 - Negative Distribute Artifact With Unknown Tag",
            "id": "s1-s1-s1-t19",
            "keywords": [{
              "arguments": "${unknown}, UnknownTag",
              "name": "Set Test Variable",
              "type": "KEYWORD"
            },
              {
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
              {
                "arguments": "${GOOD_SRC_REPO}, ${GOOD_TARGET_REPO}, ${GOOD_IMAGE}, ${unknown}",
                "name": "${task_properties} = Generate Distribute Artifact Properties",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_DIST_ARTIFACT_URL}, ${properties}, execute",
                "name": "${result} = Execute Task",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, FAILED, Invalid Input, Image: '${GOOD_IMAGE}' does not contain tag '${unknown}' in repository '${GOOD_SRC_REPO}'",
                "name": "Validate Task Execution Results",
                "type": "KEYWORD"
              }],
            "name": "19 - Negative Distribute Artifact With Unknown Tag",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          },
          {
            "doc": "",
            "fullName": "Cdd-Plugins.Artifactory.31 Artifactory Plugin.20 - Distribute Artifact Successfully",
            "id": "s1-s1-s1-t20",
            "keywords": [{
              "arguments": "",
              "name": "${ep_properties} = Generate Good Connection Properties JSON",
              "type": "KEYWORD"
            },
              {
                "arguments": "${GOOD_SRC_REPO}, ${GOOD_TARGET_REPO}, ${GOOD_IMAGE}, ${GOOD_TAG}",
                "name": "${task_properties} = Generate Distribute Artifact Properties",
                "type": "KEYWORD"
              },
              {
                "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
              {
                "arguments": "${ARTIFACTORY_DIST_ARTIFACT_URL}, ${properties}, execute",
                "name": "${result} = Execute Task",
                "type": "KEYWORD"
              },
              {
                "arguments": "${result}, FINISHED, Finished, Distribution of the requested artifacts finished successfully.",
                "name": "Validate Task Execution Results",
                "type": "KEYWORD"
              }],
            "name": "20 - Distribute Artifact Successfully",
            "tags": ["ARTIFACTORY"],
            "timeout": "5 minutes"
          }]
      }],
      "tests": []
    },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.awsCodeDeploy",
        "id": "s1-s2",
        "keywords": [],
        "metadata": [],
        "name": "awsCodeDeploy",
        "numberOfTests": 42,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/awsCodeDeploy",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\awsCodeDeploy",
        "suites": [{
          "doc": "<p>A testing suite for testing the AWS_CODE_DEPLOY plugin\x3c/p>",
          "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy",
          "id": "s1-s2-s1",
          "keywords": [],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "70 Aws Code Deploy",
          "numberOfTests": 42,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/awsCodeDeploy/70_aws_code_deploy.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\awsCodeDeploy\\70_aws_code_deploy.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.01 - Get Manifest From AwsCodeDeploy Plugin",
            "id": "s1-s2-s1-t1",
            "keywords": [{
              "arguments": "${AWS_CODE_DEPLOY_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, AWS CodeDeploy, 1.1, CA Technologies AWS CodeDeploy, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From AwsCodeDeploy Plugin",
            "tags": ["AWS_CODE_DEPLOY"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s2-s1-t2",
              "keywords": [{
                "arguments": "${AWS_CODE_DEPLOY_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.03.01 - Connectivity Test With User And Password",
              "id": "s1-s2-s1-t3",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03.01 - Connectivity Test With User And Password",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.03.02 - Connectivity Test Without User And Password",
              "id": "s1-s2-s1-t4",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${EMPTY}, ${EMPTY}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03.02 - Connectivity Test Without User And Password",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.03.03 - Connectivity Test Without Source",
              "id": "s1-s2-s1-t5",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${EMPTY}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${EMPTY}, ${EMPTY}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03.03 - Connectivity Test Without Source",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.04 - Negative Connectivity Test Unknown AWS Access Key",
              "id": "s1-s2-s1-t6",
              "keywords": [{
                "arguments": "${AWS_REGION}, WHO_IS_THIS, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${AWS_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The security token included in the request is invalid",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Unknown AWS Access Key",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.05.01 - Negative Connectivity Test Wrong AWS Credentials",
              "id": "s1-s2-s1-t7",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, WRONG_ACCESS_SECRET_KEY, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${AWS_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The request signature we calculated does not match the signature you provided",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Check your AWS Secret Access Key and signing method",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05.01 - Negative Connectivity Test Wrong AWS Credentials",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.05.02 - Negative Connectivity Test Empty AWS Credentials",
              "id": "s1-s2-s1-t8",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${EMPTY}, ${EMPTY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05.02 - Negative Connectivity Test Empty AWS Credentials",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.06 - Negative Connectivity Test Wrong GitHub Repository",
              "id": "s1-s2-s1-t9",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_REPO}, nonExistingRepository",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${NON_EXISTING_GIT_REPO}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${response} = AwsCodeDeploy Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${GITHUB_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, repository '${NON_EXISTING_GIT_REPO}' was not found",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong GitHub Repository",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.07 - Negative Connectivity Test Wrong GitHub password",
              "id": "s1-s2-s1-t10",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, GIT_WRONG_PASSWORD",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${GITHUB_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Failed to authenticate user with target server: ${GITHUB_API_URL}/user",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Wrong GitHub password",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.08 - Negative Connectivity Test Wrong GitHub username",
              "id": "s1-s2-s1-t11",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_USER}, nonExistingAccount",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${NON_EXISTING_GIT_USER}, ${GIT_PASSWORD}",
                  "name": "${response} = AwsCodeDeploy Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${GITHUB_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Failed to authenticate user with target server: ${GITHUB_API_URL}/user",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "08 - Negative Connectivity Test Wrong GitHub username",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.09.01 - Negative Connectivity Test Empty GitHub username",
              "id": "s1-s2-s1-t12",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_USER}, nonExistingAccount",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${EMPTY}, ${GIT_PASSWORD}",
                  "name": "${response} = AwsCodeDeploy Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09.01 - Negative Connectivity Test Empty GitHub username",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.09.02 - Negative Connectivity Test Empty GitHub password",
              "id": "s1-s2-s1-t13",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_USER}, nonExistingAccount",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${EMPTY}",
                  "name": "${response} = AwsCodeDeploy Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09.02 - Negative Connectivity Test Empty GitHub password",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.10 - Execute deployment without action",
              "id": "s1-s2-s1-t14",
              "keywords": [{
                "arguments": "${properties}, { }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Unknown Action",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "10 - Execute deployment without action",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.11 - Execute deployment with unknown action",
              "id": "s1-s2-s1-t15",
              "keywords": [{
                "arguments": "${properties}, { }",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=whatisthat, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Unknown Action",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "11 - Execute deployment with unknown action",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.12 - Stop deployment without deployment Id",
              "id": "s1-s2-s1-t16",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${execution_properties} = Generate Empty Execution Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${execution_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=stop, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Failed to stop",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, No deploymentId was supplied",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "12 - Stop deployment without deployment Id",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.13 - Stop deployment with non exisiting deployment Id",
              "id": "s1-s2-s1-t17",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "d-ABCDEFGHI",
                  "name": "${execution_properties} = Generate Execution Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${execution_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=stop, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, DeploymentDoesNotExistException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "13 - Stop deployment with non exisiting deployment Id",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.14 - Run deployment without application",
              "id": "s1-s2-s1-t18",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_DEPLOYMENT_GROUP}",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON Without Application",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ApplicationNameRequiredException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "14 - Run deployment without application",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.15 - Run deployment without deployment group",
              "id": "s1-s2-s1-t19",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON Without Deployment Group",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, DeploymentGroupNameRequiredException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "15 - Run deployment without deployment group",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.16 - Run deployment with non exisiting application",
              "id": "s1-s2-s1-t20",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "ThisApplicationDoesNotExost, ${GOOD_DEPLOYMENT_GROUP}",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ApplicationDoesNotExistException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "16 - Run deployment with non exisiting application",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.17 - Run deployment with non exisiting deployment group",
              "id": "s1-s2-s1-t21",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}, ThisDeploymentGroupDoesNotExist",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, DeploymentGroupDoesNotExistException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "17 - Run deployment with non exisiting deployment group",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.18 - Run deployment with non exisiting commit",
              "id": "s1-s2-s1-t22",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}, ${GOOD_DEPLOYMENT_GROUP}, abcdefghijklmnopqrstuvwxyz0123456789",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON With Specific Commit Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, InvalidRevisionException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, commit ID contains invalid characters",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "18 - Run deployment with non exisiting commit",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.19 - Run deployment without commit for empty reporsitory (without commits)",
              "id": "s1-s2-s1-t23",
              "keywords": [{
                "arguments": "${AWS_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${EMPTY_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${ep_properties} = Generate Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}, ${GOOD_DEPLOYMENT_GROUP}",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, InvalidRevisionException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, Repository and CommitId must be specified",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "19 - Run deployment without commit for empty reporsitory (without commits)",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.20 - Continue deployment with non exisiting deployment Id",
              "id": "s1-s2-s1-t24",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}, ${GOOD_DEPLOYMENT_GROUP}",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "d-ABCDEFGHI",
                  "name": "${execution_properties} = Generate Execution Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties}, ${execution_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, DeploymentDoesNotExistException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "20 - Continue deployment with non exisiting deployment Id",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.21 - Get All Applications",
              "id": "s1-s2-s1-t25",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_APPLICATIONS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} &gt;= 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, RobotApplication, RobotApplicationWithSeveralDeploymentGroups, RobotApplicationWithoutAnyDeploymentGroups",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "21 - Get All Applications",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.22 - Get Filtered Applications",
              "id": "s1-s2-s1-t26",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_APPLICATIONS_URL}?filter=robot, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 3",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, RobotApplication, RobotApplicationWithSeveralDeploymentGroups, RobotApplicationWithoutAnyDeploymentGroups",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "22 - Get Filtered Applications",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.23 - Get Only Two Applications",
              "id": "s1-s2-s1-t27",
              "keywords": [{
                "arguments": "${count}, 2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_APPLICATIONS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "23 - Get Only Two Applications",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.24 - Get All Deployment Groups",
              "id": "s1-s2-s1-t28",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "application, RobotApplicationWithSeveralDeploymentGroups",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 3",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, FirstGroup, SecondGroup, ThirdGroup",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "24 - Get All Deployment Groups",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.25 - Get Filtered Deployment Groups",
              "id": "s1-s2-s1-t29",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "application, RobotApplicationWithSeveralDeploymentGroups",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}?filter=second, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 1",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, SecondGroup",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "25 - Get Filtered Deployment Groups",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.26 - Get Only Two Deployment Groups",
              "id": "s1-s2-s1-t30",
              "keywords": [{
                "arguments": "${count}, 2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "application, RobotApplicationWithSeveralDeploymentGroups",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "26 - Get Only Two Deployment Groups",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.27 - Get Deployment Groups From Application Without Any",
              "id": "s1-s2-s1-t31",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "application, RobotApplicationWithoutAnyDeploymentGroups",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "Should Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "27 - Get Deployment Groups From Application Without Any",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.28 - Get Deployment Groups Without context",
              "id": "s1-s2-s1-t32",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}, ${properties}",
                  "name": "${result} = Execute POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, InvalidInputException, plugin service context must not be null",
                  "name": "Verify Error Within String Response",
                  "type": "KEYWORD"
                }],
              "name": "28 - Get Deployment Groups Without context",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.29 - Get Deployment Groups With context without application",
              "id": "s1-s2-s1-t33",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "somekey, RobotApplicationWithoutAnyDeploymentGroups",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}, ${properties}",
                  "name": "${result} = Execute POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, InvalidInputException, plugin service context must include 'application' entry",
                  "name": "Verify Error Within String Response",
                  "type": "KEYWORD"
                }],
              "name": "29 - Get Deployment Groups With context without application",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.30 - Get Deployment Groups With context with unknown application",
              "id": "s1-s2-s1-t34",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingApplication",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "application, ${nonExisiting}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_GROUPS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, No application found for name",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, ${nonExisiting}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "30 - Get Deployment Groups With context with unknown application",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.31 - Get All Deployment Configurations",
              "id": "s1-s2-s1-t35",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_CONGIGS_URL}?max_results=4096, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${deploymentConfigsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${deploymentConfigsCount} &gt;= 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, CodeDeployDefault.OneAtATime, CodeDeployDefault.AllAtOnce, CodeDeployDefault.HalfAtATime",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "31 - Get All Deployment Configurations",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.32 - Get Filtered Deployment Configurations",
              "id": "s1-s2-s1-t36",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_CONGIGS_URL}?filter=half, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 1",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, CodeDeployDefault.HalfAtATime",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "32 - Get Filtered Deployment Configurations",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.33 - Get Only Two Deployment Configurations",
              "id": "s1-s2-s1-t37",
              "keywords": [{
                "arguments": "${count}, 2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_GET_DPL_CONGIGS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "33 - Get Only Two Deployment Configurations",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.34 - Run deployment with non exisiting deployment configuration",
              "id": "s1-s2-s1-t38",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_APPLICATION}, ${GOOD_DEPLOYMENT_GROUP}, ThisDeploymentConfigurationDoesNotExist",
                  "name": "${deployment_properties} = Generate Deployment Properties JSON With Configuration",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${deployment_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_RUN_DEPLOYMENT_URL}?action=execute, ${properties}, com.ca.rp.plugins.dto.model.ExternalTaskResult",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${AWS_GENERIC_ERROR_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, DeploymentConfigDoesNotExistException",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "34 - Run deployment with non exisiting deployment configuration",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.35 - Test Without region",
              "id": "s1-s2-s1-t39",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${ep_properties} = Generate Connection Properties Without Region JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_CODE_DEPLOY_CONNECTIVITY_URL}, ${properties}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${response} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty region received in the endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "35 - Test Without region",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.36 - Test with unknonw region",
              "id": "s1-s2-s1-t40",
              "keywords": [{
                "arguments": "${AWS_UNKNOWN_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The region '${AWS_UNKNOWN_REGION}' does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "36 - Test with unknonw region",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.37 - Test with region that does not support COdeDeploy",
              "id": "s1-s2-s1-t41",
              "keywords": [{
                "arguments": "${AWS_NO_CODEDEPLOY_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${GITHUB_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = AwsCodeDeploy Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The region '${AWS_NO_CODEDEPLOY_REGION}' does not support 'codedeploy' service",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "37 - Test with region that does not support COdeDeploy",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsCodeDeploy.70 Aws Code Deploy.38 - Test with unknown deployment source",
              "id": "s1-s2-s1-t42",
              "keywords": [{
                "arguments": "${UNKNOWN_SOURCE}, UnknownSource",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_NO_CODEDEPLOY_REGION}, ${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${UNKNOWN_SOURCE}, ${GIT_REPOSITORY_OWNER}, ${TEST_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${response} = AwsCodeDeploy Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${UNKNOWN_SOURCE} is not a valid AWS CodeDeploy applications source",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "38 - Test with unknown deployment source",
              "tags": ["AWS_CODE_DEPLOY"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.awsElasticBeanstalk",
        "id": "s1-s3",
        "keywords": [],
        "metadata": [],
        "name": "awsElasticBeanstalk",
        "numberOfTests": 26,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/awsElasticBeanstalk",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\awsElasticBeanstalk",
        "suites": [{
          "doc": "<p>A testing suite for testing the AWS_ELASTIC_BEANSTALK plugin\x3c/p>",
          "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk",
          "id": "s1-s3-s1",
          "keywords": [{
            "arguments": "",
            "name": "Custom Suite Setup",
            "type": "SETUP"
          },
            {
              "arguments": "",
              "name": "Custom Suite Teardown",
              "type": "TEARDOWN"
            }],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "90 Aws Elastic Beanstalk",
          "numberOfTests": 26,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/awsElasticBeanstalk/90_aws_elastic_beanstalk.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\awsElasticBeanstalk\\90_aws_elastic_beanstalk.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.01 - Get Manifest From AwsElasticBeanstalk Plugin",
            "id": "s1-s3-s1-t1",
            "keywords": [{
              "arguments": "${AWS_ELASTIC_BEANSTALK_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, AWS ElasticBeanstalk, 1.1, CA Technologies AWS Elastic Beanstalk, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From AwsElasticBeanstalk Plugin",
            "tags": ["AWS_ELASTIC_BEANSTALK"],
            "timeout": "10 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s3-s1-t2",
              "keywords": [{
                "arguments": "${AWS_ELASTIC_BEANSTALK_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.03 - Connectivity Test",
              "id": "s1-s3-s1-t3",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${response} = AwsElasticBeanstalk Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.04 - Negative Connectivity Test Unknown AWS Access Key",
              "id": "s1-s3-s1-t4",
              "keywords": [{
                "arguments": "WRONG_ACCESS_KEY_ID, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${response} = AwsElasticBeanstalk Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The security token included in the request is invalid",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Unknown AWS Access Key",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.05 - Negative Connectivity Test Wrong AWS Secret Key",
              "id": "s1-s3-s1-t5",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, WRONG_ACCESS_SECRET_KEY, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${response} = AwsElasticBeanstalk Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, The request signature we calculated does not match the signature you provided",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Check your AWS Secret Access Key and signing method",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Wrong AWS Secret Key",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.06 - Negative Connectivity Test Wrong AWS Region",
              "id": "s1-s3-s1-t6",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, WRONG_AWS_REGION, ${S3_BUCKET}",
                "name": "${response} = AwsElasticBeanstalk Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Unable to find a region via the region provider chain. Must provide an explicit region in the builder or setup environment to supply a region.",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong AWS Region",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.07 - Negative Connectivity Test Wrong S3 Bucket",
              "id": "s1-s3-s1-t7",
              "keywords": [{
                "arguments": "${WRONG_S3_BUCKET}, WRONG_S3_BUCKET",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${WRONG_S3_BUCKET}",
                  "name": "${response} = AwsElasticBeanstalk Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, S3 bucket",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, [${WRONG_S3_BUCKET}]",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, was not found",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Wrong S3 Bucket",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.08 - Deploy Application Version",
              "id": "s1-s3-s1-t8",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}, ${ENV_NAME}, ${S3_KEY}, ${APP_NAME}, ${BUILD_NUMBER}, ${DESC}",
                "name": "${response} = Run Deployment Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.outSystemParameters}, ${DEPLOYED_BUILD_NUMBER}",
                  "name": "${buildNumber} = Get From Dictionary",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${buildNumber}, ${BUILD_NUMBER}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "08 - Deploy Application Version",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.09 - Negative Deploy Application Version With Invalid S3 Key",
              "id": "s1-s3-s1-t9",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}, ${ENV_NAME}, INVALID_S3_KEY, ${APP_NAME}, ${BUILD_NUMBER}, ${DESC}",
                "name": "${response} = Run Deployment Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.taskState}, ${INVALID_INPUT_ERROR}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${INVALID_ARTIFACT_NAME}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09 - Negative Deploy Application Version With Invalid S3 Key",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.10 - Negative Deploy Application Version With Non Existing S3 Key",
              "id": "s1-s3-s1-t10",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}, ${ENV_NAME}, NON_EXISTING_FILE.war, ${APP_NAME}, ${BUILD_NUMBER}, ${DESC}",
                "name": "${response} = Run Deployment Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.taskState}, ${INVALID_VERSION_LABEL}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${INVALID_VERSION_LABEL_DETAILED}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative Deploy Application Version With Non Existing S3 Key",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.11 - Negative Deploy Application Version With Non Existing Environment",
              "id": "s1-s3-s1-t11",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}, WRONG_ENV_NAME, ${S3_KEY}, ${APP_NAME}, ${BUILD_NUMBER}, ${DESC}",
                "name": "${response} = Run Deployment Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.taskState}, ${EB_ERROR}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${NO_ENV_FOUND}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "11 - Negative Deploy Application Version With Non Existing Environment",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.12 - Get All Applications",
              "id": "s1-s3-s1-t12",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_APPLICATIONS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} &gt;= 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, EB_PluginRobotApp, EB_PluginRobotApp_2, EB_PluginRobotApp_3",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "12 - Get All Applications",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.13 - Get Filtered Applications",
              "id": "s1-s3-s1-t13",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_APPLICATIONS_URL}?filter=PluginRobotApp, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount}, 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, EB_PluginRobotApp, EB_PluginRobotApp_2, EB_PluginRobotApp_3",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "13 - Get Filtered Applications",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.14 - Get Only Two Applications",
              "id": "s1-s3-s1-t14",
              "keywords": [{
                "arguments": "${count}, 2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_APPLICATIONS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "14 - Get Only Two Applications",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.15 - Get All Environments",
              "id": "s1-s3-s1-t15",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "ApplicationName, EB_PluginRobotApp",
                  "name": "${search_properties} = Generate Search Context Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${ENV_NAME}, ${ENV_2_NAME}",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "15 - Get All Environments",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.16 - Get Only One Environment",
              "id": "s1-s3-s1-t16",
              "keywords": [{
                "arguments": "${count}, 1",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "ApplicationName, EB_PluginRobotApp",
                  "name": "${search_properties} = Generate Search Context Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 1",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "16 - Get Only One Environment",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.17 - Get Environments From Application Without Any Environment",
              "id": "s1-s3-s1-t17",
              "keywords": [{
                "arguments": "${emptyEnv}, EB_PluginRobotApp_2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "ApplicationName, ${emptyEnv}",
                  "name": "${search_properties} = Generate Search Context Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, No environment found under application name [${emptyEnv}]",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "17 - Get Environments From Application Without Any Environment",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.18 - Get Environments Without context",
              "id": "s1-s3-s1-t18",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must not be null.",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "18 - Get Environments Without context",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.19 - Get Environments With context without ApplicationName",
              "id": "s1-s3-s1-t19",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "somekey, EB_PluginRobotApp_2",
                  "name": "${search_properties} = Generate Search Context Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must include 'ApplicationName' entry.",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "19 - Get Environments With context without ApplicationName",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.20 - Get Environments With context with unknown application",
              "id": "s1-s3-s1-t20",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingApplication",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "ApplicationName, ${nonExisiting}",
                  "name": "${search_properties} = Generate Search Context Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_GET_ENVIRONMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, No environment found under application name [${nonExisiting}]",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "20 - Get Environments With context with unknown application",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.21 - Import Applications and Environments",
              "id": "s1-s3-s1-t21",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION}, ${S3_BUCKET}",
                "name": "${externalApplicationsResponse} = AwsElasticBeanstalk Import Applications and Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${externalApplicationsResponse.applications}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} &gt;= 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${application} IN [ @{externalApplicationsResponse.applications} ]",
                  "type": "FOR"
                },
                {
                  "arguments": "${environments}, ${testApp.environments}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${environments}",
                  "name": "${environmentsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${environmentsCount} &gt;= 2",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "21 - Import Applications and Environments",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.22 - Import Applications - No application to import on that region",
              "id": "s1-s3-s1-t22",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION_EMPTY}, ${S3_BUCKET}",
                "name": "${errorDto} = AwsElasticBeanstalk Import Applications and Environments - Failure",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${errorDto.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.message}, No applications to import. Check your Elastic Beanstalk.",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "22 - Import Applications - No application to import on that region",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.23 - Import Applications - Invalid security token",
              "id": "s1-s3-s1-t23",
              "keywords": [{
                "arguments": "${INVALID_ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION_EMPTY}, ${S3_BUCKET}",
                "name": "${errorDto} = AwsElasticBeanstalk Import Applications and Environments - Failure",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${errorDto.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.message}, The security token included in the request is invalid.",
                  "name": "Should Contain",
                  "type": "KEYWORD"
                }],
              "name": "23 - Import Applications - Invalid security token",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.24 - Import Applications - Invalid region",
              "id": "s1-s3-s1-t24",
              "keywords": [{
                "arguments": "${ACCESS_KEY_ID}, ${ACCESS_SECRET_KEY}, ${AWS_REGION_INVALID}, ${S3_BUCKET}",
                "name": "${errorDto} = AwsElasticBeanstalk Import Applications and Environments - Failure",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${errorDto.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.message}, Unable to find a region via the region provider chain. Must provide an explicit region in the builder or setup environment to supply a region.",
                  "name": "Should Contain",
                  "type": "KEYWORD"
                }],
              "name": "24 - Import Applications - Invalid region",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.25 - Import Applications - null endpoint",
              "id": "s1-s3-s1-t25",
              "keywords": [{
                "arguments": "{, }",
                "name": "${input} = Catenate",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_IMPORT_APPLICATIONS_URL}, ${input}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${errorDto} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.message}, Endpoint is empty",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "25 - Import Applications - null endpoint",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.awsElasticBeanstalk.90 Aws Elastic Beanstalk.26 - Import Applications - null input",
              "id": "s1-s3-s1-t26",
              "keywords": [{
                "arguments": "${NULL}",
                "name": "${input} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AWS_ELASTIC_BEANSTALK_IMPORT_APPLICATIONS_URL}, ${input}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${errorDto} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorDto.message}, ExternalApplicationInput is empty",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "26 - Import Applications - null input",
              "tags": ["AWS_ELASTIC_BEANSTALK"],
              "timeout": "10 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Axa",
        "id": "s1-s4",
        "keywords": [],
        "metadata": [],
        "name": "Axa",
        "numberOfTests": 14,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/axa",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\axa",
        "suites": [{
          "doc": "<p>A testing suite for testing the AXA plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Axa.110 Axa Plugin",
          "id": "s1-s4-s1",
          "keywords": [],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "110 Axa Plugin",
          "numberOfTests": 14,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/axa/110_axa_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\axa\\110_axa_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.01 - Get Manifest From SauceLabs Plugin",
            "id": "s1-s4-s1-t1",
            "keywords": [{
              "arguments": "${AXA_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, AXA, 1.0, CA Technologies AXA, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From SauceLabs Plugin",
            "tags": ["AXA",
              "DEV"],
            "timeout": "2 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s4-s1-t2",
              "keywords": [{
                "arguments": "${AXA_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.03 - Connectivity Test",
              "id": "s1-s4-s1-t3",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                "name": "${response} = Axa Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.04 - Negative Connectivity Test Wrong AXA URL",
              "id": "s1-s4-s1-t4",
              "keywords": [{
                "arguments": "${server}, blabla.trials.ca.com",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "<a href=\"https://${server}\">https://${server}\x3c/a>, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                  "name": "${response} = Axa Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${server}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Wrong AXA URL",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.05 - Negative Connectivity Test Wrong User ID",
              "id": "s1-s4-s1-t5",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, WRONG_USER_ID, ${PASSWORD}, ${TENANT_NAME}",
                "name": "${response} = Axa Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${FORBIDDEN}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Wrong User ID",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.06 - Negative Connectivity Test Wrong Password",
              "id": "s1-s4-s1-t6",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, WRONG_PASSWORD, ${TENANT_NAME}",
                "name": "${response} = Axa Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${UNAUTHORIZED}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong Password",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.07 - Negative Connectivity Test Wrong Tenant Name",
              "id": "s1-s4-s1-t7",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, WRONG_TENANT_NAME",
                "name": "${response} = Axa Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${BAD_REQUEST}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Wrong Tenant Name",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.08 - Run Monitor Task",
              "id": "s1-s4-s1-t8",
              "keywords": [{
                "arguments": "${EXECUTE_ACTION}, ${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}, ${AXA_APPLICATION}, ${TIME_RANGE}",
                "name": "${response} = Run Monitor Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "08 - Run Monitor Task",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.09 - Negative Run Monitor Task With Wrong Application",
              "id": "s1-s4-s1-t9",
              "keywords": [{
                "arguments": "${EXECUTE_ACTION}, ${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}, NON_EXISTING_APP, ${TIME_RANGE}",
                "name": "${response} = Run Monitor Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "09 - Negative Run Monitor Task With Wrong Application",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.10 - Negative Run Monitor Task With Wrong Time Range",
              "id": "s1-s4-s1-t10",
              "keywords": [{
                "arguments": "${EXECUTE_ACTION}, ${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}, ${AXA_APPLICATION}, WRONG_TIME_RANGE",
                "name": "${response} = Run Monitor Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative Run Monitor Task With Wrong Time Range",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.11 - Get All Applications",
              "id": "s1-s4-s1-t11",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AXA_GET_APPLICATIONS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} &gt;= 4",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, test1, Gil, LironApp, Heroku_Sample",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "11 - Get All Applications",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.12 - Get Filtered Applications",
              "id": "s1-s4-s1-t12",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AXA_GET_APPLICATIONS_URL}?filter=Liron, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount}, 1",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, LironApp",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "12 - Get Filtered Applications",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.13 - Get Only Two Applications",
              "id": "s1-s4-s1-t13",
              "keywords": [{
                "arguments": "${count}, 2",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AXA_GET_APPLICATIONS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "13 - Get Only Two Applications",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Axa.110 Axa Plugin.14 - Get Time Ranges",
              "id": "s1-s4-s1-t14",
              "keywords": [{
                "arguments": "${AXA_TRIAL_URL}, ${USER_ID}, ${PASSWORD}, ${TENANT_NAME}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${AXA_GET_TIME_RANGE_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} == 4",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, Last hour, Last 12 hours, Last 24 hours, Last week",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "14 - Get Time Ranges",
              "tags": ["AXA",
                "DEV"],
              "timeout": "2 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.blazeMeter",
        "id": "s1-s5",
        "keywords": [],
        "metadata": [],
        "name": "blazeMeter",
        "numberOfTests": 91,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/blazeMeter",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\blazeMeter",
        "suites": [{
          "doc": "<p>A testing suite for testing the rest plugin\x3c/p>",
          "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin",
          "id": "s1-s5-s1",
          "keywords": [],
          "metadata": [["Author:Ahaz",
            ""]],
          "name": "60 Blaze Meter Plugin",
          "numberOfTests": 91,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/blazeMeter/60_blaze_meter_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\blazeMeter\\60_blaze_meter_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.01 - Get Manifest From Rest Plugin",
            "id": "s1-s5-s1-t1",
            "keywords": [{
              "arguments": "${BLAZEMETER_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, BlazeMeter, 2.0, CA Technologies BlazeMeter, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Rest Plugin",
            "tags": ["BLAZE_METER"],
            "timeout": "1 hour"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.02 - Test Connection with Good Parameters",
              "id": "s1-s5-s1-t2",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${GOOD_API_KEY}",
                "name": "${properties} = Generate Legacy Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "02 - Test Connection with Good Parameters",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.03 - Negative - Test Connection with Mal API Key",
              "id": "s1-s5-s1-t3",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${MAL_API_KEY}",
                "name": "${properties} = Generate Legacy Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${UNAUTHORIZED_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "03 - Negative - Test Connection with Mal API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.04 - Negative - Test Connection with Mal URL",
              "id": "s1-s5-s1-t4",
              "keywords": [{
                "arguments": "${MAL_URL}, ${GOOD_API_KEY}",
                "name": "${properties} = Generate Legacy Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${UNKNOWN_HOST_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative - Test Connection with Mal URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.05 - Get Available Projects With Good API Key",
              "id": "s1-s5-s1-t5",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Workspace Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${DEFAULT_PROJECT_NAME}, ${EMPTY_PROJECT_NAME}, ${FUNCTIONAL_PROJECT_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "05 - Get Available Projects With Good API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.06 - Get Available Projects With Good API Key With Filter",
              "id": "s1-s5-s1-t6",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}?filter=${WIKIPEDIA_PROJECT_NAME}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Workspace Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "06 - Get Available Projects With Good API Key With Filter",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.07 - Negative - Get Available Projects With Mal API Key",
              "id": "s1-s5-s1-t7",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${MAL_API_KEY}",
                  "name": "${dynamicValuesInput} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative - Get Available Projects With Mal API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.08 - Get Available Tests Within Good Project By Id",
              "id": "s1-s5-s1-t8",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${WIKIPEDIA_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Jerusalem Images, Liverpool Images, London Images, Los Angeles Images, Manchester Images, New York Images, Tel Aviv Images",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "08 - Get Available Tests Within Good Project By Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.09 - Get Available Tests Within Empty Project",
              "id": "s1-s5-s1-t9",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${EMPTY_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "09 - Get Available Tests Within Empty Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.10 - Negative - Get Available Tests Within Unknown Project",
              "id": "s1-s5-s1-t10",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${UNKNOWN_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative - Get Available Tests Within Unknown Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.11 - Get Available Tests Within Good Project By Name With Filter",
              "id": "s1-s5-s1-t11",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}?filter=Jerusalem",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project And Workspace Names JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Jerusalem Images",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "11 - Get Available Tests Within Good Project By Name With Filter",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.12 - Negative - Get Available Tests Within Good Project By Unknown Name",
              "id": "s1-s5-s1-t12",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, Unknown",
                  "name": "${dynamicValuesInput} = Generate Connection With Project And Workspace Names JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                }],
              "name": "12 - Negative - Get Available Tests Within Good Project By Unknown Name",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.13 - Negative - Get Available Tests Without Project",
              "id": "s1-s5-s1-t13",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}",
                  "name": "${dynamicValuesInput} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                }],
              "name": "13 - Negative - Get Available Tests Without Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.14 - Get Available Collections Within Good Project By Id",
              "id": "s1-s5-s1-t14",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_COLLECTIONS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${WIKIPEDIA_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Capital Cities Images, England Cities Images, Israel Cities Images",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "14 - Get Available Collections Within Good Project By Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.15 - Get Available Collections Within Empty Project",
              "id": "s1-s5-s1-t15",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_COLLECTIONS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${EMPTY_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "15 - Get Available Collections Within Empty Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.17 - Negative - Get Available Collections Within Unknown Project",
              "id": "s1-s5-s1-t16",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_COLLECTIONS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${UNKNOWN_PROJECT_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Project Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                }],
              "name": "17 - Negative - Get Available Collections Within Unknown Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.18 - Run Good Test Untill the end",
              "id": "s1-s5-s1-t17",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "18 - Run Good Test Untill the end",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.19 - Run Good Test And Stop",
              "id": "s1-s5-s1-t18",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "19 - Run Good Test And Stop",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.20 - Negative - Run Test Without Endpoint",
              "id": "s1-s5-s1-t19",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution Without Endpoint JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${NO_ENDPOINT_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "20 - Negative - Run Test Without Endpoint",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.21 - Negative - Run Test With Mal URL",
              "id": "s1-s5-s1-t20",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${MAL_URL}, ${GOOD_API_KEY}, ${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${UNKNOWN_HOST_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "21 - Negative - Run Test With Mal URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.22 - Negative - Run Test With Mal API Key",
              "id": "s1-s5-s1-t21",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${MAL_API_KEY}, ${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${UNAUTHORIZED_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "22 - Negative - Run Test With Mal API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.23 - Negative - Run Mal Test",
              "id": "s1-s5-s1-t22",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${UNKNOWN_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${NOT_FOUND_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "23 - Negative - Run Mal Test",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.24 - Negative - Run Test With Bad Action",
              "id": "s1-s5-s1-t23",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "bad",
                  "name": "${badAction} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${LONDON_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ${badAction}",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Unknown Action",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, [${badAction}] ${UNKNOWN_ACTION_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "24 - Negative - Run Test With Bad Action",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.25 - Run Good Collection Untill the end",
              "id": "s1-s5-s1-t24",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "25 - Run Good Collection Untill the end",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.26 - Run Good Collection And Stop",
              "id": "s1-s5-s1-t25",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "26 - Run Good Collection And Stop",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.27 - Negative - Run Collection Without Endpoint",
              "id": "s1-s5-s1-t26",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution Without Endpoint JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${NO_ENDPOINT_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "27 - Negative - Run Collection Without Endpoint",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.28 - Negative - Run Collection With Mal URL",
              "id": "s1-s5-s1-t27",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${MAL_URL}, ${GOOD_API_KEY}, ${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${UNKNOWN_HOST_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "28 - Negative - Run Collection With Mal URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.29 - Negative - Run Collection With Mal API Key",
              "id": "s1-s5-s1-t28",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${MAL_API_KEY}, ${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${UNAUTHORIZED_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "29 - Negative - Run Collection With Mal API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.30 - Negative - Run Mal Collection",
              "id": "s1-s5-s1-t29",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${UNKNOWN_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${NOT_FOUND_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "30 - Negative - Run Mal Collection",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.31 - Negative - Run Test With Bad Action",
              "id": "s1-s5-s1-t30",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "bad",
                  "name": "${badAction} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${CAPITALS_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ${badAction}",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Unknown Action",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, [${badAction}] ${UNKNOWN_ACTION_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "31 - Negative - Run Test With Bad Action",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.32 - Run Test with execution failures",
              "id": "s1-s5-s1-t31",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${TEL_AVIV_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "32 - Run Test with execution failures",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.33 - Run Test with test criteria failures",
              "id": "s1-s5-s1-t32",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${LIVERPOOL_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Threshold Failures (1/2)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "33 - Run Test with test criteria failures",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.34 - Run Collection with execution failures",
              "id": "s1-s5-s1-t33",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${ISRAEL_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "34 - Run Collection with execution failures",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.35 - Run Collection with test criteria failures",
              "id": "s1-s5-s1-t34",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${ENGLAND_COLLECTION_ID}",
                  "name": "${execution} = Generate Start Collection Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1); Threshold Failures (1/2)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "35 - Run Collection with test criteria failures",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.36 - Get Available Workspaces With Good API Key",
              "id": "s1-s5-s1-t35",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_WORKSPACES_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}",
                  "name": "${dynamicValuesInput} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${DEFAULT_WORKSPACE_NAME}, ${EMPTY_WORKSPACE_NAME}, ${HOME_WORKSPACE_NAME}, ${SPECIAL_WORKSPACE_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "36 - Get Available Workspaces With Good API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.37 - Get Available Projects With Good API Key of Empty Workspace",
              "id": "s1-s5-s1-t36",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${EMPTY_WORKSPACE_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Workspace Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "37 - Get Available Projects With Good API Key of Empty Workspace",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.38 - Get Available Projects With Good API Key of Created Workspace",
              "id": "s1-s5-s1-t37",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${HOME_WORKSPACE_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Workspace Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${DEFAULT_PROJECT_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "38 - Get Available Projects With Good API Key of Created Workspace",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.39 - Get Available Workspaces With Good API Key And Filter",
              "id": "s1-s5-s1-t38",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_WORKSPACES_URL}?filter=T",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}",
                  "name": "${dynamicValuesInput} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${DEFAULT_WORKSPACE_NAME}, Empty",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "39 - Get Available Workspaces With Good API Key And Filter",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.40 - Get Available Workspaces With Good API Key And Limit",
              "id": "s1-s5-s1-t39",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_WORKSPACES_URL}?max_results=1",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}",
                  "name": "${dynamicValuesInput} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, 1",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "40 - Get Available Workspaces With Good API Key And Limit",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.41 - Negative - Test Connection with Non URL",
              "id": "s1-s5-s1-t40",
              "keywords": [{
                "arguments": "${badUrl}, thisisnoturl",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${badUrl}, ${GOOD_API_KEY}",
                  "name": "${properties} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${MALFORMED_URL_MESSAGE}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${badUrl}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "41 - Negative - Test Connection with Non URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.42 - Negative - Test Connection with Unknown URL Protocol",
              "id": "s1-s5-s1-t41",
              "keywords": [{
                "arguments": "${badUrl}, <a href=\"xxx://host.com\">xxx://host.com\x3c/a>",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${badUrl}, ${GOOD_API_KEY}",
                  "name": "${properties} = Generate Legacy Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${MALFORMED_URL_MESSAGE}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, ${badUrl}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "42 - Negative - Test Connection with Unknown URL Protocol",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.43 - Run Good Test With Special Characters And Stop",
              "id": "s1-s5-s1-t42",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${SPECIAL_WORKSPACE_NAME}, ${SPECIAL_PROJECT_NAME}, ${SPECIAL_TEST_NAME}",
                  "name": "${execution} = Generate Start Test Execution By Name Legacy Auth JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "43 - Run Good Test With Special Characters And Stop",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.44 - Run Good Collection With Special Characters And Stop",
              "id": "s1-s5-s1-t43",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_COLLECTION_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${SPECIAL_WORKSPACE_NAME}, ${SPECIAL_PROJECT_NAME}, ${SPECIAL_COLLECTION_NAME}",
                  "name": "${execution} = Generate Start Collection Execution By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "44 - Run Good Collection With Special Characters And Stop",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.45 - Run Test With Error And Error Criteria That Passes",
              "id": "s1-s5-s1-t44",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${LOS_ANGELES_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "45 - Run Test With Error And Error Criteria That Passes",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.46 - Run Test With Error And Error Criteria That Fails",
              "id": "s1-s5-s1-t45",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${NEW_YORK_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Threshold Failures (1/1)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                }],
              "name": "46 - Run Test With Error And Error Criteria That Fails",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.47 - Negative - Run Test With Unknown Workspace",
              "id": "s1-s5-s1-t46",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${UKNOWN_WORKSPACE}, unknown workspace name",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${UKNOWN_WORKSPACE}, ${SPECIAL_PROJECT_NAME}, ${SPECIAL_TEST_NAME}",
                  "name": "${execution} = Generate Start Test Execution By Name Legacy Auth JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${NOT_FOUND_ITEM_MESSAGE}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${UKNOWN_WORKSPACE}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "47 - Negative - Run Test With Unknown Workspace",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.48 - Get Available Projects With Good API Key And Filter And Limit",
              "id": "s1-s5-s1-t47",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_PROJECTS_URL}?filter=wiki&amp;max_results=1",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_ID}",
                  "name": "${dynamicValuesInput} = Generate Connection With Workspace Id JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "48 - Get Available Projects With Good API Key And Filter And Limit",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.49 - Import All Single Tests",
              "id": "s1-s5-s1-t48",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, Jerusalem Images, Liverpool Images, London Images, Los Angeles Images, Manchester Images, New York Images, Tel Aviv Images",
                  "name": "Validate Imported Test Suites Name",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, 5368626, 5369215, 5543836, 5543839, 5598661, 5598667, 5889774",
                  "name": "Validate Imported Test Suites External Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, 1483335762, 1483435232, 1487597674, 1487597740, 1493194350, 1493194439, 1515505348",
                  "name": "Validate Imported Test Suites Creation Date",
                  "type": "KEYWORD"
                }],
              "name": "49 - Import All Single Tests",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.50 - Import All Tests From Empty Project",
              "id": "s1-s5-s1-t49",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${EMPTY_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}",
                  "name": "Should Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "50 - Import All Tests From Empty Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.51 - Import Only Three Tests",
              "id": "s1-s5-s1-t50",
              "keywords": [{
                "arguments": "3",
                "name": "${testsCount} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}?max_results=${testsCount}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, ${testsCount}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "51 - Import Only Three Tests",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.52 - Import All Collection Tests",
              "id": "s1-s5-s1-t51",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Collection Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, Capital Cities Images, England Cities Images, Israel Cities Images",
                  "name": "Validate Imported Test Suites Name",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, 10006312, 10006846, 10006847",
                  "name": "Validate Imported Test Suites External Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, 1483435300, 1487597777, 1487597816",
                  "name": "Validate Imported Test Suites Creation Date",
                  "type": "KEYWORD"
                }],
              "name": "52 - Import All Collection Tests",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.53 - Import Only One Collection",
              "id": "s1-s5-s1-t52",
              "keywords": [{
                "arguments": "1",
                "name": "${testsCount} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}?max_results=${testsCount}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Collection Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, ${testsCount}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "53 - Import Only One Collection",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.54 - Negative - Import without type",
              "id": "s1-s5-s1-t53",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}, ${EMPTY}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [type] is missing",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "54 - Negative - Import without type",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.55 - Negative - Import with unknonw type",
              "id": "s1-s5-s1-t54",
              "keywords": [{
                "arguments": "WhatIsThis",
                "name": "${unknownTestType} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}, ${unknownTestType}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [type] got invalid value [${unknownTestType}]. Reason: value is not in enumeration",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "55 - Negative - Import with unknonw type",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.56 - Negative - Import Tests Without Workspace",
              "id": "s1-s5-s1-t55",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${EMPTY}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [workspace] is missing",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "56 - Negative - Import Tests Without Workspace",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.57 - Negative - Import Tests Without Project",
              "id": "s1-s5-s1-t56",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${EMPTY}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [project] is missing",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "57 - Negative - Import Tests Without Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.58 - Negative - Import Tests With Unknown Workspace Name",
              "id": "s1-s5-s1-t57",
              "keywords": [{
                "arguments": "UnknownWorkspace",
                "name": "${unknownWorkspaceName} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${unknownWorkspaceName}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Failed to find item [${unknownWorkspaceName}] of type [workspace]",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "58 - Negative - Import Tests With Unknown Workspace Name",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.59 - Negative - Import Tests With Unknown Project Name",
              "id": "s1-s5-s1-t58",
              "keywords": [{
                "arguments": "UnknownProject",
                "name": "${unknownProjectName} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${unknownProjectName}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Failed to find item [${unknownProjectName}] of type [project]",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "59 - Negative - Import Tests With Unknown Project Name",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.60 - Negative - Import Tests With Non Matching Workspace And Project",
              "id": "s1-s5-s1-t59",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${HOME_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Failed to find item [${WIKIPEDIA_PROJECT_NAME}] of type [project]",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "60 - Negative - Import Tests With Non Matching Workspace And Project",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.61 - Negative - Import Tests Without URL",
              "id": "s1-s5-s1-t60",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [url] is missing",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "61 - Negative - Import Tests Without URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.62 - Negative - Import Tests With Mal URL",
              "id": "s1-s5-s1-t61",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${MAL_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, ${UNKNOWN_HOST_MESSAGE}",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "62 - Negative - Import Tests With Mal URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.63 - Negative - Import Tests With Malformed URL",
              "id": "s1-s5-s1-t62",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${MALFORMED_URL}, ${GOOD_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [url] got invalid value [${MALFORMED_URL}]. Reason: URL is malformed",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "63 - Negative - Import Tests With Malformed URL",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.64 - Negative - Import Tests Without API Key",
              "id": "s1-s5-s1-t63",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${EMPTY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, Property [apiKey] is missing",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "64 - Negative - Import Tests Without API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.65 - Negative - Import Tests With Mal API Key",
              "id": "s1-s5-s1-t64",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_IMPORT_TESTS_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${MAL_API_KEY}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}",
                  "name": "${importJson} = Generate Import Single Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, ${UNAUTHORIZED_MESSAGE}",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "65 - Negative - Import Tests With Mal API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.66 - Test Connection with Advanced Authentication Method",
              "id": "s1-s5-s1-t65",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}",
                "name": "${properties} = Generate Advanced Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "66 - Test Connection with Advanced Authentication Method",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.67 - Negative - Test Connection with unknown auth type",
              "id": "s1-s5-s1-t66",
              "keywords": [{
                "arguments": "UnknownAuthType",
                "name": "${badAuthType} = Set Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${badAuthType}",
                  "name": "${properties} = Generate Customized Type Endpoint Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, { ${properties} }",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Property [authType] got invalid value [${badAuthType}]. Reason: value is not in enumeration",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "67 - Negative - Test Connection with unknown auth type",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.68 - Negative - Test Connection without api Key",
              "id": "s1-s5-s1-t67",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${EMPTY}",
                "name": "${properties} = Generate Legacy Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Property [apiKey] is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "68 - Negative - Test Connection without api Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.69 - Negative - Test Connection without api Key Id",
              "id": "s1-s5-s1-t68",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${EMPTY}, ${GOOD_API_KEY_SECRET}",
                "name": "${properties} = Generate Advanced Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Property [apiKeyId] is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "69 - Negative - Test Connection without api Key Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.70 - Negative - Test Connection without api Key Secret",
              "id": "s1-s5-s1-t69",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${EMPTY}",
                "name": "${properties} = Generate Advanced Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Property [apiKeySecret] is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "70 - Negative - Test Connection without api Key Secret",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.71 - Negative - Test Connection with mal api key id and secret",
              "id": "s1-s5-s1-t70",
              "keywords": [{
                "arguments": "${GOOD_URL}, UnknownKeyId, UnknownKeySecret",
                "name": "${properties} = Generate Advanced Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BLAZEMETER_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success",
                  "name": "${success} = Extract Boolean from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Failed accessing URL: [${GOOD_URL}]. Reason: Not authorized",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "71 - Negative - Test Connection with mal api key id and secret",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.72 - List Workspaces With Advanced API Key",
              "id": "s1-s5-s1-t71",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_DYNAMIC_VALUE_URL}${BLAZEMETER_WORKSPACES_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}",
                  "name": "${dynamicValuesInput} = Generate Advanced Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, ${DEFAULT_WORKSPACE_NAME}, ${EMPTY_WORKSPACE_NAME}, ${HOME_WORKSPACE_NAME}, ${SPECIAL_WORKSPACE_NAME}",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "72 - List Workspaces With Advanced API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.73 - Run Single Test With Advanced API Key",
              "id": "s1-s5-s1-t72",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${DEFAULT_WORKSPACE_NAME}, ${WIKIPEDIA_PROJECT_NAME}, London Images",
                  "name": "${execution} = Generate Start Test Execution By Name Advanced Auth JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "73 - Run Single Test With Advanced API Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "<p>This test case (LONDON_TEST_ID) has no criteria and it compltes successfully by going through specific flow of the code.\x3c/p>",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.74.01 - Run Test From Test Source Untill the end #01",
              "id": "s1-s5-s1-t73",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LONDON_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, London Images, ${LONDON_TEST_ID}, PASSED, ${None}",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "74.01 - Run Test From Test Source Untill the end #01",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "<p>This test case (LOS_ANGELES_TEST_ID) has criteria so it completes successfully within BM and it goes through specific flow of the code.\x3c/p>",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.74.02 - Run Test From Test Source Untill the end #02",
              "id": "s1-s5-s1-t74",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LOS_ANGELES_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, Los Angeles Images, ${LOS_ANGELES_TEST_ID}, PASSED, ${None}",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "74.02 - Run Test From Test Source Untill the end #02",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.75 - Run Test From Test Source Untill the end With An Error",
              "id": "s1-s5-s1-t75",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${TEL_AVIV_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, Tel Aviv Images, ${TEL_AVIV_TEST_ID}, FAILED, Non HTTP response message: en.wikipedia.ork: Name or service not known",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "75 - Run Test From Test Source Untill the end With An Error",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.76 - Run Collection From Test Source Untill the end",
              "id": "s1-s5-s1-t76",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${CAPITALS_COLLECTION_ID}, Multi Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, Jerusalem Images, ${JERUSALEM_TEST_ID}, PASSED, ${None}, London Images, ${LONDON_TEST_ID}, PASSED, ${None}",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "76 - Run Collection From Test Source Untill the end",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.77 - Run Collection From Test Source Untill the end With An Error",
              "id": "s1-s5-s1-t77",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${ENGLAND_COLLECTION_ID}, Multi Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1); Threshold Failures (1/2)",
                  "name": "Check Full Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, Liverpool Images, ${LIVERPOOL_TEST_ID}, FAILED, responseTime.min &amp;gt 10, London Images, ${LONDON_TEST_ID}, PASSED, ${None}, Manchester Images, ${MANCHESTER_TEST_ID}, FAILED, Non HTTP response message: en.wikipedia.orx: Name or service not known",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "77 - Run Collection From Test Source Untill the end With An Error",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.78 - Negative - Run Empty Type From Test Source",
              "id": "s1-s5-s1-t78",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LONDON_TEST_ID}, ${EMPTY}",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, [] is not recognised as test suite type",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "78 - Negative - Run Empty Type From Test Source",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.79 - Negative - Run Unknown Type From Test Source",
              "id": "s1-s5-s1-t79",
              "keywords": [{
                "arguments": "${unknown}, UnknownType",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LONDON_TEST_ID}, ${unknown}",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, [${unknown}] is not recognised as test suite type",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "79 - Negative - Run Unknown Type From Test Source",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.80 - Negative - Run Test From Test Source Without Id",
              "id": "s1-s5-s1-t80",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${EMPTY}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: Property [test_source.test_suite_id] is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "80 - Negative - Run Test From Test Source Without Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.81 - Negative - Run Test From Test Source With Collection Id",
              "id": "s1-s5-s1-t81",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${CAPITALS_COLLECTION_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${NOT_FOUND_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "81 - Negative - Run Test From Test Source With Collection Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.82 - Negative - Run Collection From Test Source Without Id",
              "id": "s1-s5-s1-t82",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${EMPTY}, Multi Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: Property [test_source.test_suite_id] is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "82 - Negative - Run Collection From Test Source Without Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.83 - Negative - Run Collection From Test Source With Test Id",
              "id": "s1-s5-s1-t83",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LONDON_TEST_ID}}, Multi Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${BAD_REQUEST_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "83 - Negative - Run Collection From Test Source With Test Id",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.84 - Negative - Run Test From Test Source With Bad Action",
              "id": "s1-s5-s1-t84",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "bad",
                  "name": "${badAction} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${LONDON_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ${badAction}",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, Unknown Action",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, [${badAction}] ${UNKNOWN_ACTION_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "84 - Negative - Run Test From Test Source With Bad Action",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.85 - Negative - Run Test From Test Source With Bad Api Key",
              "id": "s1-s5-s1-t85",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, xxxx, ${LONDON_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.taskState}, ${FAILED_TO_START_TASK}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.detailedInfo}, ${ERROR_PREFIX}: ${UNAUTHORIZED_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "85 - Negative - Run Test From Test Source With Bad Api Key",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.86 - Run Test From Test Source and Stop",
              "id": "s1-s5-s1-t86",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${JERUSALEM_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}",
                  "name": "Check Partial Execution",
                  "type": "KEYWORD"
                }],
              "name": "86 - Run Test From Test Source and Stop",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.87 - Run Good Functional API Test Untill the end",
              "id": "s1-s5-s1-t87",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${GITHUB_USERS_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Functional Test API Execution",
                  "type": "KEYWORD"
                }],
              "name": "87 - Run Good Functional API Test Untill the end",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.88 - Run Functional API Test with execution failures",
              "id": "s1-s5-s1-t88",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${GITHUB_REPOS_ONE_ERROR_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1)",
                  "name": "Check Functional Test API Execution",
                  "type": "KEYWORD"
                }],
              "name": "88 - Run Functional API Test with execution failures",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.89 - Run Functional API Test From Test Source",
              "id": "s1-s5-s1-t89",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${GITHUB_USERS_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, ENDED",
                  "name": "Check Functional Test API Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, Get Github Users, ${GITHUB_USERS_TEST_ID}, PASSED, ${None}",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "89 - Run Functional API Test From Test Source",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.90 - Run Functional API Test From Test Source Untill the end With An Error",
              "id": "s1-s5-s1-t90",
              "keywords": [{
                "arguments": "",
                "name": "Mark Before Execution Time",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${BLAZEMETER_RUN_TESTSUITE_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY_ID}, ${GOOD_API_KEY_SECRET}, ${GITHUB_REPOS_THREE_ERRORS_TEST_ID}, Test",
                  "name": "${execution} = Generate Start Test Source Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (3)",
                  "name": "Check Functional Test API Execution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "Mark After Execution Time",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${currentResult}, List Repos Of Unknown User Three Times, ${GITHUB_REPOS_THREE_ERRORS_TEST_ID}, FAILED, ${None}",
                  "name": "Verify Test Suite Results",
                  "type": "KEYWORD"
                }],
              "name": "90 - Run Functional API Test From Test Source Untill the end With An Error",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            },
            {
              "doc": "<p>This test case veroifies a BlazeMeter test that had in the past test criteria and was moved to 'Functional API Test. We saw BlazeMeter API returns different data in such case and we had a defect in this scenario (DE328461)\x3c/p>",
              "fullName": "Cdd-Plugins.blazeMeter.60 Blaze Meter Plugin.91 - Run Functional API Test with execution failures (had criteria in the past)",
              "id": "s1-s5-s1-t91",
              "keywords": [{
                "arguments": "${url}, ${BLAZEMETER_RUN_TEST_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_API_KEY}, ${GITHUB_REPOS_ONE_ERROR_WITH_CRITERIA_TEST_ID}",
                  "name": "${execution} = Generate Start Test Execution JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${execution}, Execution Errors (1)",
                  "name": "Check Functional Test API Execution",
                  "type": "KEYWORD"
                }],
              "name": "91 - Run Functional API Test with execution failures (had criteria in the past)",
              "tags": ["BLAZE_METER"],
              "timeout": "1 hour"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Flowdock",
        "id": "s1-s6",
        "keywords": [],
        "metadata": [],
        "name": "Flowdock",
        "numberOfTests": 13,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/flowdock",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\flowdock",
        "suites": [{
          "doc": "",
          "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin",
          "id": "s1-s6-s1",
          "keywords": [],
          "metadata": [],
          "name": "17 Flowdock Plugin",
          "numberOfTests": 13,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/flowdock/17_flowdock_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\flowdock\\17_flowdock_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.01 - get manifest",
            "id": "s1-s6-s1-t1",
            "keywords": [{
              "arguments": "${FLOWDOCK_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = get manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Flowdock, 1.0.1, CA Technologies Flowdock, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - get manifest",
            "tags": [],
            "timeout": ""
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s6-s1-t2",
              "keywords": [{
                "arguments": "${FLOWDOCK_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.101 - test connection to valid url",
              "id": "s1-s6-s1-t3",
              "keywords": [{
                "arguments": "${url}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "101 - test connection to valid url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.102 - test connection to invalid url",
              "id": "s1-s6-s1-t4",
              "keywords": [{
                "arguments": "${invalid_url}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, 404 {\"message\":\"Resource not found\"}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "102 - test connection to invalid url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.103 - test connection to valid url invalid token",
              "id": "s1-s6-s1-t5",
              "keywords": [{
                "arguments": "${url}, ${invalid_flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, 401 {\"message\":\"Requires authentication\"}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "103 - test connection to valid url invalid token",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.104 - test connection to empty url",
              "id": "s1-s6-s1-t6",
              "keywords": [{
                "arguments": "${EMPTY}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, Failed to connect to Flowdock",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "104 - test connection to empty url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.105 - test connection to no token",
              "id": "s1-s6-s1-t7",
              "keywords": [{
                "arguments": "${url}, ${EMPTY}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, 401 {\"message\":\"Requires authentication\"}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "105 - test connection to no token",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.106 - test connection to an application with a long name",
              "id": "s1-s6-s1-t8",
              "keywords": [{
                "arguments": "${url}, ${flowToken_longAppName}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${FLOWDOCK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "106 - test connection to an application with a long name",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.201 - post message simple message",
              "id": "s1-s6-s1-t9",
              "keywords": [{
                "arguments": "${url}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "CDD Flowdock Plugin ROBOT TEST - posting a message to a vaild flow",
                  "name": "${task_props} = generate post message",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${FLOWDOCK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FINISHED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "201 - post message simple message",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.202 - post message to invalid flow",
              "id": "s1-s6-s1-t10",
              "keywords": [{
                "arguments": "${url}, ${invalid_flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "CDD Flowdock Plugin ROBOT TEST - posting a message to an invalid flow",
                  "name": "${task_props} = generate post message",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${FLOWDOCK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 404 {\"message\":\"Not found\"}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "202 - post message to invalid flow",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.203 - post message with empty message",
              "id": "s1-s6-s1-t11",
              "keywords": [{
                "arguments": "${url}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}",
                  "name": "${task_props} = generate post message",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${FLOWDOCK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 400 {\"message\":\"Validation error\",\"errors\":{\"content\":[\"can't be blank\"]}}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "203 - post message with empty message",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.204 - post message with empty task props",
              "id": "s1-s6-s1-t12",
              "keywords": [{
                "arguments": "${url}, ${flowToken}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "\"taskProperties\" : {}",
                  "name": "${task_props} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${FLOWDOCK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 400 {\"message\":\"Validation error\",\"errors\":{\"content\":[\"can't be blank\"]}}",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "204 - post message with empty task props",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Flowdock.17 Flowdock Plugin.205 - post message to application with long name",
              "id": "s1-s6-s1-t13",
              "keywords": [{
                "arguments": "${url}, ${flowToken_longAppName}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "CDD Flowdock Plugin ROBOT TEST - posting a message to a vaild flow connected to an application with a long name",
                  "name": "${task_props} = generate post message",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${FLOWDOCK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.taskState}, Failed posting message",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, Flowdock application name must not exceed 64 characters",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "205 - post message to application with long name",
              "tags": [],
              "timeout": ""
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Gradle-Testing",
        "id": "s1-s7",
        "keywords": [],
        "metadata": [],
        "name": "Gradle-Testing",
        "numberOfTests": 5,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/gradle-testing",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\gradle-testing",
        "suites": [{
          "doc": "<p>A testing suite for testing the ARTIFACTORY plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin",
          "id": "s1-s7-s1",
          "keywords": [],
          "metadata": [["Author: Andrey Kovalev",
            ""]],
          "name": "04 Gradle Testing Plugin",
          "numberOfTests": 5,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/gradle-testing/04_gradle_testing_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\gradle-testing\\04_gradle_testing_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin.01 - Get Manifest From Gradle Testing Plugin",
            "id": "s1-s7-s1-t1",
            "keywords": [{
              "arguments": "${GRADLE_TESTING_MANIFEST_URL}",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Gradle Testing, 1.0, CA Technologies Gradle Testing, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Gradle Testing Plugin",
            "tags": ["premonly"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s7-s1-t2",
              "keywords": [{
                "arguments": "${GRADLE_TESTING_MANIFEST_URL}",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["premonly"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin.03 - Validate supported gradle versions",
              "id": "s1-s7-s1-t3",
              "keywords": [{
                "arguments": "3.5, 3.0, 2.14, 4.4, 4.0.2",
                "name": "@{SUPPORTED_GRADLE_VERSIONS} = Create List",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GRADLE_TESTING_MANIFEST_URL}",
                  "name": "${manifest} = Get Manifest",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${manifest}, $.endpointTemplate.parameters[0].possibleValues",
                  "name": "${gradleVersions} = Extract String List from Json List By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "@{gradleVersions}",
                  "name": "${gradleVersions} = Create List",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SUPPORTED_GRADLE_VERSIONS}",
                  "name": "Sort List",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${gradleVersions}",
                  "name": "Sort List",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${gradleVersions}, ${SUPPORTED_GRADLE_VERSIONS}",
                  "name": "Lists Should Be Equal",
                  "type": "KEYWORD"
                }],
              "name": "03 - Validate supported gradle versions",
              "tags": ["premonly"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin.05 - GIT Connectivity Test - Private Repository",
              "id": "s1-s7-s1-t4",
              "keywords": [{
                "arguments": "${PRIVATE_SRC_REPO}, ${PRIVATE_GIT_USER}, ${PRIVATE_GIT_PASSWORD}",
                "name": "${response} = Github Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "05 - GIT Connectivity Test - Private Repository",
              "tags": ["premonly"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Gradle-Testing.04 Gradle Testing Plugin.06 - Negative Connectivity Test Unknown User",
              "id": "s1-s7-s1-t5",
              "keywords": [{
                "arguments": "${NON_EXISTING_USER}, nonExistingUser",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${PRIVATE_SRC_REPO}, ${nonExistingUser}, ${PRIVATE_GIT_PASSWORD}",
                  "name": "${response} = Github Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${BAD_CREDENTIALS}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Unknown User",
              "tags": ["premonly"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Heroku",
        "id": "s1-s8",
        "keywords": [],
        "metadata": [],
        "name": "Heroku",
        "numberOfTests": 6,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/heroku",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\heroku",
        "suites": [{
          "doc": "<p>A testing suite for testing the HEROKU plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin",
          "id": "s1-s8-s1",
          "keywords": [],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "80 Heroku Plugin",
          "numberOfTests": 6,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/heroku/80_heroku_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\heroku\\80_heroku_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.01 - Get Manifest From Heroku Plugin",
            "id": "s1-s8-s1-t1",
            "keywords": [{
              "arguments": "${HEROKU_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Heroku, 1.0, CA Technologies Heroku, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Heroku Plugin",
            "tags": ["HEROKU"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s8-s1-t2",
              "keywords": [{
                "arguments": "${HEROKU_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["HEROKU"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.03 - Connectivity Test",
              "id": "s1-s8-s1-t3",
              "keywords": [{
                "arguments": "${HEROKU_API_KEY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Heroku Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test",
              "tags": ["HEROKU"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.04 - Negative Connectivity Test Unknown Heroku Api Key",
              "id": "s1-s8-s1-t4",
              "keywords": [{
                "arguments": "WRONG_HEROKU_API_KEY, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Heroku Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Invalid credentials provided.",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Unknown Heroku Api Key",
              "tags": ["HEROKU"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.05 - Negative Connectivity Test Wrong GitHub password",
              "id": "s1-s8-s1-t5",
              "keywords": [{
                "arguments": "${HEROKU_API_KEY}, ${GIT_USERNAME}, GIT_WRONG_PASSWORD",
                "name": "${response} = Heroku Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Bad credentials",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Wrong GitHub password",
              "tags": ["HEROKU"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Heroku.80 Heroku Plugin.06 - Negative Connectivity Test Wrong GitHub username",
              "id": "s1-s8-s1-t6",
              "keywords": [{
                "arguments": "${HEROKU_API_KEY}, WRONG_GIT_USERNAME, ${GIT_PASSWORD}",
                "name": "${response} = Heroku Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Bad credentials",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong GitHub username",
              "tags": ["HEROKU"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Jira",
        "id": "s1-s9",
        "keywords": [],
        "metadata": [],
        "name": "Jira",
        "numberOfTests": 34,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/jira",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\jira",
        "suites": [{
          "doc": "<p>A testing suite for testing the Jira plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Jira.40 Jira Plugin",
          "id": "s1-s9-s1",
          "keywords": [],
          "metadata": [],
          "name": "40 Jira Plugin",
          "numberOfTests": 34,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/jira/40_jira_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\jira\\40_jira_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.00.01 - Get Manifest From Jira Plugin",
            "id": "s1-s9-s1-t1",
            "keywords": [{
              "arguments": "${JIRA_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Jira, 1.1, CA Technologies Jira, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "00.01 - Get Manifest From Jira Plugin",
            "tags": ["JIRA"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.00.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s9-s1-t2",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "00.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.01 - Get All Bugs From Jira",
              "id": "s1-s9-s1-t3",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "${contents} = Get All Bugs",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${contents}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                }],
              "name": "01 - Get All Bugs From Jira",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.02 - Get All Epics From Jira",
              "id": "s1-s9-s1-t4",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "${contents} = Get All Epics",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${contents}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get All Epics From Jira",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.03 - Get All Stories From Jira",
              "id": "s1-s9-s1-t5",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "${contents} = Get All Stories",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${contents}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                }],
              "name": "03 - Get All Stories From Jira",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.04 - Get All Tasks From Jira",
              "id": "s1-s9-s1-t6",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "${contents} = Get All Tasks",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${contents}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                }],
              "name": "04 - Get All Tasks From Jira",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.05 - Test Add Comment To A Bug",
              "id": "s1-s9-s1-t7",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Bug",
                "name": "Create Issue",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${contents} = Get All Bugs",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${bug}, ${contents.contents[0]}",
                  "name": "set test variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${contents.contents[0].id}, 'new comment'",
                  "name": "${response} = Add Comment",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                }],
              "name": "05 - Test Add Comment To A Bug",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.06 - Test Change Status",
              "id": "s1-s9-s1-t8",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "${response} = Get All Bugs",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${response.contents}",
                  "name": "${contentId} = Update Status From Submitted To In Progress",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Bugs",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.contents}, ${contentId}, In Progress",
                  "name": "Check To See That Status Changed",
                  "type": "KEYWORD"
                }],
              "name": "06 - Test Change Status",
              "tags": ["DEV",
                "JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.07 - Test Create New Issue",
              "id": "s1-s9-s1-t9",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Bug",
                "name": "${result} = Create Issue",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Bugs",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.contents}, ${result}",
                  "name": "${exist} = Check If Id Exist In Content Items",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${exist}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "07 - Test Create New Issue",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.08 - Test Connectivity Wrong Password",
              "id": "s1-s9-s1-t10",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, password, wrongPassword",
                "name": "${error} = Test Wrong Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Unauthorized, please check user and password parameters",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                }],
              "name": "08 - Test Connectivity Wrong Password",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.09 - Test Connectivity Wrong Username",
              "id": "s1-s9-s1-t11",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, username, wrongUsername",
                "name": "${error} = Test Wrong Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Unauthorized, please check user and password parameters",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                }],
              "name": "09 - Test Connectivity Wrong Username",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.10 - Test Connectivity Wrong Url",
              "id": "s1-s9-s1-t12",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, url, wrongUrl",
                "name": "${error} = Test Wrong Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Host name may not be null",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Test Connectivity Wrong Url",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.11 - Test Connectivity Successfully",
              "id": "s1-s9-s1-t13",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}",
                "name": "Test Connection To Jira Successfully",
                "type": "KEYWORD"
              }],
              "name": "11 - Test Connectivity Successfully",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.12 - Test Get Resolutions",
              "id": "s1-s9-s1-t14",
              "keywords": [{
                "arguments": "d",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_RESOLUTIONS_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}",
                  "name": "${response} = Get Dynamic Values",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${resolutions} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${resolutions}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${resolution} IN [ @{resolutions} ]",
                  "type": "FOR"
                }],
              "name": "12 - Test Get Resolutions",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.13 - Test Get Projects",
              "id": "s1-s9-s1-t15",
              "keywords": [{
                "arguments": "p",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_PROJECTS_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${pluginServiceContext} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}",
                  "name": "${response} = Get Dynamic Values",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${projects} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projects}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{projects} ]",
                  "type": "FOR"
                }],
              "name": "13 - Test Get Projects",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.14 - Test Get transitions",
              "id": "s1-s9-s1-t16",
              "keywords": [{
                "arguments": "t",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_TRANSOTIONS_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}",
                  "name": "${response} = Get Transitions Values",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${transitions} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${transitions}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${transition} IN [ @{transitions} ]",
                  "type": "FOR"
                }],
              "name": "14 - Test Get transitions",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.15 - Test Get Roles",
              "id": "s1-s9-s1-t17",
              "keywords": [{
                "arguments": "t",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_ROLES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}",
                  "name": "${response} = Get Dynamic Values For Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${roles} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${roles}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${role} IN [ @{roles} ]",
                  "type": "FOR"
                }],
              "name": "15 - Test Get Roles",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.15 - Test Get types",
              "id": "s1-s9-s1-t18",
              "keywords": [{
                "arguments": "t",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_TYPES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}",
                  "name": "${response} = Get Types Values",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${types} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${types}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${type} IN [ @{types} ]",
                  "type": "FOR"
                }],
              "name": "15 - Test Get types",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.16 - Test Connectivity With Proxy usage without proxy host",
              "id": "s1-s9-s1-t19",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, proxyHost",
                "name": "${error} = Test Missing Proxy Parameter Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Proxy host must be provided",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "16 - Test Connectivity With Proxy usage without proxy host",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.17 - Test Connectivity With Proxy usage non number port",
              "id": "s1-s9-s1-t20",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, proxyPort, NotANumber",
                "name": "${error} = Test Wrong Proxy Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Proxy port must be numeric",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "17 - Test Connectivity With Proxy usage non number port",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.18 - Test Connectivity With Proxy usage without proxy port",
              "id": "s1-s9-s1-t21",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, proxyPort",
                "name": "${error} = Test Missing Proxy Parameter Connection To Jira",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${error}, Proxy port must be provided",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "18 - Test Connectivity With Proxy usage without proxy port",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.19 - Test Connectivity With Proxy usage without proxy port and without use proxy",
              "id": "s1-s9-s1-t22",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, proxyPort, useProxy",
                "name": "${error} = Test Missing Proxy Parameter Connection To Jira",
                "type": "KEYWORD"
              }],
              "name": "19 - Test Connectivity With Proxy usage without proxy port and without use proxy",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.20 - Test Create New Issue With Custom Fields",
              "id": "s1-s9-s1-t23",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task",
                "name": "${result} = Create Issue With Custom Fields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FINISHED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}",
                  "name": "${id} = Get Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${id}",
                  "name": "Should Not Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "20 - Test Create New Issue With Custom Fields",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.21 - Test Create New Issue With Invalid Custom Fields",
              "id": "s1-s9-s1-t24",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Bug",
                "name": "${result} = Create Issue With Invalid Custom Fields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FAILED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.taskState}', 'Check fields and re-enter'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'The custom field NonExistingParam does not exist in this Jira project'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "21 - Test Create New Issue With Invalid Custom Fields",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.22 - Test Wait For Approval",
              "id": "s1-s9-s1-t25",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task",
                "name": "${result} = Create Issue",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${result}",
                  "name": "${issueId} = Get Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${issueId}, Closed, 2",
                  "name": "${result} = Run Wait For Approval Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'RUNNING'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${issueId}, Close Issue, Done",
                  "name": "Update Status With Resolution",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${issueId}, Closed, 2",
                  "name": "${result} = Run Wait For Approval Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FINISHED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'Status is now [Closed]'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                }],
              "name": "22 - Test Wait For Approval",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.23 - Test Waiting For Approval With Wrong Required Status",
              "id": "s1-s9-s1-t26",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task",
                "name": "${result} = Create Issue",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${result}",
                  "name": "${issueId} = Get Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}, ${issueId}, WRONG_STATUS, 2",
                  "name": "${result} = Run Wait For Approval Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'RUNNING'",
                  "name": "Should Not Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'Enter \"@\" (at symbol) to display a list of valid statuses'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                }],
              "name": "23 - Test Waiting For Approval With Wrong Required Status",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.24 - Test Dynamic Values Of Required Status",
              "id": "s1-s9-s1-t27",
              "keywords": [{
                "arguments": "re",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${JIRA_DYNAMIC_REQUIRED_STATUS_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, LIR-78",
                  "name": "${response} = Get Dynamic Values For Given Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "resolved, reopened, in progress",
                  "name": "@{expectedStatuses} = Create List",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${statuses} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${statuses}",
                  "name": "${len} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${len} == 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${status} IN [ @{statuses} ]",
                  "type": "FOR"
                }],
              "name": "24 - Test Dynamic Values Of Required Status",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.25 - Test Create New Issue With Invalid Custom Fields And Advanced Checkbox Null",
              "id": "s1-s9-s1-t28",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Bug",
                "name": "${result} = Create Issue With Invalid Advanced Param And Checkbox Null",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FAILED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.taskState}', 'Check fields and re-enter'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'The custom field NonExistingParam does not exist in this Jira project'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "25 - Test Create New Issue With Invalid Custom Fields And Advanced Checkbox Null",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.26 - Test Create New Issue With Valid Custom Fields And Advanced Checkbox Null",
              "id": "s1-s9-s1-t29",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task",
                "name": "${result} = Create Issue With Valid Advanced Param And Checkbox Null",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FINISHED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}",
                  "name": "${id} = Get Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${id}",
                  "name": "Should Not Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "26 - Test Create New Issue With Valid Custom Fields And Advanced Checkbox Null",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.27 - Test Create New Issue With Invalid Custom Fields And Advanced Checkbox False",
              "id": "s1-s9-s1-t30",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Bug",
                "name": "${result} = Create Issue With Invalid Advanced Param And Checkbox False",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FINISHED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Bugs",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.contents}, ${result}",
                  "name": "${exist} = Check If Id Exist In Content Items",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${exist}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "27 - Test Create New Issue With Invalid Custom Fields And Advanced Checkbox False",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.28 - Test Create New Issue With Valid Dropdown And CheckBox Custom Fields values",
              "id": "s1-s9-s1-t31",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task, jira/jiraValidCustomFields.json",
                "name": "${result} = Create Issue With Advanced CustomFields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FINISHED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}",
                  "name": "${id} = Get Issue Id",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${id}",
                  "name": "Should Not Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "28 - Test Create New Issue With Valid Dropdown And CheckBox Custom Fields values",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.29 - Negative Test - Create New Issue With Invalid Dropdown Custom Field Value",
              "id": "s1-s9-s1-t32",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task, jira/jiraInvalidDropdownValue.json",
                "name": "${result} = Create Issue With Advanced CustomFields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FAILED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Tasks",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'Internal Jira Plug-in Error: The value myOption4 is not valid'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "29 - Negative Test - Create New Issue With Invalid Dropdown Custom Field Value",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.30 - Negative Test - Create New Issue With Empty Dropdown Custom Field key",
              "id": "s1-s9-s1-t33",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task, jira/jiraEmptyDropdownKey.json",
                "name": "${result} = Create Issue With Advanced CustomFields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FAILED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Tasks",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'The custom field, does not exist in this Jira project'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "30 - Negative Test - Create New Issue With Empty Dropdown Custom Field key",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Jira.40 Jira Plugin.31 - Negative Test - Create New Issue With Invalid CheckBox Custom Field Value",
              "id": "s1-s9-s1-t34",
              "keywords": [{
                "arguments": "${JIRA_PLUGIN_URL}, Task, jira/jiraInvalidCheckBoxValue.json",
                "name": "${result} = Create Issue With Advanced CustomFields",
                "type": "KEYWORD"
              },
                {
                  "arguments": "'${result.externalTaskExecutionStatus}', 'FAILED'",
                  "name": "Should Be Equal",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${JIRA_PLUGIN_URL}",
                  "name": "${response} = Get All Tasks",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "'${result.detailedInfo}', 'Internal Jira Plug-in Error: The value aaa is not valid'",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "31 - Negative Test - Create New Issue With Invalid CheckBox Custom Field Value",
              "tags": ["JIRA"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Kubernetes",
        "id": "s1-s10",
        "keywords": [],
        "metadata": [],
        "name": "Kubernetes",
        "numberOfTests": 86,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/kubernetes",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\kubernetes",
        "suites": [{
          "doc": "<p>A testing suite for testing the kubernetes plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin",
          "id": "s1-s10-s1",
          "keywords": [{
            "arguments": "",
            "name": "Kubernetes Plugin Suite Setup",
            "type": "SETUP"
          },
            {
              "arguments": "",
              "name": "Kubernetes Plugin Suite Teardown",
              "type": "TEARDOWN"
            }],
          "metadata": [["Author: Ahaz Israeli",
            ""]],
          "name": "25 Kubernetes Plugin",
          "numberOfTests": 60,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/kubernetes/25_kubernetes_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\kubernetes\\25_kubernetes_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.01 - Get Manifest From Kubernetes Plugin",
            "id": "s1-s10-s1-t1",
            "keywords": [{
              "arguments": "${KUBERNETES_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Kubernetes, 1.1, ca.cdd.kubernetes, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Kubernetes Plugin",
            "tags": ["KUBERNETES"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s10-s1-t2",
              "keywords": [{
                "arguments": "${KUBERNETES_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.03 - Connectivity Test With User And Password",
              "id": "s1-s10-s1-t3",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test With User And Password",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.04 - Connectivity Test Without User And Password",
              "id": "s1-s10-s1-t4",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${EMPTY}, ${EMPTY}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "04 - Connectivity Test Without User And Password",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.05 - Negative Connectivity Test Unknown Kuberenetes User",
              "id": "s1-s10-s1-t5",
              "keywords": [{
                "arguments": "${KUBE_URL}, WHO_IS_THIS, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${KUBE_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Message: Unauthorized",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Unknown Kuberenetes User",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.06 - Negative Connectivity Test Wrong Kuberenetes Credentials",
              "id": "s1-s10-s1-t6",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, WRONG_KUBERENETES_PASSWORD, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${KUBE_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Message: Unauthorized",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong Kuberenetes Credentials",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.07 - Negative Connectivity Test Empty Kuberenetes Credentials",
              "id": "s1-s10-s1-t7",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${EMPTY}, ${EMPTY}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Empty Kuberenetes Credentials",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.08 - Negative Connectivity Test Empty Kuberenetes Url",
              "id": "s1-s10-s1-t8",
              "keywords": [{
                "arguments": "${EMPTY}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty url parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "08 - Negative Connectivity Test Empty Kuberenetes Url",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.09 - Negative Connectivity Test Wrong GitHub Repository",
              "id": "s1-s10-s1-t9",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_REPO}, nonExistingRepository",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${NON_EXISTING_GIT_REPO}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${response} = Kuberenetes Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, repository ${NON_EXISTING_GIT_REPO} was not found",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09 - Negative Connectivity Test Wrong GitHub Repository",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.10 - Negative Connectivity Test Wrong GitHub password",
              "id": "s1-s10-s1-t10",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, GIT_WRONG_PASSWORD",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Failed to connect to source control server",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Unauthorized",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative Connectivity Test Wrong GitHub password",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.11 - Negative Connectivity Test Wrong GitHub username",
              "id": "s1-s10-s1-t11",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_USER}, nonExistingAccount",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${NON_EXISTING_GIT_USER}, ${GIT_PASSWORD}",
                  "name": "${response} = Kuberenetes Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Failed to connect to source control server",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Unauthorized",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "11 - Negative Connectivity Test Wrong GitHub username",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.12 - Negative Connectivity Test Empty GitHub username",
              "id": "s1-s10-s1-t12",
              "keywords": [{
                "arguments": "${NON_EXISTING_GIT_USER}, nonExistingAccount",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${EMPTY}, ${GIT_PASSWORD}",
                  "name": "${response} = Kuberenetes Connection Test",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "12 - Negative Connectivity Test Empty GitHub username",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.13 - Negative Connectivity Test Empty GitHub password",
              "id": "s1-s10-s1-t13",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${EMPTY}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty authentication parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "13 - Negative Connectivity Test Empty GitHub password",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.14 - Negative Connectivity Test Empty GitHub Url",
              "id": "s1-s10-s1-t14",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${EMPTY}, ${GIT_REPOSITORY_OWNER}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Empty url parameter received in endpoint definition",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "14 - Negative Connectivity Test Empty GitHub Url",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.15 - Get All Namespaces",
              "id": "s1-s10-s1-t15",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_NAMESPACES_URL}?max_results=8192, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${namespacesCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${namespacesCount} &gt;= 2",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${ROBOT_FULL_NS}, empty-${ROBOT_FULL_NS}",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "15 - Get All Namespaces",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.16 - Get Filtered Namespaces",
              "id": "s1-s10-s1-t16",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_NAMESPACES_URL}?filter=${ROBOT_FULL_NS}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 2",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${ROBOT_FULL_NS}, empty-${ROBOT_FULL_NS}",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "16 - Get Filtered Namespaces",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.17 - Get Only One Namespace",
              "id": "s1-s10-s1-t17",
              "keywords": [{
                "arguments": "${count}, 1",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_NAMESPACES_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "17 - Get Only One Namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.18 - Get All Deployments",
              "id": "s1-s10-s1-t18",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}?max_results=8192, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 6",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, yellow, orange, red, purple, blue, green",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "18 - Get All Deployments",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.19 - Get Filtered Deployments",
              "id": "s1-s10-s1-t19",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}?filter=r, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 4",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, orange, red, purple, green",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "19 - Get Filtered Deployments",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.20 - Get Only Three Deployments",
              "id": "s1-s10-s1-t20",
              "keywords": [{
                "arguments": "${count}, 3",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "20 - Get Only Three Deployments",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.21 - Get Deployments From Namespace Without Any",
              "id": "s1-s10-s1-t21",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, empty-${ROBOT_FULL_NS}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "Should Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "21 - Get Deployments From Namespace Without Any",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.22 - Negative Get Deployments Without context",
              "id": "s1-s10-s1-t22",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must not be null",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "22 - Negative Get Deployments Without context",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.23 - Negative Get Deployments With context without namespace",
              "id": "s1-s10-s1-t23",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "somekey, somevalue",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must include 'namespace' entry",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "23 - Negative Get Deployments With context without namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.24 - Negative Get Deployments With context with unknown namespace",
              "id": "s1-s10-s1-t24",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingNamespace",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "namespace, ${nonExisiting}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_DPLOYMENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, Namespace",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, ${nonExisiting}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "24 - Negative Get Deployments With context with unknown namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.25 - Get All Containers",
              "id": "s1-s10-s1-t25",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}, deployment, red",
                  "name": "${search_properties} = Generate Search Context Properties With Two Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}?max_results=8192, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 3",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, red-container, white-container, black-container",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "25 - Get All Containers",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.27 - Get Filtered Containers",
              "id": "s1-s10-s1-t26",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}, deployment, red",
                  "name": "${search_properties} = Generate Search Context Properties With Two Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}?filter=black, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 1",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, black-container",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "27 - Get Filtered Containers",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.28 - Get Only One Container",
              "id": "s1-s10-s1-t27",
              "keywords": [{
                "arguments": "${count}, 1",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}, deployment, red",
                  "name": "${search_properties} = Generate Search Context Properties With Two Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "28 - Get Only One Container",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.29 - Negative Get Containers Without context",
              "id": "s1-s10-s1-t28",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must not be null",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "29 - Negative Get Containers Without context",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.30 - Negative Get Containers With context without namespace",
              "id": "s1-s10-s1-t29",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "deployment, red",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must include 'namespace' entry",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "30 - Negative Get Containers With context without namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.31 - Negative Get Containers With context without deployment",
              "id": "s1-s10-s1-t30",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}",
                  "name": "${search_properties} = Generate Search Context Properties By Name JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, plugin service context must include 'deployment' entry",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "31 - Negative Get Containers With context without deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.32 - Negative Get Containers With context with unknown namespace",
              "id": "s1-s10-s1-t31",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingNamespace",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "namespace, ${nonExisiting}, deployment, red",
                  "name": "${search_properties} = Generate Search Context Properties With Two Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, Namespace",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, ${nonExisiting}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "32 - Negative Get Containers With context with unknown namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.33 - Negative Get Containers With context with unknown deploymnet",
              "id": "s1-s10-s1-t32",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingDeployment",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "namespace, ${ROBOT_FULL_NS}, deployment, ${nonExisiting}",
                  "name": "${search_properties} = Generate Search Context Properties With Two Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${search_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_CONTAINERS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, Deployment",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, ${nonExisiting}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "33 - Negative Get Containers With context with unknown deploymnet",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.34 - Get All Branches",
              "id": "s1-s10-s1-t33",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}?max_results=8192, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 5",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, master, first, second, third, fourth",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "34 - Get All Branches",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.35 - Get All Branches From Empty Repository",
              "id": "s1-s10-s1-t34",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${EMPTY_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                "name": "${ep_properties} = Generate Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "Should Be Empty",
                  "type": "KEYWORD"
                }],
              "name": "35 - Get All Branches From Empty Repository",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.36 - Get Filtered Branches",
              "id": "s1-s10-s1-t35",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}?filter=st, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 2",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, master, first",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "36 - Get Filtered Branches",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.37 - Get Only Three Branches",
              "id": "s1-s10-s1-t36",
              "keywords": [{
                "arguments": "${count}, 3",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "37 - Get Only Three Branches",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.38 - Negative Get Branches With Unknown Repository Owner",
              "id": "s1-s10-s1-t37",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingRepositoryOwner",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${nonExisiting}, ${KUBERNETES_REPOSITORY}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, Failed retrieving branches",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, owner",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "38 - Negative Get Branches With Unknown Repository Owner",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.39 - Negative Get Branches With Unknown Repository",
              "id": "s1-s10-s1-t38",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingRepository",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${nonExisiting}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, Failed retrieving branches",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, does not exist",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.message}, repository",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "39 - Negative Get Branches With Unknown Repository",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.40 - Create namespace though task deployment",
              "id": "s1-s10-s1-t39",
              "keywords": [{
                "arguments": "${games_namespace}, robot-games-namespace-${ROBOT_NS_SUFFIX}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                  "name": "Validate Kubernetes Namespace Not Exist",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-only-ns-${ROBOT_NS_SUFFIX}.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Success, 1 resource was created",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                  "name": "Validate Kubernetes Namespace Exist",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                  "name": "Delete Kubernetes Namespace",
                  "type": "TEARDOWN"
                }],
              "name": "40 - Create namespace though task deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.41 - Create deployments though task deployment",
              "id": "s1-s10-s1-t40",
              "keywords": [{
                "arguments": "Set Test Variable, ${games_namespace}, robot-games-namespace-${ROBOT_NS_SUFFIX}, AND, Create Kubernetes Namespace, ${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-deployments-${ROBOT_NS_SUFFIX}.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Success, 2 resources were created",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}, monopol, taki",
                  "name": "Validate Kubernetes Deployments Exist",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                  "name": "Delete Kubernetes Namespace",
                  "type": "TEARDOWN"
                }],
              "name": "41 - Create deployments though task deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.42 - Create deployments though task deployment with explicit namespace",
              "id": "s1-s10-s1-t41",
              "keywords": [{
                "arguments": "Set Test Variable, ${sports_namespace}, robot-sports-namespace-${ROBOT_NS_SUFFIX}, AND, Create Kubernetes Namespace, ${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${sports_namespace}",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${sports_namespace}, master, create-deployments-no-namespace.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Success, 3 resources were created",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${sports_namespace}, football, basketball, tennis",
                  "name": "Validate Kubernetes Deployments Exist",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${sports_namespace}",
                  "name": "Delete Kubernetes Namespace",
                  "type": "TEARDOWN"
                }],
              "name": "42 - Create deployments though task deployment with explicit namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.43 - Create Deployment with empty branch defualt master",
              "id": "s1-s10-s1-t42",
              "keywords": [{
                "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${EMPTY}, create-only-ns.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Success, 1 resource was created",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                  "name": "Delete Kubernetes Namespace",
                  "type": "TEARDOWN"
                }],
              "name": "43 - Create Deployment with empty branch defualt master",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.44 - Negative Create Deployment with non existing branch",
              "id": "s1-s10-s1-t43",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingBranch",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${nonExisiting}, create-only-ns.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, File not found in source control",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "44 - Negative Create Deployment with non existing branch",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.45 - Negative Create Deployment with empty Yaml",
              "id": "s1-s10-s1-t44",
              "keywords": [{
                "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, ${EMPTY}",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, File name is empty",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "45 - Negative Create Deployment with empty Yaml",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.46 - Negative Create Deployment with non exisiting Yaml",
              "id": "s1-s10-s1-t45",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingYamlFile",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, ${nonExisiting}",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, File not found in source control",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "46 - Negative Create Deployment with non exisiting Yaml",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.47 - Negative Create Deployment with file which is not yaml",
              "id": "s1-s10-s1-t46",
              "keywords": [{
                "arguments": "${nonYamlFile}, non-valid-yaml.yaml",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, ${nonYamlFile}",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, Failed parsing yaml file '${nonYamlFile}'.",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "47 - Negative Create Deployment with file which is not yaml",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.48 - Negative Create Deployment with non existing repository",
              "id": "s1-s10-s1-t47",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingRepository",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${GIT_URL}, ${GIT_REPOSITORY_OWNER}, ${nonExisiting}, ${GIT_USERNAME}, ${GIT_PASSWORD}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-only-ns.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, File not found in source control",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "48 - Negative Create Deployment with non existing repository",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.49 - Negative Create deployments though task deployment with empty explicit namespace",
              "id": "s1-s10-s1-t48",
              "keywords": [{
                "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-deployments-no-namespace.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, Namespace not specified. But operation requires namespace.",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "49 - Negative Create deployments though task deployment with empty explicit namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.50 - Negative Create deployments though task deployment with uknown explicit namespace",
              "id": "s1-s10-s1-t49",
              "keywords": [{
                "arguments": "${nonExisiting}, NonExistingNamespace",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${nonExisiting}, master, create-deployments-no-namespace.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, namespaces \"${nonExisiting}\" not found",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "50 - Negative Create deployments though task deployment with uknown explicit namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.51 - Delete namespace though task deployment",
              "id": "s1-s10-s1-t50",
              "keywords": [{
                "arguments": "Set Test Variable, ${games_namespace}, robot-games-namespace-${ROBOT_NS_SUFFIX}, AND, Create Kubernetes Namespace, ${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_DELETE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-only-ns-${ROBOT_NS_SUFFIX}.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Success, 1 resource was deleted",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "60 sec, 1 sec, Validate Kubernetes Namespace Not Exist, ${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                  "name": "Wait Until Keyword Succeeds",
                  "type": "KEYWORD"
                }],
              "name": "51 - Delete namespace though task deployment",
              "tags": ["DEV",
                "KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.52 - Delete namespace that does not exist though task deployment",
              "id": "s1-s10-s1-t51",
              "keywords": [{
                "arguments": "Set Test Variable, ${other_namespace}, robot-other-namespace-${ROBOT_NS_SUFFIX}, AND, Create Kubernetes Namespace, ${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${other_namespace}",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${url}, ${KUBERNETES_DELETE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, master, create-only-ns.yaml",
                  "name": "${task_properies} = Generate Create Deployment JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, Failed to delete resources",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${other_namespace}",
                  "name": "Delete Kubernetes Namespace",
                  "type": "TEARDOWN"
                }],
              "name": "52 - Delete namespace that does not exist though task deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.53 - Set image",
              "id": "s1-s10-s1-t52",
              "keywords": [{
                "arguments": "${url}, ${KUBERNETES_SET_IMAGE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${ROBOT_FULL_NS}, orange, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${execution_context}, \"executionContext\": {}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies}, ${execution_context} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FINISHED, Finished, Finished to set image",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "53 - Set image",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.54 - Negative Set Image Without Execution Context",
              "id": "s1-s10-s1-t53",
              "keywords": [{
                "arguments": "${url}, ${KUBERNETES_SET_IMAGE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${ROBOT_FULL_NS}, orange, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${properties}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed, execution context must be provided to complete the task.",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "54 - Negative Set Image Without Execution Context",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.55 - Negative Set Image With Empty Namespace",
              "id": "s1-s10-s1-t54",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, orange, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Namespace is empty",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "55 - Negative Set Image With Empty Namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.56 - Negative Set Image With Empty Deployment",
              "id": "s1-s10-s1-t55",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ROBOT_FULL_NS}, ${EMPTY}, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Deployment is empty",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "56 - Negative Set Image With Empty Deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.57 - Negative Set Image With Empty Container",
              "id": "s1-s10-s1-t56",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${ROBOT_FULL_NS}, orange, ${EMPTY}, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Container is empty",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "57 - Negative Set Image With Empty Container",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.58 - Negative Set Image With Wrong Container",
              "id": "s1-s10-s1-t57",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${deploument}, orange",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${container}, blue-container",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${ROBOT_FULL_NS}, ${deploument}, ${container}, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Container '${container}' does not exist in deployment '${deploument}'",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "58 - Negative Set Image With Wrong Container",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.59 - Negative Set Image With Empty Image",
              "id": "s1-s10-s1-t58",
              "keywords": [{
                "arguments": "${ROBOT_FULL_NS}, orange, orange-container, ${EMPTY}",
                "name": "${task_properies} = Generate Set Image JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${task_properies}, Image is empty",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "59 - Negative Set Image With Empty Image",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.60 - Negative Set Image With Non Exisiting Namespace",
              "id": "s1-s10-s1-t59",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${nonExisiting}, NonExistingNamespace",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${nonExisiting}, orange, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Namespace '${nonExisiting}' does not exist",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "60 - Negative Set Image With Non Exisiting Namespace",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.25 Kubernetes Plugin.61 - Negative Set Image With Non Exisiting Deployment",
              "id": "s1-s10-s1-t60",
              "keywords": [{
                "arguments": "${image}, ${KUBERNETES_VALID_IMAGE}:${KUBERNETES_VALID_TAG}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${nonExisiting}, NonExistingDeployment",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${ROBOT_FULL_NS}, ${nonExisiting}, orange-container, ${image}",
                  "name": "${task_properies} = Generate Set Image JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_properies}, Deployment '${nonExisiting}' not found within namespace '${ROBOT_FULL_NS}'",
                  "name": "Verify Bad Set Image Execution",
                  "type": "KEYWORD"
                }],
              "name": "61 - Negative Set Image With Non Exisiting Deployment",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            }]
        },
          {
            "doc": "<p>A testing suite for testing the kubernetes plugin\x3c/p>",
            "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0",
            "id": "s1-s10-s2",
            "keywords": [{
              "arguments": "",
              "name": "Kubernetes Plugin Suite Setup",
              "type": "SETUP"
            },
              {
                "arguments": "",
                "name": "Kubernetes Plugin Suite Teardown",
                "type": "TEARDOWN"
              }],
            "metadata": [["Author: Yochay Menachem",
              ""]],
            "name": "26 Kubernetes Bitbucket 1.0",
            "numberOfTests": 13,
            "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/kubernetes/26_kubernetes_bitbucket_1.0.robot",
            "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\kubernetes\\26_kubernetes_bitbucket_1.0.robot",
            "suites": [],
            "tests": [{
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.01 - Connectivity Test With User And Password",
              "id": "s1-s10-s2-t1",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "01 - Connectivity Test With User And Password",
              "tags": ["DEV",
                "KUBERNETES"],
              "timeout": "5 minutes"
            },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.02 - Negative Connectivity Test Wrong bitbucket Repository",
                "id": "s1-s10-s2-t2",
                "keywords": [{
                  "arguments": "${NON_EXISTING_GIT_REPO}, nonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${NON_EXISTING_GIT_REPO}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${response} = Kuberenetes Connection Test",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server Repository tp/nonexistingrepository does not exist.",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "02 - Negative Connectivity Test Wrong bitbucket Repository",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.03 - Negative Connectivity Test Wrong bitbucket password",
                "id": "s1-s10-s2-t3",
                "keywords": [{
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${BITBUCKET_USERNAME}, wrong_password",
                  "name": "${response} = Kuberenetes Connection Test",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to authenticate to Bitbucket",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "03 - Negative Connectivity Test Wrong bitbucket password",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.04 - Negative Connectivity Test Wrong bitbucket username",
                "id": "s1-s10-s2-t4",
                "keywords": [{
                  "arguments": "${NON_EXISTING_USER}, nonExistingUser",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${NON_EXISTING_USER}, ${BITBUCKET_PASSWORD}",
                    "name": "${response} = Kuberenetes Connection Test",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to authenticate to Bitbucket",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "04 - Negative Connectivity Test Wrong bitbucket username",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.05 - Get All Branches",
                "id": "s1-s10-s2-t5",
                "keywords": [{
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}?max_results=10, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, 3",
                    "name": "Length Should Be",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, master, bugfix/bug, release/v630-1",
                    "name": "Dynamic Values Should Contain Values",
                    "type": "KEYWORD"
                  }],
                "name": "05 - Get All Branches",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.06 - Get Filtered Branches",
                "id": "s1-s10-s2-t6",
                "keywords": [{
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}?filter=bug, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, 1",
                    "name": "Length Should Be",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, bugfix/bug",
                    "name": "Dynamic Values Should Contain Values",
                    "type": "KEYWORD"
                  }],
                "name": "06 - Get Filtered Branches",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.07 - Negative Get Branches With Unknown Repository Owner",
                "id": "s1-s10-s2-t7",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepositoryOwner",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${nonExisiting}, ${KUBERNETES_REPOSITORY}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.errorCode}, UNEXPECTED",
                    "name": "Should Be Equal As Strings",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, Failed retrieving branches",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, does not exist",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, owner",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "07 - Negative Get Branches With Unknown Repository Owner",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.08 - Negative Get Branches With Unknown Repository",
                "id": "s1-s10-s2-t8",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${nonExisiting}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.errorCode}, UNEXPECTED",
                    "name": "Should Be Equal As Strings",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, Failed retrieving branches",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, does not exist",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, repository",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "08 - Negative Get Branches With Unknown Repository",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.09 - Create namespace though task deployment",
                "id": "s1-s10-s2-t9",
                "keywords": [{
                  "arguments": "${games_namespace}, robot-games-namespace-${ROBOT_NS_SUFFIX}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                    "name": "Validate Kubernetes Namespace Not Exist",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FINISHED, Success, 1 resource was created",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Validate Kubernetes Namespace Exist",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Delete Kubernetes Namespace",
                    "type": "TEARDOWN"
                  }],
                "name": "09 - Create namespace though task deployment",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.10 - Create Deployment with empty branch defualt master",
                "id": "s1-s10-s2-t10",
                "keywords": [{
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, ${EMPTY}, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FINISHED, Success, 1 resource was created",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Delete Kubernetes Namespace",
                    "type": "TEARDOWN"
                  }],
                "name": "10 - Create Deployment with empty branch defualt master",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.11 - Negative Create Deployment with non existing branch",
                "id": "s1-s10-s2-t11",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingBranch",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, ${nonExisiting}, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, File not found in source control",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "11 - Negative Create Deployment with non existing branch",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.12 - Negative Create Deployment with non exisiting Yaml",
                "id": "s1-s10-s2-t12",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingYamlFile",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, ${nonExisiting}",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, File not found in source control",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "12 - Negative Create Deployment with non exisiting Yaml",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.26 Kubernetes Bitbucket 1.0.13 - Negative Create Deployment with non existing repository",
                "id": "s1-s10-s2-t13",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${nonExisiting}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, File not found in source control",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "13 - Negative Create Deployment with non existing repository",
                "tags": ["DEV",
                  "KUBERNETES"],
                "timeout": "5 minutes"
              }]
          },
          {
            "doc": "<p>A testing suite for testing the kubernetes plugin\x3c/p>",
            "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0",
            "id": "s1-s10-s3",
            "keywords": [{
              "arguments": "",
              "name": "Kubernetes Plugin Suite Setup",
              "type": "SETUP"
            },
              {
                "arguments": "",
                "name": "Kubernetes Plugin Suite Teardown",
                "type": "TEARDOWN"
              }],
            "metadata": [["Author: Yochay Menachem",
              ""]],
            "name": "27 Kubernetes Bitbucket 2.0",
            "numberOfTests": 13,
            "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/kubernetes/27_kubernetes_bitbucket_2.0.robot",
            "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\kubernetes\\27_kubernetes_bitbucket_2.0.robot",
            "suites": [],
            "tests": [{
              "doc": "",
              "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.01 - Connectivity Test With User And Password",
              "id": "s1-s10-s3-t1",
              "keywords": [{
                "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                "name": "${response} = Kuberenetes Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "01 - Connectivity Test With User And Password",
              "tags": ["KUBERNETES"],
              "timeout": "5 minutes"
            },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.02 - Negative Connectivity Test Wrong bitbucket Repository",
                "id": "s1-s10-s3-t2",
                "keywords": [{
                  "arguments": "${NON_EXISTING_GIT_REPO}, nonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${NON_EXISTING_GIT_REPO}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${response} = Kuberenetes Connection Test",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server Repository cdd-test/nonexistingrepository not found",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "02 - Negative Connectivity Test Wrong bitbucket Repository",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.03 - Negative Connectivity Test Wrong bitbucket password",
                "id": "s1-s10-s3-t3",
                "keywords": [{
                  "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${BITBUCKET_USERNAME}, wrong_password",
                  "name": "${response} = Kuberenetes Connection Test",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to authenticate to Bitbucket",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "03 - Negative Connectivity Test Wrong bitbucket password",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.04 - Negative Connectivity Test Wrong bitbucket username",
                "id": "s1-s10-s3-t4",
                "keywords": [{
                  "arguments": "${NON_EXISTING_USER}, nonExistingUser",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${BITBUCKET_REPOSITORY_OWNER}, ${NON_EXISTING_USER}, ${BITBUCKET_PASSWORD}",
                    "name": "${response} = Kuberenetes Connection Test",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.success}",
                    "name": "Should Not Be True",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to connect to source control server",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${response.errorMessage}, Failed to authenticate to Bitbucket",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "04 - Negative Connectivity Test Wrong bitbucket username",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.05 - Get All Branches",
                "id": "s1-s10-s3-t5",
                "keywords": [{
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}?max_results=10, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, 2",
                    "name": "Length Should Be",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, master, test",
                    "name": "Dynamic Values Should Contain Values",
                    "type": "KEYWORD"
                  }],
                "name": "05 - Get All Branches",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.06 - Get Filtered Branches",
                "id": "s1-s10-s3-t6",
                "keywords": [{
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}?filter=Test, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, 1",
                    "name": "Length Should Be",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.values}, test",
                    "name": "Dynamic Values Should Contain Values",
                    "type": "KEYWORD"
                  }],
                "name": "06 - Get Filtered Branches",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.07 - Negative Get Branches With Unknown Repository Owner",
                "id": "s1-s10-s3-t7",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepositoryOwner",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${nonExisiting}, ${KUBERNETES_REPOSITORY}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.errorCode}, UNEXPECTED",
                    "name": "Should Be Equal As Strings",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, Failed retrieving branches",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, does not exist",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, owner",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "07 - Negative Get Branches With Unknown Repository Owner",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.08 - Negative Get Branches With Unknown Repository",
                "id": "s1-s10-s3-t8",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${nonExisiting}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBERNETES_GET_BRANCHES_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                    "name": "${result} = Execute POST Operation Class",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.errorCode}, UNEXPECTED",
                    "name": "Should Be Equal As Strings",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, Failed retrieving branches",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, does not exist",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result.message}, repository",
                    "name": "Should Match Regexp",
                    "type": "KEYWORD"
                  }],
                "name": "08 - Negative Get Branches With Unknown Repository",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.09 - Create namespace though task deployment",
                "id": "s1-s10-s3-t9",
                "keywords": [{
                  "arguments": "${games_namespace}, robot-games-namespace-${ROBOT_NS_SUFFIX}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${games_namespace}",
                    "name": "Validate Kubernetes Namespace Not Exist",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FINISHED, Success, 1 resource was created",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Validate Kubernetes Namespace Exist",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Delete Kubernetes Namespace",
                    "type": "TEARDOWN"
                  }],
                "name": "09 - Create namespace though task deployment",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.10 - Create Deployment with empty branch defualt master",
                "id": "s1-s10-s3-t10",
                "keywords": [{
                  "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, ${EMPTY}, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FINISHED, Success, 1 resource was created",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, robot-games-namespace",
                    "name": "Delete Kubernetes Namespace",
                    "type": "TEARDOWN"
                  }],
                "name": "10 - Create Deployment with empty branch defualt master",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.11 - Negative Create Deployment with non existing branch",
                "id": "s1-s10-s3-t11",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingBranch",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, ${nonExisiting}, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, File not found in source control",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "11 - Negative Create Deployment with non existing branch",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.12 - Negative Create Deployment with non exisiting Yaml",
                "id": "s1-s10-s3-t12",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingYamlFile",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "",
                    "name": "${ep_properties} = Generate Good Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, ${nonExisiting}",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, File not found in source control",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "12 - Negative Create Deployment with non exisiting Yaml",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Kubernetes.27 Kubernetes Bitbucket 2.0.13 - Negative Create Deployment with non existing repository",
                "id": "s1-s10-s3-t13",
                "keywords": [{
                  "arguments": "${nonExisiting}, NonExistingRepository",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                  {
                    "arguments": "${url}, ${KUBERNETES_CREATE_DEPLOYMENT_URL}",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${KUBE_URL}, ${KUBE_USERNAME}, ${KUBE_PASSWORD}, ${BITBUCKET_API_URL}, ${BITBUCKET_ACCOUNT_NAME}, ${nonExisiting}, ${BITBUCKET_USERNAME}, ${BITBUCKET_PASSWORD}",
                    "name": "${ep_properties} = Generate Connection Properties JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${EMPTY}, master, src/create-only-ns.yaml",
                    "name": "${task_properies} = Generate Create Deployment JSON",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${properties}, { ${ep_properties}, ${task_properies} }",
                    "name": "Set Test Variable",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${url}, ${properties}, execute",
                    "name": "${result} = Execute Task",
                    "type": "KEYWORD"
                  },
                  {
                    "arguments": "${result}, FAILED, Failed, Failed to connect to source control server",
                    "name": "Validate Task Execution Results",
                    "type": "KEYWORD"
                  }],
                "name": "13 - Negative Create Deployment with non existing repository",
                "tags": ["KUBERNETES"],
                "timeout": "5 minutes"
              }]
          }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Ra",
        "id": "s1-s11",
        "keywords": [],
        "metadata": [],
        "name": "Ra",
        "numberOfTests": 56,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/ra",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\ra",
        "suites": [{
          "doc": "<p>A testing suite for testing the RA plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Ra.20 Ra Plugin",
          "id": "s1-s11-s1",
          "keywords": [],
          "metadata": [["Author:Ronen",
            ""]],
          "name": "20 Ra Plugin",
          "numberOfTests": 56,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/ra/20_ra_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\ra\\20_ra_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>In the RA plugin there should be manifest a file\x3c/p>",
            "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.01 - Get Manifest From RA Plugin",
            "id": "s1-s11-s1-t1",
            "keywords": [{
              "arguments": "${RA_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Release Automation, 5.5.4, ca.cdd.ra, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From RA Plugin",
            "tags": ["RA"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s11-s1-t2",
              "keywords": [{
                "arguments": "${RA_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.04.01 - Validate Ra Applications (6.2 RA)",
              "id": "s1-s11-s1-t3",
              "keywords": [{
                "arguments": "${RA_6.2_HOST}",
                "name": "${newApplications} = Create RA Applications And Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.2_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse}, ${newApplications}",
                  "name": "Validate RA Response Application And Environment Primitives Match",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.2_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "04.01 - Validate Ra Applications (6.2 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.04.02 - Validate Ra Applications (6.4 RA)",
              "id": "s1-s11-s1-t4",
              "keywords": [{
                "arguments": "${RA_6.4_HOST}",
                "name": "${newApplications} = Create RA Applications And Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.4_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse}, ${newApplications}",
                  "name": "Validate RA Response Application And Environment Primitives Match",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "04.02 - Validate Ra Applications (6.4 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.05.01 - Validate Get Ra Applications And Environment Without Description (6.2 RA)",
              "id": "s1-s11-s1-t5",
              "keywords": [{
                "arguments": "${RA_6.2_HOST}",
                "name": "${newApplications} = Create RA Applications And Environments Without Description",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.2_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse}, ${newApplications}",
                  "name": "Validate RA Response Application And Environment Primitives Match",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.2_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "05.01 - Validate Get Ra Applications And Environment Without Description (6.2 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.05.02 - Validate Get Ra Applications And Environment Without Description (6.4 RA)",
              "id": "s1-s11-s1-t6",
              "keywords": [{
                "arguments": "${RA_6.4_HOST}",
                "name": "${newApplications} = Create RA Applications And Environments Without Description",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.4_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse}, ${newApplications}",
                  "name": "Validate RA Response Application And Environment Primitives Match",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "05.02 - Validate Get Ra Applications And Environment Without Description (6.4 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.06 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.2 RA)",
              "id": "s1-s11-s1-t7",
              "keywords": [{
                "arguments": "${RA_6.2_HOST}",
                "name": "${newApplications} = Create RA Applications And Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.2_HOST}, ${newApplications}",
                  "name": "Update All Application Description To Null",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.2_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse.applications}, ${newApplications}",
                  "name": "Validate That Application Description Is Null",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.2_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "06 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.2 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.07.01 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.2 RA)",
              "id": "s1-s11-s1-t8",
              "keywords": [{
                "arguments": "${RA_6.2_HOST}",
                "name": "${newApplications} = Create External Applications And Delete Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.2_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse.applications}, ${newApplications}",
                  "name": "Validate That Application Has No Environment",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.2_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "07.01 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.2 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.07.02 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.4 RA)",
              "id": "s1-s11-s1-t9",
              "keywords": [{
                "arguments": "${RA_6.4_HOST}",
                "name": "${newApplications} = Create External Applications And Delete Environments",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.4_HOST}, ${RA_PORT}, ${RA_USER}, ${RA_PASSWORD}",
                  "name": "${raResponse} = Get Release Automation Applications",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${raResponse.applications}, ${newApplications}",
                  "name": "Validate That Application Has No Environment",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_HOST}, ${newApplications}",
                  "name": "Delete RA Applications",
                  "type": "TEARDOWN"
                }],
              "name": "07.02 - Validate Get Ra Applications After Sync To See That Chacing Is Disbale (6.4 RA)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.08 - Test RA Connectivity Wrong Password",
              "id": "s1-s11-s1-t10",
              "keywords": [{
                "arguments": "${RA_PLUGIN_URL}",
                "name": "${connected_successfully} = Test Connection To RA Wrong Password",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${connected_successfully}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                }],
              "name": "08 - Test RA Connectivity Wrong Password",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.09 - Test RA Connectivity Wrong Username",
              "id": "s1-s11-s1-t11",
              "keywords": [{
                "arguments": "${RA_PLUGIN_URL}",
                "name": "${connected_successfully} = Test Connection To RA Wrong Username",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${connected_successfully}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                }],
              "name": "09 - Test RA Connectivity Wrong Username",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.10- Test RA Connectivity Wrong Url",
              "id": "s1-s11-s1-t12",
              "keywords": [{
                "arguments": "${RA_PLUGIN_URL}",
                "name": "${connected_successfully} = Test Connection To RA Wrong Url",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${connected_successfully}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                }],
              "name": "10- Test RA Connectivity Wrong Url",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.11 - Test RA Connectivity Successfully",
              "id": "s1-s11-s1-t13",
              "keywords": [{
                "arguments": "${RA_PLUGIN_URL}",
                "name": "${connected_successfully} = Test Connection To RA Successfully",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${connected_successfully}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "11 - Test RA Connectivity Successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.12 - Get RA applications successfully - no filter",
              "id": "s1-s11-s1-t14",
              "keywords": [{
                "arguments": "",
                "name": "${response} = Get application dynamic values filter by \"\"",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "12 - Get RA applications successfully - no filter",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.13 - Get RA applications successfully - with filter RA",
              "id": "s1-s11-s1-t15",
              "keywords": [{
                "arguments": "RA",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${response} = Get application dynamic values filter by \"${filter}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "13 - Get RA applications successfully - with filter RA",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.14 - Get RA applications successfully - with filter tp",
              "id": "s1-s11-s1-t16",
              "keywords": [{
                "arguments": "tp",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${response} = Get application dynamic values filter by \"${filter}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "14 - Get RA applications successfully - with filter tp",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.15 - Get RA applications - negative test (invalid url)",
              "id": "s1-s11-s1-t17",
              "keywords": [{
                "arguments": "ra-610-endpoin, 8080, superuser, suser",
                "name": "${endpointProperties} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "{ ${endpointProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_DYNAMIC_VALUES_URL}${RA_APPLICATIONS_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorCode",
                  "name": "${errorCode} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.message",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, java.net.UnknownHostException: ra-610-endpoin",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "15 - Get RA applications - negative test (invalid url)",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.16 - Get RA projects depends on application successfully",
              "id": "s1-s11-s1-t18",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "APP1, 3",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_PROJECTS_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "16 - Get RA projects depends on application successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.17 - Get RA deployment plans depends on project successfully",
              "id": "s1-s11-s1-t19",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, proj1",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application Project",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_DEPLOYMENT_PLANS_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "17 - Get RA deployment plans depends on project successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.171 - Get RA builds depends on deployment plans successfully",
              "id": "s1-s11-s1-t20",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, proj1, dp1",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application Project Plan",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_DEPLOYMENT_PLANS_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "171 - Get RA builds depends on deployment plans successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.18 - Get RA environments depends on application successfully",
              "id": "s1-s11-s1-t21",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "APP1, 2",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_ENVIRONMENTS_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "18 - Get RA environments depends on application successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.19 - Get RA process depends on application and environments successfully",
              "id": "s1-s11-s1-t22",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, 4041000, UA162E2, 4086000",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application Environment",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_PROCESSES_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "19 - Get RA process depends on application and environments successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.20 - Get RA process tags depends on application, environment, process successfully",
              "id": "s1-s11-s1-t23",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, 29, UA162E2, 48, Processes&gt;P1",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application Environment Process",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_TAGS_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "20 - Get RA process tags depends on application, environment, process successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.21 - Execute Run Process Task",
              "id": "s1-s11-s1-t24",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, UA262E2, Processes&gt;P1, Latest, &lt;P1&gt;&lt;Application_Parameters&gt;&lt;rel_param&gt;YonatanArg&lt;/rel_param&gt;&lt;/Application_Parameters&gt;&lt;/P1&gt;",
                  "name": "${taskProperties} = Generate Process Task With Manifest Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties},, ${taskProperties},, \"executionContext\" : {},, \"executionId\" : \"\"}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_PROCESS_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Not Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.executionContext}, jobId",
                  "name": "${job} = Get Map Item",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${jobId}, ${job}",
                  "name": "Set Suite Variable",
                  "type": "KEYWORD"
                }],
              "name": "21 - Execute Run Process Task",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.22 - Execute Check Process State Task",
              "id": "s1-s11-s1-t25",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, UA262E2, P1, Latest",
                  "name": "${taskProperties} = Generate Process Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties},, ${taskProperties},, \"executionContext\": {, \"jobId\": \"${jobId}\", },, \"executionId\" : \"\"}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_PROCESS_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, RUNNING",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "22 - Execute Check Process State Task",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.23 - Execute STOP Process State Task",
              "id": "s1-s11-s1-t26",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "UA262, UA262E2, P1, Latest",
                  "name": "${taskProperties} = Generate Process Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties},, ${taskProperties},, \"executionContext\": {, \"jobId\": \"${jobId}\", },, \"executionId\" : \"\"}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_PROCESS_URL}, ${properties}, stop",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.taskState}, Stopping process",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "23 - Execute STOP Process State Task",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.24.1 - Execute Run Deployment Task",
              "id": "s1-s11-s1-t27",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, ${RA_6.4_DEPLOYMENT_PLAN}, ${EMPTY}, ${RA_6.4_BUILD}",
                  "name": "${taskProperties} = Generate Run Deployment Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${endpointProperties}, ${taskProperties}, ${RA_6.4_DEPLOYMENT_PLAN}_${RA_6.4_ENVIRONMENT}_\\\\d\\\\d\\\\d\\\\d, Post-Deployment Succeeded",
                  "name": "Check Run Deployment Execution",
                  "type": "KEYWORD"
                }],
              "name": "24.1 - Execute Run Deployment Task",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because run deployment task with manifest is not supported\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.24.2 - Execute Run Deployment with Manifest Task",
              "id": "s1-s11-s1-t28",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${RA_6.4_MANIFEST} = Generate Manifest Deployment with deployment step omly",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_MANIFEST}",
                  "name": "${taskProperties} = Generate Run Deployment Task with Manifet Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${endpointProperties}, ${taskProperties}, ${RA_6.4_DP_MANIFEST}_${RA_6.4_ENVIRONMENT}_\\\\d\\\\d\\\\d\\\\d, Post-Deployment Succeeded",
                  "name": "Check Run Deployment Execution",
                  "type": "KEYWORD"
                }],
              "name": "24.2 - Execute Run Deployment with Manifest Task",
              "tags": ["Dev",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.25 - Execute Run Deployment Task With Deployment Name",
              "id": "s1-s11-s1-t29",
              "keywords": [{
                "arguments": "theDeployment",
                "name": "Set Test Deployment Name",
                "type": "SETUP"
              },
                {
                  "arguments": "${testDeploymentName}",
                  "name": "Run Deployment Task With Deployment Name",
                  "type": "KEYWORD"
                }],
              "name": "25 - Execute Run Deployment Task With Deployment Name",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.26 - Negative - Execute Run Deployment Task With Deployment Name Already Exists",
              "id": "s1-s11-s1-t30",
              "keywords": [{
                "arguments": "Set Test Deployment Name, existingDeployment, AND, Run Deployment Task With Deployment Name, ${testDeploymentName}",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${testDeploymentName}, A Deployment with this name already exists",
                  "name": "Run Deployment Task With Deployment Name With Error",
                  "type": "KEYWORD"
                }],
              "name": "26 - Negative - Execute Run Deployment Task With Deployment Name Already Exists",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.27 - Negative - Execute Run Deployment Task With Very Long Deployment Name",
              "id": "s1-s11-s1-t31",
              "keywords": [{
                "arguments": "123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
                "name": "Set Test Deployment Name",
                "type": "SETUP"
              },
                {
                  "arguments": "${testDeploymentName}, value too large",
                  "name": "Run Deployment Task With Deployment Name With Error",
                  "type": "KEYWORD"
                }],
              "name": "27 - Negative - Execute Run Deployment Task With Very Long Deployment Name",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.28 - Negative - Execute Run Deployment Task With Unknown application",
              "id": "s1-s11-s1-t32",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "Unknown Application That Does Not Exists",
                  "name": "${unknownApp} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${unknownApp}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, ${RA_6.4_DEPLOYMENT_PLAN}, ${EMPTY}, ${RA_6.4_BUILD}",
                  "name": "${taskProperties} = Generate Run Deployment Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_DEPLOYMENT_URL}, ${executionBody}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed to Start, Application, ${unknownApp}, not found",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "28 - Negative - Execute Run Deployment Task With Unknown application",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.29 - Negative - Execute Run Deployment Task With Unknown environment",
              "id": "s1-s11-s1-t33",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "Unknown Environment That Does Not Exists",
                  "name": "${unknownEnv} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${unknownEnv}, ${RA_6.4_PROJECT}, ${RA_6.4_DEPLOYMENT_PLAN}, ${EMPTY}, ${RA_6.4_BUILD}",
                  "name": "${taskProperties} = Generate Run Deployment Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_DEPLOYMENT_URL}, ${executionBody}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed to Start, The following environments provided do not exist and therefore deployments were not created and run, ${unknownEnv}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "29 - Negative - Execute Run Deployment Task With Unknown environment",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.30 - Negative - Execute Run Deployment Task With Unknown project",
              "id": "s1-s11-s1-t34",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "Unknown Project That Does Not Exists",
                  "name": "${unknownProject} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${unknownProject}, ${RA_6.4_DEPLOYMENT_PLAN}, ${EMPTY}, ${RA_6.4_BUILD}",
                  "name": "${taskProperties} = Generate Run Deployment Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_DEPLOYMENT_URL}, ${executionBody}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed to Start, Project with name, ${unknownProject}, not found under the specifed application",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "30 - Negative - Execute Run Deployment Task With Unknown project",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.31 - Negative - Execute Run Deployment Task With Unknown deployment plan",
              "id": "s1-s11-s1-t35",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "Unknown Deployment Plan That Does Not Exists",
                  "name": "${unknownDP} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, ${unknownDP}, ${EMPTY}, ${RA_6.4_BUILD}",
                  "name": "${taskProperties} = Generate Run Deployment Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_RUN_DEPLOYMENT_URL}, ${executionBody}, execute",
                  "name": "${result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result}, FAILED, Failed to Start, Could not find a deployment plan, ${unknownDP}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "31 - Negative - Execute Run Deployment Task With Unknown deployment plan",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.32 - Execute Run Deployment Plan Without Deployment Name",
              "id": "s1-s11-s1-t36",
              "keywords": [{
                "arguments": "theDeploymentPlan",
                "name": "Set Test Deployment Plan Name",
                "type": "SETUP"
              },
                {
                  "arguments": "${testDeploymentPlanName}",
                  "name": "Run Deployment Plan Without Deployment Name",
                  "type": "KEYWORD"
                }],
              "name": "32 - Execute Run Deployment Plan Without Deployment Name",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.33 - Execute Run Deployment Plan With Deployment Name",
              "id": "s1-s11-s1-t37",
              "keywords": [{
                "arguments": "Set Test Deployment Name, theDeployment, AND, Set Test Deployment Plan Name, theDeploymentPlan",
                "name": "Run Keywords",
                "type": "SETUP"
              },
                {
                  "arguments": "${testDeploymentPlanName}, ${testDeploymentName}",
                  "name": "Run Deployment Plan With Deployment Name",
                  "type": "KEYWORD"
                }],
              "name": "33 - Execute Run Deployment Plan With Deployment Name",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.34 - Negative - Execute Deployment Plan Without Endpoint Properties",
              "id": "s1-s11-s1-t38",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, endpointProperties, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "34 - Negative - Execute Deployment Plan Without Endpoint Properties",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.35 - Negative - Execute Deployment Plan Without URL",
              "id": "s1-s11-s1-t39",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, superuser, suser",
                  "name": "${endpointProperties} = Generate Endpoint Properties With URL",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, url, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "35 - Negative - Execute Deployment Plan Without URL",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.36 - Negative - Execute Deployment Plan With Invalid URL",
              "id": "s1-s11-s1-t40",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${invalidURL}, invalidURL",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${invalidURL}, superuser, suser",
                  "name": "${endpointProperties} = Generate Endpoint Properties With URL",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, url, got invalid value, ${invalidURL}, Reason: URL is malformed",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "36 - Negative - Execute Deployment Plan With Invalid URL",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.37 - Negative - Execute Deployment Plan With bad authentication",
              "id": "s1-s11-s1-t41",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RA_6.4_HOST}, 8080, superuser, ********",
                  "name": "${endpointProperties} = Generate Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, Internal RA Plug-in Error, Failed to communicate with RA server, Unauthorized",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "37 - Negative - Execute Deployment Plan With bad authentication",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.38 - Negative - Execute Deployment Plan With unknown host",
              "id": "s1-s11-s1-t42",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${unknownHost}, unknownHostWhatIsThisxxxyyy",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${unknownHost}, 8080, superuser, suser",
                  "name": "${endpointProperties} = Generate Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Unknown host: ${unknownHost}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "38 - Negative - Execute Deployment Plan With unknown host",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.39 - Negative - Execute Deployment Plan Without Application",
              "id": "s1-s11-s1-t43",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, application, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "39 - Negative - Execute Deployment Plan Without Application",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.40 - Negative - Execute Deployment Plan Without Environment",
              "id": "s1-s11-s1-t44",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${EMPTY}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, environment, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "40 - Negative - Execute Deployment Plan Without Environment",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.41 - Negative - Execute Deployment Plan Without project",
              "id": "s1-s11-s1-t45",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${EMPTY}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, project, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "41 - Negative - Execute Deployment Plan Without project",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.42 - Negative - Execute Deployment Plan Without Deployment Plan Name",
              "id": "s1-s11-s1-t46",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, ${EMPTY}, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, deploymentPlan, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "42 - Negative - Execute Deployment Plan Without Deployment Plan Name",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.43 - Negative - Execute Deployment Plan Without Template category",
              "id": "s1-s11-s1-t47",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${EMPTY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, templateCategory, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "43 - Negative - Execute Deployment Plan Without Template category",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.44 - Negative - Execute Deployment Plan Without Deployment template",
              "id": "s1-s11-s1-t48",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${EMPTY}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, RA Plug-in Error, Property, deploymentTemplate, is missing",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "44 - Negative - Execute Deployment Plan Without Deployment template",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.45 - Negative - Execute Deployment Plan With unknown Application",
              "id": "s1-s11-s1-t49",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${unknownApplication}, __WhatIsThisApplication__",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${unknownApplication}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, Failed to Start, Application, ${unknownApplication}, not found",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "45 - Negative - Execute Deployment Plan With unknown Application",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.46 - Negative - Execute Deployment Plan With unknown template category",
              "id": "s1-s11-s1-t50",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${unknownTemplateCategory}, __WhatIsThisTemplateCategory__",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${unknownTemplateCategory}, ${RA_6.4_DEPLOYMENT_TEMPLATE}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, Failed to Start, No active template, ${unknownTemplateCategory}, was found",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "46 - Negative - Execute Deployment Plan With unknown template category",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This test is disabled because we postponed 'Run Deployment From Template' RA PLugin Task.\x3c/p>",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.47 - Negative - Execute Deployment Plan With unknown deployment template",
              "id": "s1-s11-s1-t51",
              "keywords": [{
                "arguments": "${executionUrl}, ${RA_RUN_DEPLOYMENT_PLAN_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${unknownDeploymentTemplate}, __WhatIsThisDeploymentTemplate__",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${endpointProperties} = Generate Valid 6.4 Endpoint Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_6.4_APPLICATION}, ${RA_6.4_ENVIRONMENT}, ${RA_6.4_PROJECT}, DeploymentPlanName, DeploymentName, 666, ${RA_6.4_TEMPLATE_CATEGORY}, ${unknownDeploymentTemplate}",
                  "name": "${taskProperties} = Generate Run Deployment Plan Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${taskProperties}, \"executionContext\": {} }",
                  "name": "${executionBody} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${executionUrl}, ${executionBody}, execute",
                  "name": "${error} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${error}, FAILED, Failed to Start, Deployment template id not found for given name, ${unknownDeploymentTemplate}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "47 - Negative - Execute Deployment Plan With unknown deployment template",
              "tags": ["DEV",
                "RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.48 - Get RA template category depends on application successfully",
              "id": "s1-s11-s1-t52",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "app1, 14",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_TEMPLATE_CATEGORY_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "48 - Get RA template category depends on application successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.49 - Get RA deployment template depends on application and template category successfully",
              "id": "s1-s11-s1-t53",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "app1, 14, myTemplateCategory, 1",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application And Template Category",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get dynamic values by input \"${dynamicValuesInput}\" and url \"${RA_DYNAMIC_VALUES_URL}${RA_DEPLOYMENT_TEMPLATE_URL}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${dynamicValuesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &gt;= 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${dynamicValuesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "49 - Get RA deployment template depends on application and template category successfully",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.50 - Get RA template category depends on none existing application",
              "id": "s1-s11-s1-t54",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "noneExistingApp, ${EMPTY}",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_DYNAMIC_VALUES_URL}${RA_TEMPLATE_CATEGORY_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorCode",
                  "name": "${errorCode} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.message",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Could not retrieve values, please check application name",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "50 - Get RA template category depends on none existing application",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.51 - Get RA deployment template depends on none existing application",
              "id": "s1-s11-s1-t55",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "noneExistingApp, ${EMPTY}, myTemplateCategory, 1",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application And Template Category",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_DYNAMIC_VALUES_URL}${RA_DEPLOYMENT_TEMPLATE_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorCode",
                  "name": "${errorCode} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.message",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Could not retrieve values, please check application name",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "51 - Get RA deployment template depends on none existing application",
              "tags": ["RA"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Ra.20 Ra Plugin.52 - Get RA deployment template depends on none existing template category",
              "id": "s1-s11-s1-t56",
              "keywords": [{
                "arguments": "",
                "name": "${endpointProperties} = Generate Valid 6.2 Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "app1, 14, noneExistingTrmplateCategory, ${EMPTY}",
                  "name": "${pluginServiceProperties} = Generate Plugin Service With Application And Template Category",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpointProperties}, ${pluginServiceProperties} }",
                  "name": "${dynamicValuesInput} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RA_DYNAMIC_VALUES_URL}${RA_DEPLOYMENT_TEMPLATE_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorCode",
                  "name": "${errorCode} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.message",
                  "name": "${errorMessage} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${errorMessage}, Could not retrieve deployment template values, please check template category name",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "52 - Get RA deployment template depends on none existing template category",
              "tags": ["RA"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Rally",
        "id": "s1-s12",
        "keywords": [],
        "metadata": [],
        "name": "Rally",
        "numberOfTests": 40,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/rally",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\rally",
        "suites": [{
          "doc": "<p>A testing suite for testing the rally plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Rally.30 Rally Plugin",
          "id": "s1-s12-s1",
          "keywords": [],
          "metadata": [["Author:Ronen,Boris",
            ""]],
          "name": "30 Rally Plugin",
          "numberOfTests": 36,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/rally/30_rally_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\rally\\30_rally_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>In the RALLY plugin there should be manifest a file\x3c/p>",
            "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.01 - Get Manifest From Rally Plugin",
            "id": "s1-s12-s1-t1",
            "keywords": [{
              "arguments": "${RALLY_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Rally Platform, 2.2, ca.cdd.rally, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Rally Plugin",
            "tags": ["RALLY"],
            "timeout": "10 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s12-s1-t2",
              "keywords": [{
                "arguments": "${RALLY_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.03 - Get Content Source",
              "id": "s1-s12-s1-t3",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "03 - Get Content Source",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.04 - Update Rally (Deprecated) Item",
              "id": "s1-s12-s1-t4",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, TA65, ${TASK}, In-Progress",
                  "name": "${task_properties} = Generate New Status Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Task TA65 updated.",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "04 - Update Rally (Deprecated) Item",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.05 - Test Rally Connectivity Successfully",
              "id": "s1-s12-s1-t5",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success, ${TRUE}",
                  "name": "Validate Boolean From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "05 - Test Rally Connectivity Successfully",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.06 - Test Rally Connectivity Wrong Api Key",
              "id": "s1-s12-s1-t6",
              "keywords": [{
                "arguments": "${GOOD_URL}, wrongApikey, ${GOOD_WORKSPACE}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success, ${FALSE}",
                  "name": "Validate Boolean From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage, HTTP/1.1 401 Full authentication is required to access this resource",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "06 - Test Rally Connectivity Wrong Api Key",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.07 - Test Rally Connectivity Wrong Url",
              "id": "s1-s12-s1-t7",
              "keywords": [{
                "arguments": "${BAD_URL}, wrongUrl",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "wrongUrl, ${GOOD_KEY}, ${GOOD_WORKSPACE}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONNECTIVITY_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.success, ${FALSE}",
                  "name": "Validate Boolean From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorMessage, url property '${BAD_URL}' is not valid. no protocol: ${BAD_URL}",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "07 - Test Rally Connectivity Wrong Url",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.08 - Get Rally projects successfully - no filter",
              "id": "s1-s12-s1-t8",
              "keywords": [{
                "arguments": "${RALLY_PROJECT_DYNAMIC_VALUES_URL}?max_results=10",
                "name": "${url} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get project dynamic values filter by \"${url}\" \"${dynamicValuesInput}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${projectNamesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projectNamesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "08 - Get Rally projects successfully - no filter",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.09 - Get Rally projects successfully - with filter te",
              "id": "s1-s12-s1-t9",
              "keywords": [{
                "arguments": "te",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RALLY_PROJECT_DYNAMIC_VALUES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get project dynamic values filter by \"${url}\" \"${dynamicValuesInput}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${projectNamesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projectNamesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "09 - Get Rally projects successfully - with filter te",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.10 - Get Rally projects successfully - with filter tp",
              "id": "s1-s12-s1-t10",
              "keywords": [{
                "arguments": "t",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RALLY_PROJECT_DYNAMIC_VALUES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get project dynamic values filter by \"${url}\" \"${dynamicValuesInput}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${projectNamesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projectNamesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "10 - Get Rally projects successfully - with filter tp",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.11 - Get Rally projects - negative test (invalid url)",
              "id": "s1-s12-s1-t11",
              "keywords": [{
                "arguments": "<a href=\"https://rally1.rallydev.co\">https://rally1.rallydev.co\x3c/a>, ${GOOD_KEY}, ${GOOD_WORKSPACE}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "{ ${ep_properties} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_PROJECT_DYNAMIC_VALUES_URL}?max_results=10, ${dynamicValuesInput}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.errorCode, UNEXPECTED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.message, peer not authenticated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "11 - Get Rally projects - negative test (invalid url)",
              "tags": ["DEV",
                "RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.12 - Get Rally release successfully - with filter fy",
              "id": "s1-s12-s1-t12",
              "keywords": [{
                "arguments": "fy16",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RALLY_RELEASES_DYNAMIC_VALUES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "40883954368, Top Project (Sample)",
                  "name": "${ps_context} = Generate Plugin Service Context Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${ps_context} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get project dynamic values filter by \"${url}\" \"${dynamicValuesInput}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${projectNamesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projectNamesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "12 - Get Rally release successfully - with filter fy",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.13 - Get Rally iterations successfully - with filter Q3",
              "id": "s1-s12-s1-t13",
              "keywords": [{
                "arguments": "Q3",
                "name": "${filter} = Set variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${RALLY_ITERATIONS_DYNAMIC_VALUES_URL}?filter=${filter}&amp;max_results=10",
                  "name": "${url} = Set variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "40883954368, Top Project (Sample)",
                  "name": "${ps_context} = Generate Plugin Service Context Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${ps_context} }",
                  "name": "${dynamicValuesInput} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${response} = Get project dynamic values filter by \"${url}\" \"${dynamicValuesInput}\"",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}",
                  "name": "${values} = Set Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${values}",
                  "name": "${projectNamesLength} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${projectNamesLength} &lt;= ${dynamicValuesLimit}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${project} IN [ @{values} ]",
                  "type": "FOR"
                }],
              "name": "13 - Get Rally iterations successfully - with filter Q3",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.14 - Check Rally Test Case Results",
              "id": "s1-s12-s1-t14",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, US72, 1, ${ACCEPTANCE}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo",
                  "name": "${state} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, TC19",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, US72",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "14 - Check Rally Test Case Results",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.15 - Check Rally Test Case Results Success With Build Number",
              "id": "s1-s12-s1-t15",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, US72, 2, ${ACCEPTANCE}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, US72",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "15 - Check Rally Test Case Results Success With Build Number",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.16 - Check Rally Test Case Results Success With Build Number And All Test Types",
              "id": "s1-s12-s1-t16",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, US72, 2, ${ALL}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, US72",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "16 - Check Rally Test Case Results Success With Build Number And All Test Types",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.17 - Check Rally Test Case Results Success Without Build Number",
              "id": "s1-s12-s1-t17",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, US72, ${EMPTY}, ${ACCEPTANCE}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, US72",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "17 - Check Rally Test Case Results Success Without Build Number",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.18 - Check Rally Test Case Results Success Without Build Number And All Test Types",
              "id": "s1-s12-s1-t18",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, US72, ${EMPTY}, ${ALL}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, US72",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "18 - Check Rally Test Case Results Success Without Build Number And All Test Types",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.19 - Negative - Get Content Source With Bad URL",
              "id": "s1-s12-s1-t19",
              "keywords": [{
                "arguments": "${BAD_URL}, whatIsThisBadUrl",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BAD_URL}, ${GOOD_KEY}, ${GOOD_WORKSPACE}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, url property '${BAD_URL}' is not valid. no protocol: ${BAD_URL}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "19 - Negative - Get Content Source With Bad URL",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.20 - Negative - Get Content Source Without endpoint properties",
              "id": "s1-s12-s1-t20",
              "keywords": [{
                "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                "name": "${cs_properties} = Generate Content Source Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "{ ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, Endpoint properties are empty",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "20 - Negative - Get Content Source Without endpoint properties",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.21 - Negative - Get Content Source Without api key",
              "id": "s1-s12-s1-t21",
              "keywords": [{
                "arguments": "${GOOD_URL}, ${EMPTY}, ${GOOD_WORKSPACE}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, apikey property is empty",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "21 - Negative - Get Content Source Without api key",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.22 - Negative - Get Content Source With unknown host name",
              "id": "s1-s12-s1-t22",
              "keywords": [{
                "arguments": "${UNKNOWN_HOST_URL}, ${GOOD_KEY}, ${GOOD_WORKSPACE}",
                "name": "${ep_properties} = Generate Endpoint Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, ${UNKNOWN_HOST}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, is unknown host",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "22 - Negative - Get Content Source With unknown host name",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.23 - Negative - Get Content Source With unknown workspace",
              "id": "s1-s12-s1-t23",
              "keywords": [{
                "arguments": "${UNKNOWN_WORKSPACE}, unknownWorkspace",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_KEY}, ${UNKNOWN_WORKSPACE}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, Workspace '${UNKNOWN_WORKSPACE}' not found",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "23 - Negative - Get Content Source With unknown workspace",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.24 - Negative - Get Content Source With unknown project",
              "id": "s1-s12-s1-t24",
              "keywords": [{
                "arguments": "${UNKNOWN_PROJECT}, unknownProject",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_KEY}, ${GOOD_WORKSPACE}",
                  "name": "${ep_properties} = Generate Endpoint Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${UNKNOWN_PROJECT}, ${EMPTY}, ${USER_STORY}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}, com.ca.rp.plugins.dto.error.PluginErrorDto",
                  "name": "${response} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorCode}, UNEXPECTED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.message}, The Project '${UNKNOWN_PROJECT}' was not found",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "24 - Negative - Get Content Source With unknown project",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.25 - Update Rally State and Schedule State Defect",
              "id": "s1-s12-s1-t25",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, DE318559, Open, In-Progress",
                  "name": "${task_properties} = Generate New State And New Schedule State Defect Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Defect updated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "25 - Update Rally State and Schedule State Defect",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.26 - Update Rally State Task",
              "id": "s1-s12-s1-t26",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, TA847265, In-Progress",
                  "name": "${task_properties} = Generate New State Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Task State updated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "26 - Update Rally State Task",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.27 - Update Rally Schedule State User Story",
              "id": "s1-s12-s1-t27",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, US405330, In-Progress",
                  "name": "${task_properties} = Generate New Schedule State User Story Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, User Story Schedule State updated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "27 - Update Rally Schedule State User Story",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.28 - Update Rally Defect - Negative Test (Missing Update Parameters)",
              "id": "s1-s12-s1-t28",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, DE318559, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate New State And New Schedule State Defect Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Missing Update Parameters",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "28 - Update Rally Defect - Negative Test (Missing Update Parameters)",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.29 - Update Rally State Capability",
              "id": "s1-s12-s1-t29",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, C10147, Developing",
                  "name": "${task_properties} = Generate New State Capability Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Capability State updated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "29 - Update Rally State Capability",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.30 - Update Rally State Feature",
              "id": "s1-s12-s1-t30",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, F56639, Shipped",
                  "name": "${task_properties} = Generate New State Feature Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, Feature State updated",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FINISHED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.progress, 100",
                  "name": "Validate Long From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "30 - Update Rally State Feature",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>This project contains exactly one feature and one capability. test validates only feature return.\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.31 - Validate Fix For DE319340 - Rally External Content - Brings Capabilities along with Features",
              "id": "s1-s12-s1-t31",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, ${EMPTY}, ${FEATURE}, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &lt; 2",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents[0].type",
                  "name": "${typeOfElement} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${typeOfElement}, FEATURE",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "31 - Validate Fix For DE319340 - Rally External Content - Brings Capabilities along with Features",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.32 - Update Rally Defect - Negative Test Wrong ItemId",
              "id": "s1-s12-s1-t32",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, DE31, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate New State And New Schedule State Defect Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, The Rally item DE31 was not found, Or it exists in a different project",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "32 - Update Rally Defect - Negative Test Wrong ItemId",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the REST plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.33 - Update Rally Defect - Negative Test Wrong New Schedule State Value",
              "id": "s1-s12-s1-t33",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, DE318559, ${EMPTY}, aaa",
                  "name": "${task_properties} = Generate New State And New Schedule State Defect Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_UPDATE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo, The new Schedule State value is incorrect",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "33 - Update Rally Defect - Negative Test Wrong New Schedule State Value",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "<p>One feature with status \"Shipped\" should exist\x3c/p>",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.34 - Validate Fix For DE318380 - Import Rally feature content source with status return nothing",
              "id": "s1-s12-s1-t34",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, ${EMPTY}, ${FEATURE}, Shipped",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "34 - Validate Fix For DE318380 - Import Rally feature content source with status return nothing",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.35 - Check Rally Test Case Results Without Build Number And Some Test Fails",
              "id": "s1-s12-s1-t35",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, US430355, ${EMPTY}, ${ALL}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo",
                  "name": "${state} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, TC94205",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, TC94208",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, TC94210",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "35 - Check Rally Test Case Results Without Build Number And Some Test Fails",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.30 Rally Plugin.36 - Check Rally Test Case Results With Build Number And Test Fails",
              "id": "s1-s12-s1-t36",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint Robot Cdd Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT_ROBOT_CDD}, US430355, 101, ${ALL}",
                  "name": "${task_properties} = Generate Test Task Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${task_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${RALLY_CHECK_TEST_CASE_TASK_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.detailedInfo",
                  "name": "${state} = Extract String from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${state}, TC94208",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.externalTaskExecutionStatus, FAILED",
                  "name": "Validate String From Json By Path Json",
                  "type": "KEYWORD"
                }],
              "name": "36 - Check Rally Test Case Results With Build Number And Test Fails",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            }]
        },
          {
            "doc": "<p>A testing suite for testing the rally plugin proxy negative cases\x3c/p>",
            "fullName": "Cdd-Plugins.Rally.31 Rally Plugin Proxy Negative",
            "id": "s1-s12-s2",
            "keywords": [],
            "metadata": [["Author: Yoni",
              ""]],
            "name": "31 Rally Plugin Proxy Negative",
            "numberOfTests": 4,
            "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/rally/31_rally_plugin_proxy_negative.robot",
            "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\rally\\31_rally_plugin_proxy_negative.robot",
            "suites": [],
            "tests": [{
              "doc": "",
              "fullName": "Cdd-Plugins.Rally.31 Rally Plugin Proxy Negative.01 - without proxy host",
              "id": "s1-s12-s2-t1",
              "keywords": [{
                "arguments": "",
                "name": "Negative Connectivity With Proxy usage \"${GOOD_URL}\" and \"${GOOD_KEY}\" and \"${GOOD_WORKSPACE}\" and \"${EMPTY}\" and \"888\"",
                "type": "KEYWORD"
              }],
              "name": "01 - without proxy host",
              "tags": ["RALLY"],
              "timeout": "10 minutes"
            },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Rally.31 Rally Plugin Proxy Negative.02 - without proxy port",
                "id": "s1-s12-s2-t2",
                "keywords": [{
                  "arguments": "",
                  "name": "Negative Connectivity With Proxy usage \"${GOOD_URL}\" and \"${GOOD_KEY}\" and \"${GOOD_WORKSPACE}\" and \"localhost\" and \"${EMPTY}\"",
                  "type": "KEYWORD"
                }],
                "name": "02 - without proxy port",
                "tags": ["RALLY"],
                "timeout": "10 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Rally.31 Rally Plugin Proxy Negative.03 - without proxy host and port",
                "id": "s1-s12-s2-t3",
                "keywords": [{
                  "arguments": "",
                  "name": "Negative Connectivity With Proxy usage \"${GOOD_URL}\" and \"${GOOD_KEY}\" and \"${GOOD_WORKSPACE}\" and \"${EMPTY}\" and \"${EMPTY}\"",
                  "type": "KEYWORD"
                }],
                "name": "03 - without proxy host and port",
                "tags": ["RALLY"],
                "timeout": "10 minutes"
              },
              {
                "doc": "",
                "fullName": "Cdd-Plugins.Rally.31 Rally Plugin Proxy Negative.04 - without port numeric value",
                "id": "s1-s12-s2-t4",
                "keywords": [{
                  "arguments": "",
                  "name": "Negative Connectivity With Proxy usage \"${GOOD_URL}\" and \"${GOOD_KEY}\" and \"${GOOD_WORKSPACE}\" and \"localhost\" and \"xxx\"",
                  "type": "KEYWORD"
                }],
                "name": "04 - without port numeric value",
                "tags": ["RALLY"],
                "timeout": "10 minutes"
              }]
          }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Rest",
        "id": "s1-s13",
        "keywords": [],
        "metadata": [],
        "name": "Rest",
        "numberOfTests": 19,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/rest",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\rest",
        "suites": [{
          "doc": "<p>A testing suite for testing the rest plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Rest.10 Rest Plugin",
          "id": "s1-s13-s1",
          "keywords": [],
          "metadata": [["Author:Ronen",
            ""]],
          "name": "10 Rest Plugin",
          "numberOfTests": 19,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/rest/10_rest_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\rest\\10_rest_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>In the REST plugin there should be a manifest file\x3c/p>",
            "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.01 - Get Manifest From Rest Plugin",
            "id": "s1-s13-s1-t1",
            "keywords": [{
              "arguments": "${REST_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, REST, 2.0, ca.cdd.rest, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Rest Plugin",
            "tags": ["REST"],
            "timeout": "1 minute"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s13-s1-t2",
              "keywords": [{
                "arguments": "${REST_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.03 - Execute Rest Task",
              "id": "s1-s13-s1-t3",
              "keywords": [{
                "arguments": "${status_text}, Test is:",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${post_script}, status='${status_text} ' + response.test; return true;",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${post_script}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FINISHED, ${status_text} ok, ${SUCCESS_MESSAGE}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "03 - Execute Rest Task",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.04 - Execute Rest Task with good user and password",
              "id": "s1-s13-s1-t4",
              "keywords": [{
                "arguments": "${status_text}, Test is:",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${post_script}, status='${status_text} ' + response.test; return true;",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${GOOD_URL}, ${GOOD_USERNAME}, ${GOOD_PASSWORD}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${post_script}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FINISHED, ${status_text} ok, ${SUCCESS_MESSAGE}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "04 - Execute Rest Task with good user and password",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.05 - Negative - Execute Rest Task without task properties",
              "id": "s1-s13-s1-t5",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Task properties must be provided to complete the task",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative - Execute Rest Task without task properties",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.06 - Negative - Execute Rest Task without method",
              "id": "s1-s13-s1-t6",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, ${EMPTY}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Empty method parameter received in task properties",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative - Execute Rest Task without method",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.07 - Negative - Execute Rest Task without url",
              "id": "s1-s13-s1-t7",
              "keywords": [{
                "arguments": "${EMPTY}, ${EMPTY}, ${EMPTY}",
                "name": "${ep_properties} = Generate Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Url parameter is not provided in either task properties or endpoint definition",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative - Execute Rest Task without url",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.08 - Negative - Execute Rest Task Bad url",
              "id": "s1-s13-s1-t8",
              "keywords": [{
                "arguments": "${BAD_URL}, whatIsThis",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${BAD_URL}, ${EMPTY}, ${EMPTY}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Malformed URL received in endpoint definition. no protocol: ${BAD_URL}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "08 - Negative - Execute Rest Task Bad url",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.09 - Execute Rest Task Unknown host URL",
              "id": "s1-s13-s1-t9",
              "keywords": [{
                "arguments": "${UNKNOWN_HOST}, unknownhost_whatisthis.org",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${UNKNOWN_HOST_URL}, <a href=\"http://${UNKNOWN_HOST}\">http://${UNKNOWN_HOST}\x3c/a>",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${UNKNOWN_HOST_URL}, ${EMPTY}, ${EMPTY}",
                  "name": "${ep_properties} = Generate Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Rest operation failed for url '${UNKNOWN_HOST_URL}'. ${UNKNOWN_HOST} is unknown host",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "09 - Execute Rest Task Unknown host URL",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.10 - Execute Rest Task with bad post script",
              "id": "s1-s13-s1-t10",
              "keywords": [{
                "arguments": "${post_script}, ThisIS my Wierd post script",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${post_script}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.taskState}, ${FAILURE_MESSAGE}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, Post Script execution failed",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${post_script}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Execute Rest Task with bad post script",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.11 - Negative - Execute Rest Task Unknown method",
              "id": "s1-s13-s1-t11",
              "keywords": [{
                "arguments": "${UNKNOWN_METHOD}, UKNOWN_METHOD",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${UNKNOWN_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Invalid HTTP method: UKNOWN_METHOD",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "11 - Negative - Execute Rest Task Unknown method",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.12 - Negative - Execute Rest Task with malformed headers",
              "id": "s1-s13-s1-t12",
              "keywords": [{
                "arguments": "${MALFORMED_HEADERS}, AAABBBCCC",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${MALFORMED_HEADERS}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, Header format should be 'key: value'. Got: ${MALFORMED_HEADERS}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "12 - Negative - Execute Rest Task with malformed headers",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.13 - Execute Rest Task with well formed headers with unknown attribute",
              "id": "s1-s13-s1-t13",
              "keywords": [{
                "arguments": "${status_text}, Test is:",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${post_script}, status='${status_text} ' + response.test; return true;",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${MALFORMED_HEADERS}, AAA: BBB",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${post_script}, ${MALFORMED_HEADERS}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FINISHED, ${status_text} ok, ${SUCCESS_MESSAGE}",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "13 - Execute Rest Task with well formed headers with unknown attribute",
              "tags": ["REST"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.14 - Execute REST Task with loclhost",
              "id": "s1-s13-s1-t14",
              "keywords": [{
                "arguments": "${LOCALHOST_URL}, ${EMPTY}, ${EMPTY}",
                "name": "${ep_properties} = Generate Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, 'localhost' is blacklisted",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "14 - Execute REST Task with loclhost",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.15 - Execute REST Task with zero address",
              "id": "s1-s13-s1-t15",
              "keywords": [{
                "arguments": "${ZERO_IP_URL}, ${EMPTY}, ${EMPTY}",
                "name": "${ep_properties} = Generate Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${EMPTY}, ${GOOD_METHOD}, ${EMPTY}, ${EMPTY}, ${EMPTY}",
                  "name": "${task_properties} = Generate Task Properties",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties}, ${task_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${REST_TASK_URL}, ${properties}, execute",
                  "name": "${response} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, FAILED, ${FAILURE_MESSAGE}, '0.0.0.0' is blacklisted",
                  "name": "Validate Task Execution Results",
                  "type": "KEYWORD"
                }],
              "name": "15 - Execute REST Task with zero address",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.16 - Execute REST Task with loclhost ip",
              "id": "s1-s13-s1-t16",
              "keywords": [{
                "arguments": "${LOCALHOST_IP}",
                "name": "Execute REST Task with blocked address in subnet",
                "type": "KEYWORD"
              }],
              "name": "16 - Execute REST Task with loclhost ip",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.17 - Execute REST Task with blocked address in subnet",
              "id": "s1-s13-s1-t17",
              "keywords": [{
                "arguments": "${BLOCKED_SUBNET_IP_A}",
                "name": "Execute REST Task with blocked address in subnet",
                "type": "KEYWORD"
              }],
              "name": "17 - Execute REST Task with blocked address in subnet",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.18 - Execute REST Task with blocked address in special subnet A",
              "id": "s1-s13-s1-t18",
              "keywords": [{
                "arguments": "${BLOCKED_SUBNET_IP_B}",
                "name": "Execute REST Task with blocked address in subnet",
                "type": "KEYWORD"
              }],
              "name": "18 - Execute REST Task with blocked address in special subnet A",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Rest.10 Rest Plugin.19 - Execute REST Task with blocked address in special subnet B",
              "id": "s1-s13-s1-t19",
              "keywords": [{
                "arguments": "${BLOCKED_SUBNET_IP_C}",
                "name": "Execute REST Task with blocked address in subnet",
                "type": "KEYWORD"
              }],
              "name": "19 - Execute REST Task with blocked address in special subnet B",
              "tags": ["REST",
                "saasonly"],
              "timeout": "1 minute"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.sauceLabs",
        "id": "s1-s14",
        "keywords": [],
        "metadata": [],
        "name": "sauceLabs",
        "numberOfTests": 18,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/sauceLabs",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\sauceLabs",
        "suites": [{
          "doc": "<p>A testing suite for testing the SAUCE_LABS plugin\x3c/p>",
          "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs",
          "id": "s1-s14-s1",
          "keywords": [],
          "metadata": [],
          "name": "100 Sauce Labs",
          "numberOfTests": 18,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/sauceLabs/100_sauce_labs.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\sauceLabs\\100_sauce_labs.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.01 - Get Manifest From SauceLabs Plugin",
            "id": "s1-s14-s1-t1",
            "keywords": [{
              "arguments": "${SAUCE_LABS_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, SauceLabs, 1.0, CA Technologies SauceLabs, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From SauceLabs Plugin",
            "tags": ["saasonly",
              "SAUCE_LABS"],
            "timeout": "10 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s14-s1-t2",
              "keywords": [{
                "arguments": "${SAUCE_LABS_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.03 - Connectivity Test",
              "id": "s1-s14-s1-t3",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}",
                "name": "${response} = SauceLabs Connectivity Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.09 - Run Protractor Test",
              "id": "s1-s14-s1-t4",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "09 - Run Protractor Test",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.10 - Negative Run Protractor Test With Wrong Branch",
              "id": "s1-s14-s1-t5",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, WRONG_BRANCH, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative Run Protractor Test With Wrong Branch",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.11 - Negative Run Protractor Test With Wrong Test",
              "id": "s1-s14-s1-t6",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, WRONG_SPECS_MASK, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, failedCount",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, 0",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "11 - Negative Run Protractor Test With Wrong Test",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.12 - Negative Run Protractor Test With Wrong Tests Folder",
              "id": "s1-s14-s1-t7",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, WRONG_TESTS_FOLDER, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, failedCount",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, 0",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "12 - Negative Run Protractor Test With Wrong Tests Folder",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.13 - Negative Run Protractor Test With Wrong Project Path",
              "id": "s1-s14-s1-t8",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, WONG_PROJECT_PATH, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "13 - Negative Run Protractor Test With Wrong Project Path",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.17 - Negative Run Protractor Test With Wrong Sauce Labs User Key",
              "id": "s1-s14-s1-t9",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, WONRG_SAUCE_LABS_USERKEY, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "17 - Negative Run Protractor Test With Wrong Sauce Labs User Key",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.18 - Negative Run Protractor Test With Wrong Sauce Labs User",
              "id": "s1-s14-s1-t10",
              "keywords": [{
                "arguments": "WONG_SAUCE_LABS_USER, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "18 - Negative Run Protractor Test With Wrong Sauce Labs User",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.19 - Negative Run Protractor Test With Failing Test",
              "id": "s1-s14-s1-t11",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${FAILED_SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "19 - Negative Run Protractor Test With Failing Test",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.20 - Negative Run Protractor Test With Wrong Test Capabilities",
              "id": "s1-s14-s1-t12",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, {}",
                "name": "${response} = Run Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "20 - Negative Run Protractor Test With Wrong Test Capabilities",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.21 - Stop Protractor Test",
              "id": "s1-s14-s1-t13",
              "keywords": [{
                "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${SPECS_MASK}, ${BRANCH}, ${TEST_CAPABILITIES}",
                "name": "${response} = Run And Stop Test Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "21 - Stop Protractor Test",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.22 - Import Tests - suites",
              "id": "s1-s14-s1-t14",
              "keywords": [{
                "arguments": "${url}, ${SAUCE_LABS_TEST_SOURCE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${BRANCH}, ${TEST_CAPABILITIES}, ${CONFIG_SUITES_PATH}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, full, smoke",
                  "name": "Validate Imported Test Suites Name",
                  "type": "KEYWORD"
                }],
              "name": "22 - Import Tests - suites",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.23 - Import Tests - specs",
              "id": "s1-s14-s1-t15",
              "keywords": [{
                "arguments": "${url}, ${SAUCE_LABS_TEST_SOURCE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${BRANCH}, ${TEST_CAPABILITIES}, ${CONFIG_SPECS_PATH}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.testSuites}, spec.ts",
                  "name": "Validate Imported Test Suites Name",
                  "type": "KEYWORD"
                }],
              "name": "23 - Import Tests - specs",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.24 - Negative Import Tests - wrong test foler",
              "id": "s1-s14-s1-t16",
              "keywords": [{
                "arguments": "${url}, ${SAUCE_LABS_TEST_SOURCE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, wrong-test-folder, ${BRANCH}, ${TEST_CAPABILITIES}, ${CONFIG_SPECS_PATH}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, UNEXPECTED, wrong-test-folder",
                  "name": "Verify Generic Plugin Error Regex Message",
                  "type": "KEYWORD"
                }],
              "name": "24 - Negative Import Tests - wrong test foler",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.25 - Negative Import Tests - wrong conf filename",
              "id": "s1-s14-s1-t17",
              "keywords": [{
                "arguments": "${url}, ${SAUCE_LABS_TEST_SOURCE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, ${BRANCH}, ${TEST_CAPABILITIES}, wrong-config-path.ts",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, UNEXPECTED, wrong-config-path.ts",
                  "name": "Verify Generic Plugin Error Regex Message",
                  "type": "KEYWORD"
                }],
              "name": "25 - Negative Import Tests - wrong conf filename",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.sauceLabs.100 Sauce Labs.26 - Negative Import Tests - wrong branch",
              "id": "s1-s14-s1-t18",
              "keywords": [{
                "arguments": "${url}, ${SAUCE_LABS_TEST_SOURCE_URL}",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SAUCE_LABS_USER}, ${SAUCE_LABS_USERKEY}, ${SAUCE_SELENIUM_ADDRESS}, ${GIT_USER_NAME}, ${GIT_USER_PASSWORD}, ${PROJECT_PATH}, ${TESTS_FOLDER}, wrong-branch, ${TEST_CAPABILITIES}, ${CONFIG_SPECS_PATH}",
                  "name": "${importJson} = Generate Import Tests JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${url}, ${importJson}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Import Tests Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, UNEXPECTED, wrong-branch",
                  "name": "Verify Generic Plugin Error Regex Message",
                  "type": "KEYWORD"
                }],
              "name": "26 - Negative Import Tests - wrong branch",
              "tags": ["saasonly",
                "SAUCE_LABS"],
              "timeout": "10 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.serviceNow",
        "id": "s1-s15",
        "keywords": [],
        "metadata": [],
        "name": "serviceNow",
        "numberOfTests": 23,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/serviceNow",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\serviceNow",
        "suites": [{
          "doc": "<p>A testing suite for testing the SERVICE_NOW plugin\x3c/p>",
          "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin",
          "id": "s1-s15-s1",
          "keywords": [{
            "arguments": "",
            "name": "Custom suite setup",
            "type": "SETUP"
          }],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "50 Service Now Plugin",
          "numberOfTests": 23,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/serviceNow/50_service_now_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\serviceNow\\50_service_now_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>In the ServiceNow plugin there should be manifest a file\x3c/p>",
            "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.01 - Get Manifest From ServiceNow Plugin",
            "id": "s1-s15-s1-t1",
            "keywords": [{
              "arguments": "${SERVICE_NOW_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, ServiceNow, 1.1, CA Technologies ServiceNow, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From ServiceNow Plugin",
            "tags": ["SERVICE_NOW"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s15-s1-t2",
              "keywords": [{
                "arguments": "${SERVICE_NOW_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.03 - Service Now Update Task With A Non Existing Task Number - Negative",
              "id": "s1-s15-s1-t3",
              "keywords": [{
                "arguments": "non_existing, {\\\\\"description\\\\\":\\\\\"updated by robot 03\\\\\"}, FAILED",
                "name": "Service Now Update Task",
                "type": "KEYWORD"
              }],
              "name": "03 - Service Now Update Task With A Non Existing Task Number - Negative",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.04 - Service Now Update A Non Existing Request - Negative",
              "id": "s1-s15-s1-t4",
              "keywords": [{
                "arguments": "non_existing, {\\\\\"description\\\\\":\\\\\"updated by robot 04\\\\\"}, FAILED",
                "name": "Service Now Update Request",
                "type": "KEYWORD"
              }],
              "name": "04 - Service Now Update A Non Existing Request - Negative",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.05 - Service Now Create Task With A Non Existing Request - Negative",
              "id": "s1-s15-s1-t5",
              "keywords": [{
                "arguments": "non_existing, {\\\\\"description\\\\\":\\\\\"created by robot 05\\\\\"}, FAILED",
                "name": "Service Now Create Task",
                "type": "KEYWORD"
              }],
              "name": "05 - Service Now Create Task With A Non Existing Request - Negative",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.06 - Service Now Create Request",
              "id": "s1-s15-s1-t6",
              "keywords": [{
                "arguments": "a new change request, created by robot 06, {\\\\\"description\\\\\":\\\\\"created by robot 06\\\\\"}, FINISHED",
                "name": "Service Now Create Request",
                "type": "KEYWORD"
              }],
              "name": "06 - Service Now Create Request",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.07 - Service Now Create Task",
              "id": "s1-s15-s1-t7",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"description\\\\\":\\\\\"created by robot 07\\\\\"}, FINISHED",
                "name": "Service Now Create Task",
                "type": "KEYWORD"
              }],
              "name": "07 - Service Now Create Task",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.08 - Service Now Update Task",
              "id": "s1-s15-s1-t8",
              "keywords": [{
                "arguments": "${task_id}, {\\\\\"description\\\\\":\\\\\"updated by robot 08\\\\\"}, FINISHED",
                "name": "Service Now Update Task",
                "type": "KEYWORD"
              }],
              "name": "08 - Service Now Update Task",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.09 - Service Now Wait For Approval",
              "id": "s1-s15-s1-t9",
              "keywords": [{
                "arguments": "${requestId}, state, 3, 10, RUNNING",
                "name": "Service Now Wait For Approval",
                "type": "KEYWORD"
              }],
              "name": "09 - Service Now Wait For Approval",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.10 - Service Now Update Request",
              "id": "s1-s15-s1-t10",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"description\\\\\":\\\\\"updated by robot 10\\\\\"}, FINISHED",
                "name": "Service Now Update Request",
                "type": "KEYWORD"
              }],
              "name": "10 - Service Now Update Request",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.11 - Service Now Wait For Approval And Validate It Is Finished",
              "id": "s1-s15-s1-t11",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"state\\\\\":\\\\\"3\\\\\"}, FINISHED",
                "name": "Service Now Update Request",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${requestId}, state, 3, 10, FINISHED",
                  "name": "Service Now Wait For Approval",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "Service Now Update Request, ${requestId}, {\\\\\"state\\\\\":\\\\\"1\\\\\"}, FINISHED",
                  "name": "Run Keyword",
                  "type": "TEARDOWN"
                }],
              "name": "11 - Service Now Wait For Approval And Validate It Is Finished",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.12 - Service Now Update Request State To Pending",
              "id": "s1-s15-s1-t12",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"state\\\\\":\\\\\"Pending\\\\\"}, FINISHED",
                "name": "Service Now Update Request",
                "type": "KEYWORD"
              }],
              "name": "12 - Service Now Update Request State To Pending",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.13 - Service Now Stop Waiting For Approval",
              "id": "s1-s15-s1-t13",
              "keywords": [{
                "arguments": "${requestId}, state, 3, 10, RUNNING",
                "name": "Service Now Wait For Approval",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${requestId}, state, 3, 10, FINISHED, stop",
                  "name": "Service Now Wait For Approval",
                  "type": "KEYWORD"
                }],
              "name": "13 - Service Now Stop Waiting For Approval",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.14 - Service Now Stop Create Request",
              "id": "s1-s15-s1-t14",
              "keywords": [{
                "arguments": "a new change request, created by robot 06, {\\\\\"description\\\\\":\\\\\"created by robot 14\\\\\"}, FINISHED, stop",
                "name": "Service Now Create Request",
                "type": "KEYWORD"
              }],
              "name": "14 - Service Now Stop Create Request",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.15 - Service Now Stop Create Task",
              "id": "s1-s15-s1-t15",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"description\\\\\":\\\\\"created by robot 15\\\\\"}, FINISHED, stop",
                "name": "Service Now Create Task",
                "type": "KEYWORD"
              }],
              "name": "15 - Service Now Stop Create Task",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.16 - Service Now Stop Update Task",
              "id": "s1-s15-s1-t16",
              "keywords": [{
                "arguments": "${task_id}, {\\\\\"description\\\\\":\\\\\"updated by robot 16\\\\\"}, FINISHED, stop",
                "name": "Service Now Update Task",
                "type": "KEYWORD"
              }],
              "name": "16 - Service Now Stop Update Task",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.17 - Service Now Stop Update Request",
              "id": "s1-s15-s1-t17",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"description\\\\\":\\\\\"updated by robot 17\\\\\"}, FINISHED, stop",
                "name": "Service Now Update Request",
                "type": "KEYWORD"
              }],
              "name": "17 - Service Now Stop Update Request",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This tests using the output parameter of create change request\x3c/p>",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.18 - Service Now Create And Update Request",
              "id": "s1-s15-s1-t18",
              "keywords": [{
                "arguments": "a new change request, created by robot 18, {\\\\\"description\\\\\":\\\\\"created by robot 18\\\\\"}, FINISHED",
                "name": "${newRequestId} = Service Now Create Request",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${newRequestId}, {\\\\\"description\\\\\":\\\\\"updated by robot 18\\\\\"}, FINISHED",
                  "name": "Service Now Update Request",
                  "type": "KEYWORD"
                }],
              "name": "18 - Service Now Create And Update Request",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>This tests using the output parameter of create change task\x3c/p>",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.19 - Service Now Create And Update Task",
              "id": "s1-s15-s1-t19",
              "keywords": [{
                "arguments": "${requestId}, {\\\\\"description\\\\\":\\\\\"created by robot 19\\\\\"}, FINISHED",
                "name": "${newTaskId} = Service Now Create Task",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${newTaskId}, {\\\\\"description\\\\\":\\\\\"updated by robot 19\\\\\"}, FINISHED",
                  "name": "Service Now Update Task",
                  "type": "KEYWORD"
                }],
              "name": "19 - Service Now Create And Update Task",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.100 - test missing proxy url parameter",
              "id": "s1-s15-s1-t20",
              "keywords": [{
                "arguments": "\"endPointProperties\" :, {\"url\" : \"${url}\",, \"username\" : \"${username}\",, \"password\" : \"${password}\",, \"useProxy\" : \"true\" }",
                "name": "${endPoint} = Catenate",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SERVICE_NOW_CONNECTIVITY_URL}, {${endPoint}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, Proxy url property is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "100 - test missing proxy url parameter",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.110 - test missing proxy url parameter but existing proxy username and password",
              "id": "s1-s15-s1-t21",
              "keywords": [{
                "arguments": "${url}, ${username}, ${password}, ${EMPTY}, ${proxyUsername}, ${proxyPassword}",
                "name": "${endPoint} = Service Now Create Endpoint With Authenticated Proxy",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SERVICE_NOW_CONNECTIVITY_URL}, {${endPoint}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, Proxy url property is missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "110 - test missing proxy url parameter but existing proxy username and password",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.111 - test missing proxy username parameter",
              "id": "s1-s15-s1-t22",
              "keywords": [{
                "arguments": "${url}, ${username}, ${password}, ${proxyUrl}, ${EMPTY}, ${proxyPassword}",
                "name": "${endPoint} = Service Now Create Endpoint With Authenticated Proxy",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SERVICE_NOW_CONNECTIVITY_URL}, {${endPoint}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, username and password must both exist or be missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "111 - test missing proxy username parameter",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.serviceNow.50 Service Now Plugin.112 - test missing proxy password parameter",
              "id": "s1-s15-s1-t23",
              "keywords": [{
                "arguments": "${url}, ${username}, ${password}, ${proxyUrl}, ${proxyUsername}, ${EMPTY}",
                "name": "${endPoint} = Service Now Create Endpoint With Authenticated Proxy",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SERVICE_NOW_CONNECTIVITY_URL}, {${endPoint}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.errorMessage}, username and password must both exist or be missing",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "112 - test missing proxy password parameter",
              "tags": ["SERVICE_NOW"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Slack",
        "id": "s1-s16",
        "keywords": [],
        "metadata": [],
        "name": "Slack",
        "numberOfTests": 10,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/slack",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\slack",
        "suites": [{
          "doc": "",
          "fullName": "Cdd-Plugins.Slack.01 Slack Plugin",
          "id": "s1-s16-s1",
          "keywords": [],
          "metadata": [],
          "name": "01 Slack Plugin",
          "numberOfTests": 10,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/slack/01_slack_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\slack\\01_slack_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>retrieves the manifest\x3c/p>",
            "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.01 - get manifest",
            "id": "s1-s16-s1-t1",
            "keywords": [{
              "arguments": "${SLACK_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = get manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Slack, 1.0, ca.cdd.slack, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - get manifest",
            "tags": [],
            "timeout": ""
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s16-s1-t2",
              "keywords": [{
                "arguments": "${SLACK_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.03 - test connection to valid url",
              "id": "s1-s16-s1-t3",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SLACK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - test connection to valid url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.04 - test connection to invalid url",
              "id": "s1-s16-s1-t4",
              "keywords": [{
                "arguments": "${invalid_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${SLACK_CONNECTIVITY_URL}, {${endpoint_props}}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                  "name": "${conectivity_result} = Execute Post Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${conectivity_result.success}, False",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "04 - test connection to invalid url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.05 - post messge simple message",
              "id": "s1-s16-s1-t5",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "test vaild webhook default channel",
                  "name": "${task_props} = generate post messge default channel",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FINISHED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "05 - post messge simple message",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.06 - override defual channel wiht random channel",
              "id": "s1-s16-s1-t6",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "post to random channel, CDDDirector, \\#random",
                  "name": "${task_props} = generate post messge json override chanel and username",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FINISHED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "06 - override defual channel wiht random channel",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.07 - post messge to invalid channel",
              "id": "s1-s16-s1-t7",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "post to random channel, CDDDirector, \\#invalid",
                  "name": "${task_props} = generate post messge json override chanel and username",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 404 channel_not_found",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "07 - post messge to invalid channel",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.08 - post messge direct message",
              "id": "s1-s16-s1-t8",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "post to random channel, CDDDirector, @cddtest01",
                  "name": "${task_props} = generate post messge json override chanel and username",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FINISHED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "08 - post messge direct message",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.09 - post message to invalid url",
              "id": "s1-s16-s1-t9",
              "keywords": [{
                "arguments": "${invalid_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "post to random channel, CDDDirector, @cddtest01",
                  "name": "${task_props} = generate post messge json override chanel and username",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 302",
                  "name": "Should Be Equal AS Integers",
                  "type": "KEYWORD"
                }],
              "name": "09 - post message to invalid url",
              "tags": [],
              "timeout": ""
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Slack.01 Slack Plugin.10 - post message to invalid user",
              "id": "s1-s16-s1-t10",
              "keywords": [{
                "arguments": "${incoming_webhook_url}",
                "name": "${endpoint_props} = Generate Endpoint Properties",
                "type": "KEYWORD"
              },
                {
                  "arguments": "post to random channel, CDDDirector, @cddtestaaa01",
                  "name": "${task_props} = generate post messge json override chanel and username",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${endpoint_props}, ${task_props}}",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${SLACK_POST_MESSAGE_URL}, ${properties}, execute",
                  "name": "${task_result} = Execute Task",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.externalTaskExecutionStatus}, FAILED",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${task_result.detailedInfo}, 404 channel_not_found",
                  "name": "Should Be Equal AS Strings",
                  "type": "KEYWORD"
                }],
              "name": "10 - post message to invalid user",
              "tags": [],
              "timeout": ""
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Tfs",
        "id": "s1-s17",
        "keywords": [],
        "metadata": [],
        "name": "Tfs",
        "numberOfTests": 17,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/tfs",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\tfs",
        "suites": [{
          "doc": "<p>A testing suite for testing the TFS plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin",
          "id": "s1-s17-s1",
          "keywords": [],
          "metadata": [["Author: Yoni Fradis",
            ""]],
          "name": "10 Tfs Plugin",
          "numberOfTests": 17,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/tfs/10_tfs_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\tfs\\10_tfs_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "<p>In the TFS plugin there should be a manifest file\x3c/p>",
            "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.01 - Get Manifest From TFS Plugin",
            "id": "s1-s17-s1-t1",
            "keywords": [{
              "arguments": "${TFS_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, TFS, 1.0, CA Technologies TFS, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From TFS Plugin",
            "tags": ["TFS"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s17-s1-t2",
              "keywords": [{
                "arguments": "${TFS_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the TFS plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.03 - Get Content Source With NTLM Autentication",
              "id": "s1-s17-s1-t3",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint NTLM Authentication Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, CDD, CDD, User Story, New, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TFS_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "03 - Get Content Source With NTLM Autentication",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the TFS plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.04 - Get Content Source With PAT Autentication",
              "id": "s1-s17-s1-t4",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint PAT Authentication Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${GOOD_PROJECT}, CDD, CDD, Bug, New, ${EMPTY}",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TFS_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "04 - Get Content Source With PAT Autentication",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.05 - Get Dynamic Values Of Team Projects",
              "id": "s1-s17-s1-t5",
              "keywords": [{
                "arguments": "",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Only Endpoint",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_TEAM_PROJECTS_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, CDD, Gil, TFS Demo, WC, test1",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "05 - Get Dynamic Values Of Team Projects",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.06 - Get Dynamic Values Of Team Projects With Filter",
              "id": "s1-s17-s1-t6",
              "keywords": [{
                "arguments": "",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Only Endpoint",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_TEAM_PROJECTS_URL}?filter=c, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, CDD, WC",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "06 - Get Dynamic Values Of Team Projects With Filter",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.07 - Get Dynamic Values Of Area Name",
              "id": "s1-s17-s1-t7",
              "keywords": [{
                "arguments": "TFS Demo, ${EMPTY}",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_AREA_NAME_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, TFS Demo, TFS Demo\\\\Kfar Yona, TFS Demo\\\\Ramat Gan, TFS Demo\\\\TLV",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "07 - Get Dynamic Values Of Area Name",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.08 - Get Dynamic Values Of Area Name With Filter",
              "id": "s1-s17-s1-t8",
              "keywords": [{
                "arguments": "TFS Demo, ${EMPTY}",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_AREA_NAME_URL}?filter=a, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, TFS Demo\\\\Kfar Yona, TFS Demo\\\\Ramat Gan",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "08 - Get Dynamic Values Of Area Name With Filter",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.09 - Get Dynamic Values Of Iterations",
              "id": "s1-s17-s1-t9",
              "keywords": [{
                "arguments": "TFS Demo, ${EMPTY}",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_ITERATIONS_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, TFS Demo, TFS Demo\\\\Iteration 1, TFS Demo\\\\Iteration 2, TFS Demo\\\\Iteration 3",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "09 - Get Dynamic Values Of Iterations",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.10 - Get Dynamic Values Of Iterations With Filter",
              "id": "s1-s17-s1-t10",
              "keywords": [{
                "arguments": "TFS Demo, ${EMPTY}",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_ITERATIONS_URL}?filter=2, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, TFS Demo\\\\Iteration 2",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "10 - Get Dynamic Values Of Iterations With Filter",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.11 - Get Dynamic Values Of States For A Bug",
              "id": "s1-s17-s1-t11",
              "keywords": [{
                "arguments": "TFS Demo, Bug",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_STATES_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Active, Closed, New, Resolved",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "11 - Get Dynamic Values Of States For A Bug",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.12 - Get Dynamic Values Of States For A Feature",
              "id": "s1-s17-s1-t12",
              "keywords": [{
                "arguments": "TFS Demo, Feature",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_STATES_URL}, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Active, Closed, New, Removed, Resolved",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "12 - Get Dynamic Values Of States For A Feature",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.13 - Get Dynamic Values Of States With Filter",
              "id": "s1-s17-s1-t13",
              "keywords": [{
                "arguments": "TFS Demo, Bug",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_STATES_URL}?filter=c, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Active, Closed",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "13 - Get Dynamic Values Of States With Filter",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.14 - Get Dynamic Values Of Work Item Types With Filter",
              "id": "s1-s17-s1-t14",
              "keywords": [{
                "arguments": "TFS Demo, ${EMPTY}",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_WORK_ITEM_TYPES_URL}?filter=b, ${dynamicValuesInput}",
                  "name": "${response} = Execute Dynamic Values POST Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.values}, Bug, Feedback Request, Feedback Response",
                  "name": "Validate Dynamic Values",
                  "type": "KEYWORD"
                }],
              "name": "14 - Get Dynamic Values Of Work Item Types With Filter",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the TFS plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.15 - Get Content Source With NTLM Autentication And Tags",
              "id": "s1-s17-s1-t15",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint NTLM Authentication Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "TFS Demo, ${EMPTY}, ${EMPTY}, Issue, ${EMPTY}, susu",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TFS_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "15 - Get Content Source With NTLM Autentication And Tags",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "<p>Executing a rest call via the TFS plugin and validating the status of the response\x3c/p>",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.16 - Get Content Source With NTLM Autentication And Mulitple Tags",
              "id": "s1-s17-s1-t16",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Endpoint NTLM Authentication Properties Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "TFS Demo, ${EMPTY}, ${EMPTY}, Issue, ${EMPTY}, susu,kuku,fufu",
                  "name": "${cs_properties} = Generate Content Source Properties Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "{ ${ep_properties}, ${cs_properties} }",
                  "name": "${properties} = Catenate",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TFS_CONTENT_SOURCE_CONTENTS_URL}, ${properties}",
                  "name": "${response} = Execute Post Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, $.contents.length()",
                  "name": "${numOfContents} = Extract Long from Json By Path Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${numOfContents} &gt; 0",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log To Console",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "There are ${numOfContents} amount of contents",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "16 - Get Content Source With NTLM Autentication And Mulitple Tags",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Tfs.10 Tfs Plugin.17 - Get Dynamic Values Of States For A Work Item Type That Does Not Have States Configured",
              "id": "s1-s17-s1-t17",
              "keywords": [{
                "arguments": "TFS Demo, NoneExistingItemType",
                "name": "${dynamicValuesInput} = Generate Dynamic Values Json With Team Project",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${TFS_GET_STATES_URL}, ${dynamicValuesInput}, ${BAD_REQUEST_CODE}",
                  "name": "${response} = Execute Dynamic Values Operation",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}, No state configured for this work item type",
                  "name": "Verify Plugin Error",
                  "type": "KEYWORD"
                }],
              "name": "17 - Get Dynamic Values Of States For A Work Item Type That Does Not Have States Configured",
              "tags": ["TFS"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Twistlock",
        "id": "s1-s18",
        "keywords": [],
        "metadata": [],
        "name": "Twistlock",
        "numberOfTests": 12,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/twistlock",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\twistlock",
        "suites": [{
          "doc": "<p>A testing suite for testing the Twistlock plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin",
          "id": "s1-s18-s1",
          "keywords": [],
          "metadata": [["Author: Liron Tepper",
            ""]],
          "name": "03 Twistlock Plugin",
          "numberOfTests": 12,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/twistlock/03_twistlock_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\twistlock\\03_twistlock_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.01 - Get Manifest From Twistlock Plugin",
            "id": "s1-s18-s1-t1",
            "keywords": [{
              "arguments": "${TWISTLOCK_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Twistlock, 1.0.2, CA Technologies Twistlock, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Twistlock Plugin",
            "tags": ["premonly",
              "TWISTLOCK"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s18-s1-t2",
              "keywords": [{
                "arguments": "${TWISTLOCK_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.03 - Connectivity Test",
              "id": "s1-s18-s1-t3",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}",
                "name": "${response} = Twistlock Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.04 - Negative Connectivity Test Wrong Address",
              "id": "s1-s18-s1-t4",
              "keywords": [{
                "arguments": "WRING_ADDRESS, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}",
                "name": "${response} = Twistlock Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Target host is not specified",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Wrong Address",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.05 - Negative Connectivity Test Wrong Username",
              "id": "s1-s18-s1-t5",
              "keywords": [{
                "arguments": "${ADDRESS}, WRONG_TWISTLOCK_USERNAME, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}",
                "name": "${response} = Twistlock Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${UNAUTHORIZED}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Wrong Username",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.06 - Negative Connectivity Test Wrong Password",
              "id": "s1-s18-s1-t6",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, WRONG_TWISTLOCK_PASSWORD, ${REGISTRY}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}",
                "name": "${response} = Twistlock Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${UNAUTHORIZED}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong Password",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.07 - Negative Connectivity Test Non Existing Registry",
              "id": "s1-s18-s1-t7",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, WRONG_REGISTRY, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}",
                "name": "${response} = Twistlock Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Non Existing Registry",
              "tags": ["Dev",
                "premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.08 - Run Static Scan On CDD 6.4",
              "id": "s1-s18-s1-t8",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${REPO}, ${TAG}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}, ${LOW}, ${MIN_CVSS}, ${DEFAULT_TIMEOUT}",
                "name": "${properties} = Generate Task Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TWISTLOCK_RUN_STATIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${SEVERITY_LOW}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "08 - Run Static Scan On CDD 6.4",
              "tags": ["nightly",
                "premonly",
                "TWISTLOCK"],
              "timeout": "1 hour 5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.09 - Run Static Scan On Plugins With Max Threshold",
              "id": "s1-s18-s1-t9",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${PLUGINS_REPO}, ${TAG}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}, ${CRITICAL}, ${MAX_CVSS}, ${DEFAULT_TIMEOUT}",
                "name": "${properties} = Generate Task Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TWISTLOCK_RUN_STATIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${NO_VULNERABILITY_WAS_FOUND}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09 - Run Static Scan On Plugins With Max Threshold",
              "tags": ["nightly",
                "premonly",
                "TWISTLOCK"],
              "timeout": "1 hour 5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.10 - Run Static Scan On Plugins With Low Threshold",
              "id": "s1-s18-s1-t10",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${PLUGINS_REPO}, ${TAG}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}, ${LOW}, ${MIN_CVSS}, ${DEFAULT_TIMEOUT}",
                "name": "${properties} = Generate Task Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TWISTLOCK_RUN_STATIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${SEVERITY_HIGH}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Run Static Scan On Plugins With Low Threshold",
              "tags": ["nightly",
                "premonly",
                "TWISTLOCK"],
              "timeout": "1 hour 5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.11 - Negative Run Static Scan With Wrong Repository",
              "id": "s1-s18-s1-t11",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, WRONG_REPO, ${TAG}, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}, ${CRITICAL}, ${MAX_CVSS}, ${ONE_MINUTE_TIMEOUT}",
                "name": "${properties} = Generate Task Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TWISTLOCK_RUN_STATIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${FAILED_TO_QUERY_IMAGE_DETAILS}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "11 - Negative Run Static Scan With Wrong Repository",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Twistlock.03 Twistlock Plugin.12 - Negative Run Static Scan With Wrong Tag",
              "id": "s1-s18-s1-t12",
              "keywords": [{
                "arguments": "${ADDRESS}, ${TWISTLOCK_USERNAME}, ${TWISTLOCK_PASSWORD}, ${REGISTRY}, ${PLUGINS_REPO}, WRONG_TAG, ${REGISTRY_USERNAME}, ${REGISTRY_PASSWORD}, ${CRITICAL}, ${MAX_CVSS}, ${ONE_MINUTE_TIMEOUT}",
                "name": "${properties} = Generate Task Json",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${TWISTLOCK_RUN_STATIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.detailedInfo}, ${FAILED_TO_QUERY_IMAGE_DETAILS}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "12 - Negative Run Static Scan With Wrong Tag",
              "tags": ["premonly",
                "TWISTLOCK"],
              "timeout": "5 minutes"
            }]
        }],
        "tests": []
      },
      {
        "doc": "",
        "fullName": "Cdd-Plugins.Veracode",
        "id": "s1-s19",
        "keywords": [],
        "metadata": [],
        "name": "Veracode",
        "numberOfTests": 20,
        "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/veracode",
        "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\veracode",
        "suites": [{
          "doc": "<p>A testing suite for testing the AWS_CODE_DEPLOY plugin\x3c/p>",
          "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin",
          "id": "s1-s19-s1",
          "keywords": [],
          "metadata": [["Author: Ahaz Israeli",
            ""]],
          "name": "02 Veracode Plugin",
          "numberOfTests": 20,
          "relativeSource": "file:///C:/code/rp-plugins/integrationTests/src/main/cdd-plugins/veracode/02_veracode_plugin.robot",
          "source": "C:\\code\\rp-plugins\\integrationTests\\src\\main\\cdd-plugins\\veracode\\02_veracode_plugin.robot",
          "suites": [],
          "tests": [{
            "doc": "",
            "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.01 - Get Manifest From Veracode Plugin",
            "id": "s1-s19-s1-t1",
            "keywords": [{
              "arguments": "${VERACODE_PLUGIN_URL}/manifest.json",
              "name": "${manifest} = Get Manifest",
              "type": "KEYWORD"
            },
              {
                "arguments": "${manifest}, Veracode, 1.0.1, CA Technologies Veracode, CA Technologies",
                "name": "Validate Manifest by name version uniqueId and vendor",
                "type": "KEYWORD"
              },
              {
                "arguments": "${manifest}",
                "name": "Log",
                "type": "KEYWORD"
              }],
            "name": "01 - Get Manifest From Veracode Plugin",
            "tags": ["VERACODE"],
            "timeout": "5 minutes"
          },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "id": "s1-s19-s1-t2",
              "keywords": [{
                "arguments": "${VERACODE_PLUGIN_URL}/manifest.json",
                "name": "${manifest} = Get Manifest",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${manifest}",
                  "name": "${response} = Validate Manifest Fields",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response}",
                  "name": "Log",
                  "type": "KEYWORD"
                }],
              "name": "02 - Get Manifest For Plugin And Validate The Manifest Fields Via Validator",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.03 - Connectivity Test With User And Password",
              "id": "s1-s19-s1-t3",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                }],
              "name": "03 - Connectivity Test With User And Password",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.04 - Negative Connectivity Test Unknown API Id",
              "id": "s1-s19-s1-t4",
              "keywords": [{
                "arguments": "WHO_IS_THIS, ${API_SECRET_KEY}",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${VERACODE_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Server returned HTTP response code: 401",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "04 - Negative Connectivity Test Unknown API Id",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.05 - Negative Connectivity Test Bad API Id",
              "id": "s1-s19-s1-t5",
              "keywords": [{
                "arguments": "(WHO_IS_THIS), ${API_SECRET_KEY}",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Invalid API ID",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "05 - Negative Connectivity Test Bad API Id",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.06 - Negative Connectivity Test Wrong Hexa API Secret",
              "id": "s1-s19-s1-t6",
              "keywords": [{
                "arguments": "${API_KEY_ID}, Dad123",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${VERACODE_CONNECTIVITY_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Server returned HTTP response code: 401",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "06 - Negative Connectivity Test Wrong Hexa API Secret",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.07 - Negative Connectivity Test Wrong API Secret",
              "id": "s1-s19-s1-t7",
              "keywords": [{
                "arguments": "${API_KEY_ID}, WhatIsThisSecret",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, Invalid API key",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "07 - Negative Connectivity Test Wrong API Secret",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.08 - Negative Connectivity Test Empty API Id",
              "id": "s1-s19-s1-t8",
              "keywords": [{
                "arguments": "${EMPTY}, ${API_SECRET_KEY}",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, apiId endpoint property is empty",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "08 - Negative Connectivity Test Empty API Id",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.09 - Negative Connectivity Test Empty API Secret",
              "id": "s1-s19-s1-t9",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${EMPTY}",
                "name": "${response} = Veracode Connection Test",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, apiSecretKey endpoint property is empty",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "09 - Negative Connectivity Test Empty API Secret",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.10 - Negative Connectivity Test Without endpoint properties",
              "id": "s1-s19-s1-t10",
              "keywords": [{
                "arguments": "${VERACODE_CONNECTIVITY_URL}, {}, com.ca.rp.plugins.dto.model.ConnectivityResult",
                "name": "${response} = Execute Post Operation Class",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.success}",
                  "name": "Should Not Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, ${INPUT_ERROR_PREFIX}",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.errorMessage}, There are no endpoint properties",
                  "name": "Should Match Regexp",
                  "type": "KEYWORD"
                }],
              "name": "10 - Negative Connectivity Test Without endpoint properties",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.11 - Get All Applications",
              "id": "s1-s19-s1-t11",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${VERACODE_GET_APPLICATIONS_URL}?max_results=9999, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}",
                  "name": "${applicationsCount} = Get Length",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${applicationsCount} &gt;= 3",
                  "name": "Should Be True",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${APP_WITHOUT_SCANS}, ${APP_WITH_DYNAMIC_SCANS}, ${APP_WITH_DYNAMIC_STATIC_SCANS}",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "11 - Get All Applications",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.12 - Get Filtered Applications",
              "id": "s1-s19-s1-t12",
              "keywords": [{
                "arguments": "",
                "name": "${ep_properties} = Generate Good Connection Properties JSON",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${VERACODE_GET_APPLICATIONS_URL}?filter=ROBOT%20Application, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, 3",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${APP_WITHOUT_SCANS}, ${APP_WITH_DYNAMIC_SCANS}, ${APP_WITH_DYNAMIC_STATIC_SCANS}",
                  "name": "Dynamic Values Should Contain Values",
                  "type": "KEYWORD"
                }],
              "name": "12 - Get Filtered Applications",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.13 - Get Only Several Applications",
              "id": "s1-s19-s1-t13",
              "keywords": [{
                "arguments": "${count}, 4",
                "name": "Set Test Variable",
                "type": "KEYWORD"
              },
                {
                  "arguments": "",
                  "name": "${ep_properties} = Generate Good Connection Properties JSON",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${properties}, { ${ep_properties} }",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${VERACODE_GET_APPLICATIONS_URL}?max_results=${count}, ${properties}, com.ca.rp.plugins.dto.model.DynamicValuesOutput",
                  "name": "${result} = Execute POST Operation Class",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${result.values}, ${count}",
                  "name": "Length Should Be",
                  "type": "KEYWORD"
                }],
              "name": "13 - Get Only Several Applications",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.14 - Run Dynamic Scan",
              "id": "s1-s19-s1-t14",
              "keywords": [{
                "arguments": "",
                "name": "${application} = Get Robot Application Name Ready For Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}, ${application}",
                  "name": "${properties} = Generate Task Json",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${action}, execute",
                  "name": "Set Test Variable",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${VERACODE_RUN_DYNAMIC_SCAN_URL}, ${properties}, ${action}",
                  "name": "${response} = Execute Task Loop",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FINISHED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "14 - Run Dynamic Scan",
              "tags": ["DEV",
                "nightly",
                "VERACODE"],
              "timeout": "1 hour"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.15 - Negative Run Dynamic Scan With Wrong API KEY ID",
              "id": "s1-s19-s1-t15",
              "keywords": [{
                "arguments": "",
                "name": "${application} = Get Robot Application Name Ready For Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "WRONG_API_KEY_ID, ${API_SECRET_KEY}, ${application}",
                  "name": "${response} = Run Dynamic Scan",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "15 - Negative Run Dynamic Scan With Wrong API KEY ID",
              "tags": ["DEV",
                "VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.16 - Negative Run Dynamic Scan With Wrong API SECRET KEY",
              "id": "s1-s19-s1-t16",
              "keywords": [{
                "arguments": "",
                "name": "${application} = Get Robot Application Name Ready For Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${API_KEY_ID}, WRONG_API_SECRET_KEY, ${application}",
                  "name": "${response} = Run Dynamic Scan",
                  "type": "KEYWORD"
                },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "16 - Negative Run Dynamic Scan With Wrong API SECRET KEY",
              "tags": ["DEV",
                "VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.17 - Negative Run Dynamic Scan With Non Existing Application",
              "id": "s1-s19-s1-t17",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}, NON_EXISTING_APP",
                "name": "${response} = Run Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "17 - Negative Run Dynamic Scan With Non Existing Application",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.18 - Negative Run Dynamic Scan With App That Has No Scan",
              "id": "s1-s19-s1-t18",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}, ${APP_WITHOUT_SCANS}",
                "name": "${response} = Run Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "18 - Negative Run Dynamic Scan With App That Has No Scan",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.19 - Negative Run Dynamic Scan With App That Has A Failed Pre Scan",
              "id": "s1-s19-s1-t19",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}, ${APP_WITH_DYNAMIC_SCANS}",
                "name": "${response} = Run Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "19 - Negative Run Dynamic Scan With App That Has A Failed Pre Scan",
              "tags": ["VERACODE"],
              "timeout": "5 minutes"
            },
            {
              "doc": "",
              "fullName": "Cdd-Plugins.Veracode.02 Veracode Plugin.20 - Negative Run Dynamic Scan With App That Has A Failed Dynamic Scan",
              "id": "s1-s19-s1-t20",
              "keywords": [{
                "arguments": "${API_KEY_ID}, ${API_SECRET_KEY}, ${APP_WITH_DYNAMIC_STATIC_SCANS}",
                "name": "${response} = Run Dynamic Scan",
                "type": "KEYWORD"
              },
                {
                  "arguments": "${response.externalTaskExecutionStatus}, ${FAILED}",
                  "name": "Should Be Equal As Strings",
                  "type": "KEYWORD"
                }],
              "name": "20 - Negative Run Dynamic Scan With App That Has A Failed Dynamic Scan",
              "tags": ["DEV",
                "nightly",
                "VERACODE"],
              "timeout": "1 hour"
            }]
        }],
        "tests": []
      }],
    "tests": []
  },
  "title": "Cdd-Plugins"
}